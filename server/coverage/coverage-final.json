{"/usr/src/app/src/routes.ts": {"path":"/usr/src/app/src/routes.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":15},"end":{"line":3,"column":32}},"2":{"start":{"line":5,"column":29},"end":{"line":5,"column":65}},"3":{"start":{"line":6,"column":25},"end":{"line":6,"column":57}},"4":{"start":{"line":8,"column":19},"end":{"line":8,"column":46}},"5":{"start":{"line":9,"column":4},"end":{"line":9,"column":62}},"6":{"start":{"line":10,"column":4},"end":{"line":10,"column":68}},"7":{"start":{"line":11,"column":4},"end":{"line":11,"column":79}},"8":{"start":{"line":12,"column":4},"end":{"line":12,"column":89}},"9":{"start":{"line":13,"column":4},"end":{"line":13,"column":82}},"10":{"start":{"line":14,"column":4},"end":{"line":14,"column":74}},"11":{"start":{"line":15,"column":4},"end":{"line":15,"column":67}},"12":{"start":{"line":16,"column":4},"end":{"line":16,"column":71}},"13":{"start":{"line":17,"column":4},"end":{"line":17,"column":71}},"14":{"start":{"line":18,"column":4},"end":{"line":18,"column":96}},"15":{"start":{"line":19,"column":4},"end":{"line":19,"column":77}},"16":{"start":{"line":21,"column":0},"end":{"line":21,"column":22}}},"fnMap":{"0":{"name":"setup","decl":{"start":{"line":7,"column":9},"end":{"line":7,"column":14}},"loc":{"start":{"line":7,"column":20},"end":{"line":20,"column":1}},"line":7}},"branchMap":{},"s":{"0":3,"1":3,"2":3,"3":3,"4":3,"5":3,"6":3,"7":3,"8":3,"9":3,"10":3,"11":3,"12":3,"13":3,"14":3,"15":3,"16":3},"f":{"0":3},"b":{},"inputSourceMap":{"version":3,"file":"routes.js","sourceRoot":"","sources":["routes.ts"],"names":[],"mappings":";;AACA,iCAAiC;AAEjC,+BAA+B;AAC/B,kEAAkE;AAClE,0DAA0D;AAE1D,eAAsB,GAAY;IAChC,MAAM,MAAM,GAAG,MAAM,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC;IAE3C,GAAG,CAAC,IAAI,CAAC,WAAW,EAAE,gBAAgB,CAAC,iBAAiB,CAAC,CAAC;IAE1D,GAAG,CAAC,IAAI,CAAC,iBAAiB,EAAE,oBAAoB,CAAC,aAAa,CAAC,CAAC;IAChE,GAAG,CAAC,IAAI,CAAC,uBAAuB,EAAE,oBAAoB,CAAC,kBAAkB,CAAC,CAAC;IAC3E,GAAG,CAAC,IAAI,CAAC,aAAa,EAAE,MAAM,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,oBAAoB,CAAC,eAAe,CAAC,CAAC;IACrF,GAAG,CAAC,IAAI,CAAC,wBAAwB,EAAE,oBAAoB,CAAC,oBAAoB,CAAC,CAAC;IAC9E,GAAG,CAAC,IAAI,CAAC,oBAAoB,EAAE,oBAAoB,CAAC,gBAAgB,CAAC,CAAC;IACtE,GAAG,CAAC,IAAI,CAAC,cAAc,EAAE,oBAAoB,CAAC,eAAe,CAAC,CAAC;IAE/D,GAAG,CAAC,IAAI,CAAC,gBAAgB,EAAE,oBAAoB,CAAC,iBAAiB,CAAC,CAAC;IAEnE,GAAG,CAAC,GAAG,CAAC,mBAAmB,EAAE,oBAAoB,CAAC,eAAe,CAAC,CAAC;IACnE,GAAG,CAAC,GAAG,CAAC,sCAAsC,EAAE,oBAAoB,CAAC,qBAAqB,CAAC,CAAC;IAC5F,GAAG,CAAC,GAAG,CAAC,0BAA0B,EAAE,oBAAoB,CAAC,cAAc,CAAC,CAAC;AAC3E,CAAC;AAjBD,sBAiBC","sourcesContent":["import { Express } from \"express\";\r\nimport * as multer from \"multer\";\r\n\r\n// Controllers (route handlers)\r\nimport * as applicationControler from \"./controllers/application\";\r\nimport * as sandboxControler from \"./controllers/sandbox\";\r\n\r\nexport function setup(app: Express) {\r\n  const upload = multer({ dest: \"./temp/\" });\r\n\r\n  app.post(\"/register\", sandboxControler.registerContainer);\r\n\r\n  app.post(\"/api/create/app\", applicationControler.postCreateApp);\r\n  app.post(\"/api/create/algorithm\", applicationControler.postCreatAlgorithm);\r\n  app.post(\"/api/upload\", upload.array(\"files\"), applicationControler.postUploadFiles);\r\n  app.post(\"/api/create/parameters\", applicationControler.postUpdateParameters);\r\n  app.post(\"/api/create/output\", applicationControler.postUpdateOutput);\r\n  app.post(\"/api/invoke/\", applicationControler.invokeAlgorithm);\r\n\r\n  app.post(\"/api/invoke/v2\", applicationControler.invokeAlgorithmV2);\r\n\r\n  app.get(\"/api/applications\", applicationControler.getApplications);\r\n  app.get(\"/api/application/:app_id/:version_id\", applicationControler.getApplicationVersion);\r\n  app.get(\"/api/application/:app_id\", applicationControler.getApplication);\r\n}\r\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"1ce3909ce52adebc9950c26a7973098162e45022"}
,"/usr/src/app/src/controllers/application.ts": {"path":"/usr/src/app/src/controllers/application.ts","statementMap":{"0":{"start":{"line":3,"column":4},"end":{"line":3,"column":71}},"1":{"start":{"line":3,"column":21},"end":{"line":3,"column":71}},"2":{"start":{"line":3,"column":53},"end":{"line":3,"column":71}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"4":{"start":{"line":6,"column":22},"end":{"line":6,"column":54}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":37}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":35}},"7":{"start":{"line":10,"column":4},"end":{"line":24,"column":7}},"8":{"start":{"line":13,"column":8},"end":{"line":14,"column":29}},"9":{"start":{"line":14,"column":12},"end":{"line":14,"column":29}},"10":{"start":{"line":15,"column":8},"end":{"line":22,"column":9}},"11":{"start":{"line":16,"column":12},"end":{"line":21,"column":13}},"12":{"start":{"line":17,"column":31},"end":{"line":17,"column":53}},"13":{"start":{"line":18,"column":16},"end":{"line":20,"column":17}},"14":{"start":{"line":19,"column":20},"end":{"line":19,"column":40}},"15":{"start":{"line":23,"column":8},"end":{"line":23,"column":42}},"16":{"start":{"line":26,"column":0},"end":{"line":26,"column":42}},"17":{"start":{"line":28,"column":4},"end":{"line":34,"column":5}},"18":{"start":{"line":29,"column":8},"end":{"line":33,"column":9}},"19":{"start":{"line":30,"column":12},"end":{"line":32,"column":13}},"20":{"start":{"line":31,"column":16},"end":{"line":31,"column":38}},"21":{"start":{"line":35,"column":4},"end":{"line":35,"column":31}},"22":{"start":{"line":38,"column":4},"end":{"line":47,"column":7}},"23":{"start":{"line":41,"column":8},"end":{"line":42,"column":29}},"24":{"start":{"line":42,"column":12},"end":{"line":42,"column":29}},"25":{"start":{"line":43,"column":8},"end":{"line":45,"column":9}},"26":{"start":{"line":44,"column":12},"end":{"line":44,"column":66}},"27":{"start":{"line":46,"column":8},"end":{"line":46,"column":45}},"28":{"start":{"line":49,"column":0},"end":{"line":49,"column":40}},"29":{"start":{"line":51,"column":4},"end":{"line":92,"column":7}},"30":{"start":{"line":85,"column":8},"end":{"line":86,"column":29}},"31":{"start":{"line":86,"column":12},"end":{"line":86,"column":29}},"32":{"start":{"line":87,"column":8},"end":{"line":89,"column":9}},"33":{"start":{"line":88,"column":12},"end":{"line":88,"column":66}},"34":{"start":{"line":90,"column":8},"end":{"line":90,"column":49}},"35":{"start":{"line":91,"column":8},"end":{"line":91,"column":45}},"36":{"start":{"line":94,"column":0},"end":{"line":94,"column":54}}},"fnMap":{"0":{"name":"__export","decl":{"start":{"line":2,"column":9},"end":{"line":2,"column":17}},"loc":{"start":{"line":2,"column":21},"end":{"line":4,"column":1}},"line":2},"1":{"name":"getApplications","decl":{"start":{"line":9,"column":9},"end":{"line":9,"column":24}},"loc":{"start":{"line":9,"column":41},"end":{"line":25,"column":1}},"line":9},"2":{"name":"(anonymous_2)","decl":{"start":{"line":12,"column":14},"end":{"line":12,"column":15}},"loc":{"start":{"line":12,"column":29},"end":{"line":24,"column":5}},"line":12},"3":{"name":"containsSubstr","decl":{"start":{"line":27,"column":9},"end":{"line":27,"column":23}},"loc":{"start":{"line":27,"column":39},"end":{"line":36,"column":1}},"line":27},"4":{"name":"getApplication","decl":{"start":{"line":37,"column":9},"end":{"line":37,"column":23}},"loc":{"start":{"line":37,"column":40},"end":{"line":48,"column":1}},"line":37},"5":{"name":"(anonymous_5)","decl":{"start":{"line":40,"column":14},"end":{"line":40,"column":15}},"loc":{"start":{"line":40,"column":29},"end":{"line":47,"column":5}},"line":40},"6":{"name":"getApplicationVersion","decl":{"start":{"line":50,"column":9},"end":{"line":50,"column":30}},"loc":{"start":{"line":50,"column":47},"end":{"line":93,"column":1}},"line":50},"7":{"name":"(anonymous_7)","decl":{"start":{"line":84,"column":14},"end":{"line":84,"column":15}},"loc":{"start":{"line":84,"column":29},"end":{"line":92,"column":5}},"line":84}},"branchMap":{"0":{"loc":{"start":{"line":3,"column":21},"end":{"line":3,"column":71}},"type":"if","locations":[{"start":{"line":3,"column":21},"end":{"line":3,"column":71}},{"start":{"line":3,"column":21},"end":{"line":3,"column":71}}],"line":3},"1":{"loc":{"start":{"line":13,"column":8},"end":{"line":14,"column":29}},"type":"if","locations":[{"start":{"line":13,"column":8},"end":{"line":14,"column":29}},{"start":{"line":13,"column":8},"end":{"line":14,"column":29}}],"line":13},"2":{"loc":{"start":{"line":15,"column":8},"end":{"line":22,"column":9}},"type":"if","locations":[{"start":{"line":15,"column":8},"end":{"line":22,"column":9}},{"start":{"line":15,"column":8},"end":{"line":22,"column":9}}],"line":15},"3":{"loc":{"start":{"line":18,"column":16},"end":{"line":20,"column":17}},"type":"if","locations":[{"start":{"line":18,"column":16},"end":{"line":20,"column":17}},{"start":{"line":18,"column":16},"end":{"line":20,"column":17}}],"line":18},"4":{"loc":{"start":{"line":30,"column":12},"end":{"line":32,"column":13}},"type":"if","locations":[{"start":{"line":30,"column":12},"end":{"line":32,"column":13}},{"start":{"line":30,"column":12},"end":{"line":32,"column":13}}],"line":30},"5":{"loc":{"start":{"line":41,"column":8},"end":{"line":42,"column":29}},"type":"if","locations":[{"start":{"line":41,"column":8},"end":{"line":42,"column":29}},{"start":{"line":41,"column":8},"end":{"line":42,"column":29}}],"line":41},"6":{"loc":{"start":{"line":43,"column":8},"end":{"line":45,"column":9}},"type":"if","locations":[{"start":{"line":43,"column":8},"end":{"line":45,"column":9}},{"start":{"line":43,"column":8},"end":{"line":45,"column":9}}],"line":43},"7":{"loc":{"start":{"line":85,"column":8},"end":{"line":86,"column":29}},"type":"if","locations":[{"start":{"line":85,"column":8},"end":{"line":86,"column":29}},{"start":{"line":85,"column":8},"end":{"line":86,"column":29}}],"line":85},"8":{"loc":{"start":{"line":87,"column":8},"end":{"line":89,"column":9}},"type":"if","locations":[{"start":{"line":87,"column":8},"end":{"line":89,"column":9}},{"start":{"line":87,"column":8},"end":{"line":89,"column":9}}],"line":87}},"s":{"0":6,"1":21,"2":21,"3":3,"4":3,"5":3,"6":3,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":3,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":3,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":3},"f":{"0":6,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"b":{"0":[21,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"inputSourceMap":{"version":3,"file":"application.js","sourceRoot":"","sources":["application.ts"],"names":[],"mappings":"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","sourcesContent":["import { Request, Response, NextFunction } from \"express\";\r\n\r\nimport { default as Application } from \"../models/Application\";\r\nimport { Sandbox } from \"../docker_sandbox/sandbox\";\r\n\r\nexport * from \"./app.creation/\";\r\nexport * from \"./app.invoke/\";\r\n\r\nexport function getApplications(req: Request, res: Response, next: NextFunction) {\r\n  Application.find({}, { algorithms: { $slice: -1 } })\r\n    .select(\"-_id author name description id algorithms.id algorithms.version algorithms.description\")\r\n    .exec((err, apps) => {\r\n      if (err) return next(err);\r\n      if (req.query.q) {\r\n        for (let i = 0; i < apps.length; ++i) {\r\n          const tokens = req.query.q.split(\" \");\r\n          if (!containsSubstr([(<any>apps[i]).name, (<any>apps[i]).author], tokens)) {\r\n            apps.splice(i--, 1);\r\n          }\r\n        }\r\n      }\r\n      return res.status(200).json(apps);\r\n    });\r\n}\r\n\r\nfunction containsSubstr(names: string[], tokens: string[]) {\r\n  for (const name of names) {\r\n    for (let i = 0; i < tokens.length; ++i) {\r\n      if (name.toLowerCase().indexOf(tokens[i].toLowerCase()) >= 0) {\r\n        tokens.splice(i--, 1);\r\n      }\r\n    }\r\n  }\r\n  return tokens.length === 0;\r\n}\r\n\r\nexport function getApplication(req: Request, res: Response, next: NextFunction) {\r\n  Application.find({ id: req.params.app_id })\r\n    .select(\"-_id -__v\")\r\n    .exec((err, apps) => {\r\n      if (err) return next(err);\r\n      if (apps.length === 0) {\r\n        return res.status(404).send(\"Application Not Found!\");\r\n      }\r\n      return res.status(200).json(apps[0]);\r\n    });\r\n}\r\n\r\nexport function getApplicationVersion(req: Request, res: Response, next: NextFunction) {\r\n  Application.aggregate([\r\n    { $match: { id: req.params.app_id, \"algorithms.id\": req.params.version_id } },\r\n    { $project: { _id: 0, __v: 0 } },\r\n    {\r\n      $project: {\r\n        algorithms: {\r\n          $filter: {\r\n            input: \"$algorithms\",\r\n            as: \"a\",\r\n            cond: {\r\n              $ne: [\"$$a.id\", req.params.version_id]\r\n            }\r\n          }\r\n        },\r\n        id: 1,\r\n        description: 1,\r\n        name: 1,\r\n        author: 1,\r\n        algorithm: {\r\n          $filter: {\r\n            input: \"$algorithms\",\r\n            as: \"a\",\r\n            cond: {\r\n              $eq: [\"$$a.id\", req.params.version_id]\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    {\r\n      $project: { \"algorithms.parameters\": 0, \"algorithms.entryApp\": 0, \"algorithms.files\": 0 }\r\n    }])\r\n    .exec((err, apps) => {\r\n      if (err) return next(err);\r\n      if (apps.length === 0) {\r\n        return res.status(404).send(\"Application Not Found!\");\r\n      }\r\n      apps[0].algorithm = apps[0].algorithm[0];\r\n      return res.status(200).json(apps[0]);\r\n    });\r\n}\r\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"ec1d177147106f249914f08bc35a4f542bd458e7"}
,"/usr/src/app/src/controllers/sandbox.ts": {"path":"/usr/src/app/src/controllers/sandbox.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":18},"end":{"line":3,"column":54}},"2":{"start":{"line":5,"column":4},"end":{"line":5,"column":99}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":26}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":46}}},"fnMap":{"0":{"name":"registerContainer","decl":{"start":{"line":4,"column":9},"end":{"line":4,"column":26}},"loc":{"start":{"line":4,"column":37},"end":{"line":7,"column":1}},"line":4}},"branchMap":{},"s":{"0":3,"1":3,"2":0,"3":0,"4":3},"f":{"0":0},"b":{},"inputSourceMap":{"version":3,"file":"sandbox.js","sourceRoot":"","sources":["sandbox.ts"],"names":[],"mappings":";;AAEA,uDAAoD;AAEpD,2BAAkC,GAAY,EAAE,GAAa;IAC3D,iBAAO,CAAC,WAAW,EAAE,CAAC,YAAY,CAAC,GAAG,CAAC,UAAU,CAAC,aAAa,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC,CAAC;IACrF,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE,CAAC;AACxB,CAAC;AAHD,8CAGC","sourcesContent":["import { Request, Response, NextFunction } from \"express\";\r\n\r\nimport { Sandbox } from \"../docker_sandbox/sandbox\";\r\n\r\nexport function registerContainer(req: Request, res: Response) {\r\n  Sandbox.getInstance().addContainer(req.connection.remoteAddress.replace(/^.*:/, \"\"));\r\n  res.status(200).end();\r\n}\r\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"f47f385109a2475fcbf8ca5912b1ab932115d3c8"}
,"/usr/src/app/src/controllers/app.creation/index.ts": {"path":"/usr/src/app/src/controllers/app.creation/index.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":22},"end":{"line":3,"column":48}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":50}},"3":{"start":{"line":5,"column":23},"end":{"line":5,"column":50}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":56}},"5":{"start":{"line":7,"column":20},"end":{"line":7,"column":44}},"6":{"start":{"line":8,"column":0},"end":{"line":8,"column":49}},"7":{"start":{"line":9,"column":25},"end":{"line":9,"column":54}},"8":{"start":{"line":10,"column":0},"end":{"line":10,"column":57}},"9":{"start":{"line":11,"column":0},"end":{"line":11,"column":67}}},"fnMap":{},"branchMap":{},"s":{"0":3,"1":3,"2":3,"3":3,"4":3,"5":3,"6":3,"7":3,"8":3,"9":3},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":";;AAAA,iDAA6D;AAApD,0CAAA,OAAO,CAAmB;AACnC,mDAAmE;AAA1D,gDAAA,OAAO,CAAwB;AACxC,6CAA4D;AAAnD,yCAAA,OAAO,CAAoB;AACpC,uDAAuE;AAA9D,2CAAA,aAAa,CAAA;AAAE,gDAAA,kBAAkB,CAAA","sourcesContent":["export { default as postUploadFiles } from \"./post.uploader\";\r\nexport { default as postUpdateParameters } from \"./post.parameter\";\r\nexport { default as postUpdateOutput } from \"./post.output\";\r\nexport { postCreateApp, postCreatAlgorithm } from \"./post.application\";\r\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"389acc529007946ce54c525690dc3945287ea414"}
,"/usr/src/app/src/controllers/app.creation/post.application.ts": {"path":"/usr/src/app/src/controllers/app.creation/post.application.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":9,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":8,"column":7}},"2":{"start":{"line":4,"column":36},"end":{"line":4,"column":97}},"3":{"start":{"line":4,"column":42},"end":{"line":4,"column":70}},"4":{"start":{"line":4,"column":85},"end":{"line":4,"column":95}},"5":{"start":{"line":5,"column":35},"end":{"line":5,"column":100}},"6":{"start":{"line":5,"column":41},"end":{"line":5,"column":73}},"7":{"start":{"line":5,"column":88},"end":{"line":5,"column":98}},"8":{"start":{"line":6,"column":32},"end":{"line":6,"column":149}},"9":{"start":{"line":6,"column":97},"end":{"line":6,"column":119}},"10":{"start":{"line":7,"column":8},"end":{"line":7,"column":78}},"11":{"start":{"line":10,"column":0},"end":{"line":10,"column":62}},"12":{"start":{"line":11,"column":16},"end":{"line":11,"column":44}},"13":{"start":{"line":12,"column":22},"end":{"line":12,"column":57}},"14":{"start":{"line":14,"column":4},"end":{"line":50,"column":7}},"15":{"start":{"line":15,"column":23},"end":{"line":15,"column":25}},"16":{"start":{"line":16,"column":8},"end":{"line":18,"column":9}},"17":{"start":{"line":17,"column":12},"end":{"line":17,"column":72}},"18":{"start":{"line":19,"column":8},"end":{"line":21,"column":9}},"19":{"start":{"line":20,"column":12},"end":{"line":20,"column":70}},"20":{"start":{"line":22,"column":8},"end":{"line":27,"column":9}},"21":{"start":{"line":23,"column":12},"end":{"line":23,"column":59}},"22":{"start":{"line":26,"column":12},"end":{"line":26,"column":62}},"23":{"start":{"line":28,"column":8},"end":{"line":30,"column":9}},"24":{"start":{"line":29,"column":12},"end":{"line":29,"column":52}},"25":{"start":{"line":31,"column":20},"end":{"line":36,"column":10}},"26":{"start":{"line":37,"column":8},"end":{"line":45,"column":9}},"27":{"start":{"line":38,"column":12},"end":{"line":38,"column":29}},"28":{"start":{"line":41,"column":12},"end":{"line":43,"column":13}},"29":{"start":{"line":42,"column":16},"end":{"line":42,"column":129}},"30":{"start":{"line":44,"column":12},"end":{"line":44,"column":29}},"31":{"start":{"line":46,"column":23},"end":{"line":46,"column":37}},"32":{"start":{"line":47,"column":8},"end":{"line":47,"column":26}},"33":{"start":{"line":48,"column":8},"end":{"line":48,"column":26}},"34":{"start":{"line":49,"column":8},"end":{"line":49,"column":41}},"35":{"start":{"line":52,"column":0},"end":{"line":52,"column":38}},"36":{"start":{"line":54,"column":4},"end":{"line":110,"column":7}},"37":{"start":{"line":55,"column":23},"end":{"line":55,"column":25}},"38":{"start":{"line":56,"column":8},"end":{"line":58,"column":9}},"39":{"start":{"line":57,"column":12},"end":{"line":57,"column":62}},"40":{"start":{"line":59,"column":8},"end":{"line":61,"column":9}},"41":{"start":{"line":60,"column":12},"end":{"line":60,"column":63}},"42":{"start":{"line":62,"column":8},"end":{"line":64,"column":9}},"43":{"start":{"line":63,"column":12},"end":{"line":63,"column":67}},"44":{"start":{"line":65,"column":8},"end":{"line":67,"column":9}},"45":{"start":{"line":66,"column":12},"end":{"line":66,"column":52}},"46":{"start":{"line":69,"column":8},"end":{"line":74,"column":9}},"47":{"start":{"line":70,"column":12},"end":{"line":70,"column":89}},"48":{"start":{"line":73,"column":12},"end":{"line":73,"column":29}},"49":{"start":{"line":75,"column":26},"end":{"line":82,"column":9}},"50":{"start":{"line":83,"column":8},"end":{"line":109,"column":9}},"51":{"start":{"line":84,"column":12},"end":{"line":84,"column":104}},"52":{"start":{"line":87,"column":33},"end":{"line":89,"column":14}},"53":{"start":{"line":88,"column":16},"end":{"line":88,"column":57}},"54":{"start":{"line":90,"column":12},"end":{"line":108,"column":13}},"55":{"start":{"line":91,"column":16},"end":{"line":91,"column":119}},"56":{"start":{"line":94,"column":16},"end":{"line":94,"column":55}},"57":{"start":{"line":95,"column":16},"end":{"line":100,"column":17}},"58":{"start":{"line":96,"column":20},"end":{"line":96,"column":45}},"59":{"start":{"line":99,"column":20},"end":{"line":99,"column":37}},"60":{"start":{"line":101,"column":28},"end":{"line":101,"column":50}},"61":{"start":{"line":102,"column":16},"end":{"line":104,"column":24}},"62":{"start":{"line":103,"column":24},"end":{"line":103,"column":65}},"63":{"start":{"line":105,"column":16},"end":{"line":105,"column":31}},"64":{"start":{"line":106,"column":16},"end":{"line":106,"column":31}},"65":{"start":{"line":107,"column":16},"end":{"line":107,"column":41}},"66":{"start":{"line":112,"column":0},"end":{"line":112,"column":48}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":3,"column":36},"end":{"line":3,"column":37}},"loc":{"start":{"line":3,"column":63},"end":{"line":8,"column":5}},"line":3},"2":{"name":"fulfilled","decl":{"start":{"line":4,"column":17},"end":{"line":4,"column":26}},"loc":{"start":{"line":4,"column":34},"end":{"line":4,"column":99}},"line":4},"3":{"name":"rejected","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":25}},"loc":{"start":{"line":5,"column":33},"end":{"line":5,"column":102}},"line":5},"4":{"name":"step","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":21}},"loc":{"start":{"line":6,"column":30},"end":{"line":6,"column":151}},"line":6},"5":{"name":"(anonymous_5)","decl":{"start":{"line":6,"column":76},"end":{"line":6,"column":77}},"loc":{"start":{"line":6,"column":95},"end":{"line":6,"column":121}},"line":6},"6":{"name":"postCreateApp","decl":{"start":{"line":13,"column":9},"end":{"line":13,"column":22}},"loc":{"start":{"line":13,"column":39},"end":{"line":51,"column":1}},"line":13},"7":{"name":"(anonymous_7)","decl":{"start":{"line":14,"column":43},"end":{"line":14,"column":44}},"loc":{"start":{"line":14,"column":56},"end":{"line":50,"column":5}},"line":14},"8":{"name":"postCreatAlgorithm","decl":{"start":{"line":53,"column":9},"end":{"line":53,"column":27}},"loc":{"start":{"line":53,"column":44},"end":{"line":111,"column":1}},"line":53},"9":{"name":"(anonymous_9)","decl":{"start":{"line":54,"column":43},"end":{"line":54,"column":44}},"loc":{"start":{"line":54,"column":56},"end":{"line":110,"column":5}},"line":54},"10":{"name":"(anonymous_10)","decl":{"start":{"line":87,"column":61},"end":{"line":87,"column":62}},"loc":{"start":{"line":87,"column":71},"end":{"line":89,"column":13}},"line":87},"11":{"name":"(anonymous_11)","decl":{"start":{"line":102,"column":62},"end":{"line":102,"column":63}},"loc":{"start":{"line":102,"column":72},"end":{"line":104,"column":21}},"line":102}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":9,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":9,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":16},"end":{"line":3,"column":34}},"type":"binary-expr","locations":[{"start":{"line":3,"column":16},"end":{"line":3,"column":17}},{"start":{"line":3,"column":22},"end":{"line":3,"column":33}}],"line":3},"2":{"loc":{"start":{"line":6,"column":32},"end":{"line":6,"column":148}},"type":"cond-expr","locations":[{"start":{"line":6,"column":46},"end":{"line":6,"column":67}},{"start":{"line":6,"column":70},"end":{"line":6,"column":148}}],"line":6},"3":{"loc":{"start":{"line":7,"column":51},"end":{"line":7,"column":67}},"type":"binary-expr","locations":[{"start":{"line":7,"column":51},"end":{"line":7,"column":61}},{"start":{"line":7,"column":65},"end":{"line":7,"column":67}}],"line":7},"4":{"loc":{"start":{"line":16,"column":8},"end":{"line":18,"column":9}},"type":"if","locations":[{"start":{"line":16,"column":8},"end":{"line":18,"column":9}},{"start":{"line":16,"column":8},"end":{"line":18,"column":9}}],"line":16},"5":{"loc":{"start":{"line":19,"column":8},"end":{"line":21,"column":9}},"type":"if","locations":[{"start":{"line":19,"column":8},"end":{"line":21,"column":9}},{"start":{"line":19,"column":8},"end":{"line":21,"column":9}}],"line":19},"6":{"loc":{"start":{"line":22,"column":8},"end":{"line":27,"column":9}},"type":"if","locations":[{"start":{"line":22,"column":8},"end":{"line":27,"column":9}},{"start":{"line":22,"column":8},"end":{"line":27,"column":9}}],"line":22},"7":{"loc":{"start":{"line":22,"column":12},"end":{"line":22,"column":75}},"type":"binary-expr","locations":[{"start":{"line":22,"column":12},"end":{"line":22,"column":51}},{"start":{"line":22,"column":55},"end":{"line":22,"column":75}}],"line":22},"8":{"loc":{"start":{"line":26,"column":35},"end":{"line":26,"column":61}},"type":"binary-expr","locations":[{"start":{"line":26,"column":35},"end":{"line":26,"column":55}},{"start":{"line":26,"column":59},"end":{"line":26,"column":61}}],"line":26},"9":{"loc":{"start":{"line":28,"column":8},"end":{"line":30,"column":9}},"type":"if","locations":[{"start":{"line":28,"column":8},"end":{"line":30,"column":9}},{"start":{"line":28,"column":8},"end":{"line":30,"column":9}}],"line":28},"10":{"loc":{"start":{"line":41,"column":12},"end":{"line":43,"column":13}},"type":"if","locations":[{"start":{"line":41,"column":12},"end":{"line":43,"column":13}},{"start":{"line":41,"column":12},"end":{"line":43,"column":13}}],"line":41},"11":{"loc":{"start":{"line":56,"column":8},"end":{"line":58,"column":9}},"type":"if","locations":[{"start":{"line":56,"column":8},"end":{"line":58,"column":9}},{"start":{"line":56,"column":8},"end":{"line":58,"column":9}}],"line":56},"12":{"loc":{"start":{"line":59,"column":8},"end":{"line":61,"column":9}},"type":"if","locations":[{"start":{"line":59,"column":8},"end":{"line":61,"column":9}},{"start":{"line":59,"column":8},"end":{"line":61,"column":9}}],"line":59},"13":{"loc":{"start":{"line":59,"column":12},"end":{"line":59,"column":81}},"type":"binary-expr","locations":[{"start":{"line":59,"column":12},"end":{"line":59,"column":47}},{"start":{"line":59,"column":51},"end":{"line":59,"column":81}}],"line":59},"14":{"loc":{"start":{"line":62,"column":8},"end":{"line":64,"column":9}},"type":"if","locations":[{"start":{"line":62,"column":8},"end":{"line":64,"column":9}},{"start":{"line":62,"column":8},"end":{"line":64,"column":9}}],"line":62},"15":{"loc":{"start":{"line":62,"column":12},"end":{"line":62,"column":75}},"type":"binary-expr","locations":[{"start":{"line":62,"column":12},"end":{"line":62,"column":51}},{"start":{"line":62,"column":55},"end":{"line":62,"column":75}}],"line":62},"16":{"loc":{"start":{"line":65,"column":8},"end":{"line":67,"column":9}},"type":"if","locations":[{"start":{"line":65,"column":8},"end":{"line":67,"column":9}},{"start":{"line":65,"column":8},"end":{"line":67,"column":9}}],"line":65},"17":{"loc":{"start":{"line":83,"column":8},"end":{"line":109,"column":9}},"type":"if","locations":[{"start":{"line":83,"column":8},"end":{"line":109,"column":9}},{"start":{"line":83,"column":8},"end":{"line":109,"column":9}}],"line":83},"18":{"loc":{"start":{"line":90,"column":12},"end":{"line":108,"column":13}},"type":"if","locations":[{"start":{"line":90,"column":12},"end":{"line":108,"column":13}},{"start":{"line":90,"column":12},"end":{"line":108,"column":13}}],"line":90}},"s":{"0":3,"1":13,"2":8,"3":8,"4":0,"5":1,"6":1,"7":0,"8":22,"9":9,"10":13,"11":3,"12":3,"13":3,"14":7,"15":7,"16":7,"17":2,"18":7,"19":2,"20":7,"21":0,"22":7,"23":7,"24":4,"25":3,"26":3,"27":3,"28":1,"29":1,"30":0,"31":2,"32":2,"33":2,"34":2,"35":3,"36":6,"37":6,"38":6,"39":0,"40":6,"41":1,"42":6,"43":1,"44":6,"45":2,"46":4,"47":4,"48":0,"49":4,"50":4,"51":1,"52":3,"53":1,"54":3,"55":1,"56":2,"57":2,"58":2,"59":0,"60":2,"61":2,"62":2,"63":2,"64":2,"65":2,"66":3},"f":{"0":13,"1":13,"2":8,"3":1,"4":22,"5":9,"6":7,"7":7,"8":6,"9":6,"10":1,"11":2},"b":{"0":[3,3,3],"1":[13,13],"2":[13,9],"3":[13,13],"4":[2,5],"5":[2,5],"6":[0,7],"7":[7,1],"8":[7,1],"9":[4,3],"10":[1,0],"11":[0,6],"12":[1,5],"13":[6,5],"14":[1,5],"15":[6,5],"16":[2,4],"17":[1,3],"18":[1,2]},"inputSourceMap":{"version":3,"file":"post.application.js","sourceRoot":"","sources":["post.application.ts"],"names":[],"mappings":"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","sourcesContent":["import { Request, Response, NextFunction } from \"express\";\r\n\r\nimport { isString } from \"../../utils/utils\";\r\nimport { default as Application, ApplicationModel, AlgorithmModel } from \"../../models/Application\";\r\n\r\n\r\nexport async function postCreateApp(req: Request, res: Response, next: NextFunction) {\r\n  const errors: string[] = [];\r\n\r\n  if (!isString(req.body.author, 3)) {\r\n    errors.push(\"`author` must be at least 3 characters long.\");\r\n  }\r\n\r\n  if (!isString(req.body.name, 3)) {\r\n    errors.push(\"`name` must be at least 3 characters long.\");\r\n  }\r\n\r\n  if (!isString(req.body.description) && req.body.description) {\r\n    errors.push(\"`description` must be a string.\");\r\n  }\r\n  else {\r\n    req.body.description = req.body.description || \"\";\r\n  }\r\n\r\n  if (errors.length !== 0) {\r\n    return res.status(400).json({ errors });\r\n  }\r\n\r\n  const app = new Application({\r\n    author: req.body.author,\r\n    name: req.body.name,\r\n    description: req.body.description,\r\n    algorithms: []\r\n  });\r\n\r\n  try {\r\n    await app.save();\r\n  }\r\n  catch (err) {\r\n    if (err.code === 11000) {\r\n      return res.status(400).json({ errors: [\"There is already an application with the specified name and author.\"] });\r\n    }\r\n    return next(err);\r\n  }\r\n\r\n  const resApp = app.toObject();\r\n  delete resApp._id;\r\n  delete resApp.__v;\r\n\r\n  return res.json({ app: resApp });\r\n}\r\n\r\nexport async function postCreatAlgorithm(req: Request, res: Response, next: NextFunction) {\r\n  const errors: string[] = [];\r\n\r\n  if (!isString(req.body.app_id)) {\r\n    errors.push(\"Failed to cast `app_id` to string.\");\r\n  }\r\n\r\n  if (!isString(req.body.version) || Number.isNaN(req.body.version)) {\r\n    errors.push(\"Failed to cast `version` to string.\");\r\n  }\r\n\r\n  if (!isString(req.body.description) && req.body.description) {\r\n    errors.push(\"Failed to cast `description` to string.\");\r\n  }\r\n\r\n  if (errors.length !== 0) {\r\n    return res.status(400).json({ errors });\r\n  }\r\n\r\n  let existingApp: ApplicationModel;\r\n\r\n  try {\r\n    existingApp = <ApplicationModel>(await Application.findOne({ id: req.body.app_id }));\r\n  }\r\n  catch (err) {\r\n    return next(err);\r\n  }\r\n\r\n  const algorithm: AlgorithmModel = {\r\n    version: req.body.version,\r\n    description: req.body.description,\r\n    entryApp: undefined,\r\n    files: [],\r\n    parameters: [],\r\n    output: { }\r\n  };\r\n\r\n  if (!existingApp) {\r\n    return res.status(400).json({ errors: [\"There is no application with the specified id.\"] });\r\n  }\r\n  else {\r\n    const existingAlgo = existingApp.algorithms.find((elem) => {\r\n      return elem.version == algorithm.version;\r\n    });\r\n\r\n    if (existingAlgo) {\r\n      return res.status(400).json({ errors: [\"There is already an algorithm with the specified version.\"] });\r\n    }\r\n    else {\r\n      existingApp.algorithms.push(algorithm);\r\n\r\n      try {\r\n        await existingApp.save();\r\n      }\r\n      catch (err) {\r\n        return next(err);\r\n      }\r\n      const app = existingApp.toObject();\r\n      app.algorithms = [existingApp.algorithms.find((elem) => {\r\n        return elem.version == algorithm.version;\r\n      })];\r\n      delete app._id;\r\n      delete app.__v;\r\n\r\n      return res.send({ app });\r\n    }\r\n  }\r\n}\r\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"1db64c8a5bc4363dd2809d28b0cef22d309d0042"}
,"/usr/src/app/src/controllers/app.creation/post.output.ts": {"path":"/usr/src/app/src/controllers/app.creation/post.output.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":9,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":8,"column":7}},"2":{"start":{"line":4,"column":36},"end":{"line":4,"column":97}},"3":{"start":{"line":4,"column":42},"end":{"line":4,"column":70}},"4":{"start":{"line":4,"column":85},"end":{"line":4,"column":95}},"5":{"start":{"line":5,"column":35},"end":{"line":5,"column":100}},"6":{"start":{"line":5,"column":41},"end":{"line":5,"column":73}},"7":{"start":{"line":5,"column":88},"end":{"line":5,"column":98}},"8":{"start":{"line":6,"column":32},"end":{"line":6,"column":149}},"9":{"start":{"line":6,"column":97},"end":{"line":6,"column":119}},"10":{"start":{"line":7,"column":8},"end":{"line":7,"column":78}},"11":{"start":{"line":10,"column":0},"end":{"line":10,"column":62}},"12":{"start":{"line":11,"column":22},"end":{"line":11,"column":57}},"13":{"start":{"line":13,"column":4},"end":{"line":49,"column":7}},"14":{"start":{"line":15,"column":8},"end":{"line":20,"column":9}},"15":{"start":{"line":16,"column":12},"end":{"line":16,"column":127}},"16":{"start":{"line":19,"column":12},"end":{"line":19,"column":29}},"17":{"start":{"line":21,"column":8},"end":{"line":23,"column":9}},"18":{"start":{"line":22,"column":12},"end":{"line":22,"column":111}},"19":{"start":{"line":24,"column":26},"end":{"line":26,"column":10}},"20":{"start":{"line":25,"column":12},"end":{"line":25,"column":50}},"21":{"start":{"line":27,"column":8},"end":{"line":27,"column":43}},"22":{"start":{"line":28,"column":23},"end":{"line":28,"column":25}},"23":{"start":{"line":29,"column":8},"end":{"line":34,"column":9}},"24":{"start":{"line":30,"column":12},"end":{"line":30,"column":41}},"25":{"start":{"line":33,"column":12},"end":{"line":33,"column":47}},"26":{"start":{"line":35,"column":8},"end":{"line":37,"column":9}},"27":{"start":{"line":36,"column":12},"end":{"line":36,"column":48}},"28":{"start":{"line":38,"column":8},"end":{"line":43,"column":9}},"29":{"start":{"line":39,"column":12},"end":{"line":39,"column":37}},"30":{"start":{"line":42,"column":12},"end":{"line":42,"column":29}},"31":{"start":{"line":44,"column":20},"end":{"line":44,"column":42}},"32":{"start":{"line":45,"column":8},"end":{"line":45,"column":37}},"33":{"start":{"line":46,"column":8},"end":{"line":46,"column":23}},"34":{"start":{"line":47,"column":8},"end":{"line":47,"column":23}},"35":{"start":{"line":48,"column":8},"end":{"line":48,"column":33}},"36":{"start":{"line":51,"column":0},"end":{"line":51,"column":35}},"37":{"start":{"line":53,"column":4},"end":{"line":62,"column":5}},"38":{"start":{"line":54,"column":8},"end":{"line":61,"column":9}},"39":{"start":{"line":55,"column":22},"end":{"line":55,"column":48}},"40":{"start":{"line":56,"column":24},"end":{"line":56,"column":60}},"41":{"start":{"line":57,"column":12},"end":{"line":60,"column":14}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":3,"column":36},"end":{"line":3,"column":37}},"loc":{"start":{"line":3,"column":63},"end":{"line":8,"column":5}},"line":3},"2":{"name":"fulfilled","decl":{"start":{"line":4,"column":17},"end":{"line":4,"column":26}},"loc":{"start":{"line":4,"column":34},"end":{"line":4,"column":99}},"line":4},"3":{"name":"rejected","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":25}},"loc":{"start":{"line":5,"column":33},"end":{"line":5,"column":102}},"line":5},"4":{"name":"step","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":21}},"loc":{"start":{"line":6,"column":30},"end":{"line":6,"column":151}},"line":6},"5":{"name":"(anonymous_5)","decl":{"start":{"line":6,"column":76},"end":{"line":6,"column":77}},"loc":{"start":{"line":6,"column":95},"end":{"line":6,"column":121}},"line":6},"6":{"name":"postUpdateOutput","decl":{"start":{"line":12,"column":9},"end":{"line":12,"column":25}},"loc":{"start":{"line":12,"column":42},"end":{"line":50,"column":1}},"line":12},"7":{"name":"(anonymous_7)","decl":{"start":{"line":13,"column":43},"end":{"line":13,"column":44}},"loc":{"start":{"line":13,"column":56},"end":{"line":49,"column":5}},"line":13},"8":{"name":"(anonymous_8)","decl":{"start":{"line":24,"column":54},"end":{"line":24,"column":55}},"loc":{"start":{"line":24,"column":64},"end":{"line":26,"column":9}},"line":24},"9":{"name":"handleValidationError","decl":{"start":{"line":52,"column":9},"end":{"line":52,"column":30}},"loc":{"start":{"line":52,"column":41},"end":{"line":63,"column":1}},"line":52}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":9,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":9,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":16},"end":{"line":3,"column":34}},"type":"binary-expr","locations":[{"start":{"line":3,"column":16},"end":{"line":3,"column":17}},{"start":{"line":3,"column":22},"end":{"line":3,"column":33}}],"line":3},"2":{"loc":{"start":{"line":6,"column":32},"end":{"line":6,"column":148}},"type":"cond-expr","locations":[{"start":{"line":6,"column":46},"end":{"line":6,"column":67}},{"start":{"line":6,"column":70},"end":{"line":6,"column":148}}],"line":6},"3":{"loc":{"start":{"line":7,"column":51},"end":{"line":7,"column":67}},"type":"binary-expr","locations":[{"start":{"line":7,"column":51},"end":{"line":7,"column":61}},{"start":{"line":7,"column":65},"end":{"line":7,"column":67}}],"line":7},"4":{"loc":{"start":{"line":21,"column":8},"end":{"line":23,"column":9}},"type":"if","locations":[{"start":{"line":21,"column":8},"end":{"line":23,"column":9}},{"start":{"line":21,"column":8},"end":{"line":23,"column":9}}],"line":21},"5":{"loc":{"start":{"line":35,"column":8},"end":{"line":37,"column":9}},"type":"if","locations":[{"start":{"line":35,"column":8},"end":{"line":37,"column":9}},{"start":{"line":35,"column":8},"end":{"line":37,"column":9}}],"line":35},"6":{"loc":{"start":{"line":54,"column":8},"end":{"line":61,"column":9}},"type":"if","locations":[{"start":{"line":54,"column":8},"end":{"line":61,"column":9}},{"start":{"line":54,"column":8},"end":{"line":61,"column":9}}],"line":54},"7":{"loc":{"start":{"line":56,"column":24},"end":{"line":56,"column":60}},"type":"cond-expr","locations":[{"start":{"line":56,"column":37},"end":{"line":56,"column":55}},{"start":{"line":56,"column":58},"end":{"line":56,"column":60}}],"line":56}},"s":{"0":3,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":3,"12":3,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":3,"37":0,"38":0,"39":0,"40":0,"41":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{"0":[3,3,3],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"inputSourceMap":{"version":3,"file":"post.output.js","sourceRoot":"","sources":["post.output.ts"],"names":[],"mappings":"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","sourcesContent":["import { Request, Response, NextFunction } from \"express\";\r\nimport { isArray, isString } from \"util\";\r\n\r\nimport { default as Application, ApplicationModel, ParameterModel, ParameterType, OutputModel } from \"../../models/Application\";\r\n\r\n\r\nexport default async function postUpdateOutput(req: Request, res: Response, next: NextFunction) {\r\n  let existingApp: ApplicationModel;\r\n\r\n  try {\r\n    existingApp = <ApplicationModel>(await Application.findOne({ id: req.body.app_id, \"algorithms.id\": req.body.version_id }));\r\n  }\r\n  catch (err) {\r\n    return next(err);\r\n  }\r\n\r\n  if (!existingApp) {\r\n    return res.status(400).json({ messages: [\"`app_id` and/or `algorithms.id` are non registered.\"] });\r\n  }\r\n\r\n  const algorithm = existingApp.algorithms.find((elem) => {\r\n    return elem.id == req.body.version_id;\r\n  });\r\n\r\n  algorithm.output = req.body.output;\r\n\r\n  const resObj: any = {};\r\n\r\n  try {\r\n    await existingApp.validate();\r\n  }\r\n  catch (err) {\r\n    handleValidationError(err, resObj);\r\n  }\r\n\r\n  if (Object.keys(resObj).length !== 0) {\r\n    return res.status(400).json(resObj);\r\n  }\r\n\r\n  try {\r\n    await existingApp.save();\r\n  }\r\n  catch (err) {\r\n    return next(err);\r\n  }\r\n\r\n  const app = existingApp.toObject();\r\n  app.algorithms = [algorithm];\r\n  delete app._id;\r\n  delete app.__v;\r\n\r\n  return res.json({ app });\r\n}\r\n\r\nfunction handleValidationError(err: any, res: any) {\r\n  for (const property in err.errors) {\r\n    if (err.errors.hasOwnProperty(property)) {\r\n      const i = property.indexOf(\"output\");\r\n      const key = (i !== -1) ? property.substr(i) : \"\";\r\n      res[key] = {\r\n        messages: [err.errors[property].message],\r\n        value: err.errors[property].value\r\n      };\r\n    }\r\n  }\r\n}\r\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"5c576bd6fa7721783eaadbc25c1d52fbce4768df"}
,"/usr/src/app/src/controllers/app.creation/post.parameter.ts": {"path":"/usr/src/app/src/controllers/app.creation/post.parameter.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":9,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":8,"column":7}},"2":{"start":{"line":4,"column":36},"end":{"line":4,"column":97}},"3":{"start":{"line":4,"column":42},"end":{"line":4,"column":70}},"4":{"start":{"line":4,"column":85},"end":{"line":4,"column":95}},"5":{"start":{"line":5,"column":35},"end":{"line":5,"column":100}},"6":{"start":{"line":5,"column":41},"end":{"line":5,"column":73}},"7":{"start":{"line":5,"column":88},"end":{"line":5,"column":98}},"8":{"start":{"line":6,"column":32},"end":{"line":6,"column":149}},"9":{"start":{"line":6,"column":97},"end":{"line":6,"column":119}},"10":{"start":{"line":7,"column":8},"end":{"line":7,"column":78}},"11":{"start":{"line":10,"column":0},"end":{"line":10,"column":62}},"12":{"start":{"line":11,"column":16},"end":{"line":11,"column":38}},"13":{"start":{"line":12,"column":22},"end":{"line":12,"column":57}},"14":{"start":{"line":14,"column":4},"end":{"line":82,"column":7}},"15":{"start":{"line":15,"column":23},"end":{"line":15,"column":25}},"16":{"start":{"line":16,"column":8},"end":{"line":18,"column":9}},"17":{"start":{"line":17,"column":12},"end":{"line":17,"column":61}},"18":{"start":{"line":19,"column":8},"end":{"line":24,"column":9}},"19":{"start":{"line":20,"column":12},"end":{"line":20,"column":73}},"20":{"start":{"line":23,"column":12},"end":{"line":23,"column":161}},"21":{"start":{"line":25,"column":8},"end":{"line":27,"column":9}},"22":{"start":{"line":26,"column":12},"end":{"line":26,"column":62}},"23":{"start":{"line":29,"column":8},"end":{"line":34,"column":9}},"24":{"start":{"line":30,"column":12},"end":{"line":30,"column":127}},"25":{"start":{"line":33,"column":12},"end":{"line":33,"column":29}},"26":{"start":{"line":35,"column":8},"end":{"line":81,"column":9}},"27":{"start":{"line":36,"column":12},"end":{"line":36,"column":111}},"28":{"start":{"line":39,"column":30},"end":{"line":41,"column":14}},"29":{"start":{"line":40,"column":16},"end":{"line":40,"column":54}},"30":{"start":{"line":42,"column":12},"end":{"line":44,"column":13}},"31":{"start":{"line":43,"column":16},"end":{"line":43,"column":135}},"32":{"start":{"line":45,"column":12},"end":{"line":48,"column":14}},"33":{"start":{"line":49,"column":12},"end":{"line":49,"column":38}},"34":{"start":{"line":50,"column":12},"end":{"line":50,"column":81}},"35":{"start":{"line":51,"column":12},"end":{"line":80,"column":13}},"36":{"start":{"line":52,"column":31},"end":{"line":52,"column":33}},"37":{"start":{"line":53,"column":26},"end":{"line":53,"column":27}},"38":{"start":{"line":54,"column":16},"end":{"line":57,"column":19}},"39":{"start":{"line":55,"column":20},"end":{"line":55,"column":55}},"40":{"start":{"line":56,"column":20},"end":{"line":56,"column":57}},"41":{"start":{"line":58,"column":31},"end":{"line":58,"column":33}},"42":{"start":{"line":59,"column":16},"end":{"line":64,"column":17}},"43":{"start":{"line":60,"column":20},"end":{"line":60,"column":49}},"44":{"start":{"line":63,"column":20},"end":{"line":63,"column":55}},"45":{"start":{"line":65,"column":16},"end":{"line":65,"column":85}},"46":{"start":{"line":66,"column":16},"end":{"line":68,"column":17}},"47":{"start":{"line":67,"column":20},"end":{"line":67,"column":56}},"48":{"start":{"line":69,"column":16},"end":{"line":74,"column":17}},"49":{"start":{"line":70,"column":20},"end":{"line":70,"column":45}},"50":{"start":{"line":73,"column":20},"end":{"line":73,"column":37}},"51":{"start":{"line":75,"column":28},"end":{"line":75,"column":50}},"52":{"start":{"line":76,"column":16},"end":{"line":76,"column":45}},"53":{"start":{"line":77,"column":16},"end":{"line":77,"column":31}},"54":{"start":{"line":78,"column":16},"end":{"line":78,"column":31}},"55":{"start":{"line":79,"column":16},"end":{"line":79,"column":41}},"56":{"start":{"line":84,"column":0},"end":{"line":84,"column":39}},"57":{"start":{"line":86,"column":4},"end":{"line":86,"column":106}},"58":{"start":{"line":87,"column":4},"end":{"line":87,"column":29}},"59":{"start":{"line":88,"column":4},"end":{"line":88,"column":48}},"60":{"start":{"line":89,"column":4},"end":{"line":89,"column":60}},"61":{"start":{"line":90,"column":4},"end":{"line":90,"column":65}},"62":{"start":{"line":91,"column":4},"end":{"line":91,"column":69}},"63":{"start":{"line":92,"column":4},"end":{"line":92,"column":101}},"64":{"start":{"line":95,"column":4},"end":{"line":104,"column":5}},"65":{"start":{"line":96,"column":8},"end":{"line":103,"column":9}},"66":{"start":{"line":97,"column":22},"end":{"line":97,"column":52}},"67":{"start":{"line":98,"column":24},"end":{"line":98,"column":60}},"68":{"start":{"line":99,"column":12},"end":{"line":102,"column":14}},"69":{"start":{"line":107,"column":4},"end":{"line":116,"column":5}},"70":{"start":{"line":108,"column":20},"end":{"line":108,"column":62}},"71":{"start":{"line":109,"column":8},"end":{"line":115,"column":9}},"72":{"start":{"line":110,"column":12},"end":{"line":114,"column":13}},"73":{"start":{"line":111,"column":30},"end":{"line":111,"column":93}},"74":{"start":{"line":112,"column":16},"end":{"line":112,"column":88}},"75":{"start":{"line":113,"column":16},"end":{"line":113,"column":89}},"76":{"start":{"line":119,"column":19},"end":{"line":119,"column":57}},"77":{"start":{"line":120,"column":4},"end":{"line":130,"column":5}},"78":{"start":{"line":121,"column":8},"end":{"line":121,"column":167}},"79":{"start":{"line":124,"column":8},"end":{"line":126,"column":9}},"80":{"start":{"line":125,"column":12},"end":{"line":125,"column":198}},"81":{"start":{"line":127,"column":8},"end":{"line":129,"column":9}},"82":{"start":{"line":128,"column":12},"end":{"line":128,"column":201}},"83":{"start":{"line":131,"column":4},"end":{"line":133,"column":5}},"84":{"start":{"line":132,"column":8},"end":{"line":132,"column":107}},"85":{"start":{"line":134,"column":4},"end":{"line":136,"column":5}},"86":{"start":{"line":135,"column":8},"end":{"line":135,"column":96}},"87":{"start":{"line":137,"column":4},"end":{"line":139,"column":5}},"88":{"start":{"line":138,"column":8},"end":{"line":138,"column":26}},"89":{"start":{"line":140,"column":4},"end":{"line":148,"column":5}},"90":{"start":{"line":141,"column":16},"end":{"line":141,"column":17}},"91":{"start":{"line":142,"column":8},"end":{"line":147,"column":9}},"92":{"start":{"line":143,"column":12},"end":{"line":145,"column":13}},"93":{"start":{"line":144,"column":16},"end":{"line":144,"column":175}},"94":{"start":{"line":146,"column":12},"end":{"line":146,"column":16}},"95":{"start":{"line":149,"column":4},"end":{"line":149,"column":18}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":3,"column":36},"end":{"line":3,"column":37}},"loc":{"start":{"line":3,"column":63},"end":{"line":8,"column":5}},"line":3},"2":{"name":"fulfilled","decl":{"start":{"line":4,"column":17},"end":{"line":4,"column":26}},"loc":{"start":{"line":4,"column":34},"end":{"line":4,"column":99}},"line":4},"3":{"name":"rejected","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":25}},"loc":{"start":{"line":5,"column":33},"end":{"line":5,"column":102}},"line":5},"4":{"name":"step","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":21}},"loc":{"start":{"line":6,"column":30},"end":{"line":6,"column":151}},"line":6},"5":{"name":"(anonymous_5)","decl":{"start":{"line":6,"column":76},"end":{"line":6,"column":77}},"loc":{"start":{"line":6,"column":95},"end":{"line":6,"column":121}},"line":6},"6":{"name":"postUpdateParameters","decl":{"start":{"line":13,"column":9},"end":{"line":13,"column":29}},"loc":{"start":{"line":13,"column":46},"end":{"line":83,"column":1}},"line":13},"7":{"name":"(anonymous_7)","decl":{"start":{"line":14,"column":43},"end":{"line":14,"column":44}},"loc":{"start":{"line":14,"column":56},"end":{"line":82,"column":5}},"line":14},"8":{"name":"(anonymous_8)","decl":{"start":{"line":39,"column":58},"end":{"line":39,"column":59}},"loc":{"start":{"line":39,"column":68},"end":{"line":41,"column":13}},"line":39},"9":{"name":"(anonymous_9)","decl":{"start":{"line":54,"column":44},"end":{"line":54,"column":45}},"loc":{"start":{"line":54,"column":59},"end":{"line":57,"column":17}},"line":54},"10":{"name":"paramSetDefaults","decl":{"start":{"line":85,"column":9},"end":{"line":85,"column":25}},"loc":{"start":{"line":85,"column":42},"end":{"line":93,"column":1}},"line":85},"11":{"name":"handleValidationError","decl":{"start":{"line":94,"column":9},"end":{"line":94,"column":30}},"loc":{"start":{"line":94,"column":41},"end":{"line":105,"column":1}},"line":94},"12":{"name":"checkParamConstraints","decl":{"start":{"line":106,"column":9},"end":{"line":106,"column":30}},"loc":{"start":{"line":106,"column":51},"end":{"line":117,"column":1}},"line":106},"13":{"name":"validateParamConstraints","decl":{"start":{"line":118,"column":9},"end":{"line":118,"column":33}},"loc":{"start":{"line":118,"column":48},"end":{"line":150,"column":1}},"line":118}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":9,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":9,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":16},"end":{"line":3,"column":34}},"type":"binary-expr","locations":[{"start":{"line":3,"column":16},"end":{"line":3,"column":17}},{"start":{"line":3,"column":22},"end":{"line":3,"column":33}}],"line":3},"2":{"loc":{"start":{"line":6,"column":32},"end":{"line":6,"column":148}},"type":"cond-expr","locations":[{"start":{"line":6,"column":46},"end":{"line":6,"column":67}},{"start":{"line":6,"column":70},"end":{"line":6,"column":148}}],"line":6},"3":{"loc":{"start":{"line":7,"column":51},"end":{"line":7,"column":67}},"type":"binary-expr","locations":[{"start":{"line":7,"column":51},"end":{"line":7,"column":61}},{"start":{"line":7,"column":65},"end":{"line":7,"column":67}}],"line":7},"4":{"loc":{"start":{"line":16,"column":8},"end":{"line":18,"column":9}},"type":"if","locations":[{"start":{"line":16,"column":8},"end":{"line":18,"column":9}},{"start":{"line":16,"column":8},"end":{"line":18,"column":9}}],"line":16},"5":{"loc":{"start":{"line":16,"column":12},"end":{"line":16,"column":60}},"type":"binary-expr","locations":[{"start":{"line":16,"column":12},"end":{"line":16,"column":30}},{"start":{"line":16,"column":34},"end":{"line":16,"column":60}}],"line":16},"6":{"loc":{"start":{"line":19,"column":8},"end":{"line":24,"column":9}},"type":"if","locations":[{"start":{"line":19,"column":8},"end":{"line":24,"column":9}},{"start":{"line":19,"column":8},"end":{"line":24,"column":9}}],"line":19},"7":{"loc":{"start":{"line":19,"column":12},"end":{"line":19,"column":87}},"type":"binary-expr","locations":[{"start":{"line":19,"column":12},"end":{"line":19,"column":56}},{"start":{"line":19,"column":60},"end":{"line":19,"column":87}}],"line":19},"8":{"loc":{"start":{"line":23,"column":42},"end":{"line":23,"column":160}},"type":"cond-expr","locations":[{"start":{"line":23,"column":73},"end":{"line":23,"column":151}},{"start":{"line":23,"column":155},"end":{"line":23,"column":160}}],"line":23},"9":{"loc":{"start":{"line":23,"column":73},"end":{"line":23,"column":151}},"type":"binary-expr","locations":[{"start":{"line":23,"column":73},"end":{"line":23,"column":111}},{"start":{"line":23,"column":115},"end":{"line":23,"column":151}}],"line":23},"10":{"loc":{"start":{"line":25,"column":8},"end":{"line":27,"column":9}},"type":"if","locations":[{"start":{"line":25,"column":8},"end":{"line":27,"column":9}},{"start":{"line":25,"column":8},"end":{"line":27,"column":9}}],"line":25},"11":{"loc":{"start":{"line":35,"column":8},"end":{"line":81,"column":9}},"type":"if","locations":[{"start":{"line":35,"column":8},"end":{"line":81,"column":9}},{"start":{"line":35,"column":8},"end":{"line":81,"column":9}}],"line":35},"12":{"loc":{"start":{"line":42,"column":12},"end":{"line":44,"column":13}},"type":"if","locations":[{"start":{"line":42,"column":12},"end":{"line":44,"column":13}},{"start":{"line":42,"column":12},"end":{"line":44,"column":13}}],"line":42},"13":{"loc":{"start":{"line":42,"column":16},"end":{"line":42,"column":106}},"type":"binary-expr","locations":[{"start":{"line":42,"column":17},"end":{"line":42,"column":74}},{"start":{"line":42,"column":79},"end":{"line":42,"column":106}}],"line":42},"14":{"loc":{"start":{"line":50,"column":34},"end":{"line":50,"column":80}},"type":"cond-expr","locations":[{"start":{"line":50,"column":56},"end":{"line":50,"column":75}},{"start":{"line":50,"column":78},"end":{"line":50,"column":80}}],"line":50},"15":{"loc":{"start":{"line":51,"column":12},"end":{"line":80,"column":13}},"type":"if","locations":[{"start":{"line":51,"column":12},"end":{"line":80,"column":13}},{"start":{"line":51,"column":12},"end":{"line":80,"column":13}}],"line":51},"16":{"loc":{"start":{"line":66,"column":16},"end":{"line":68,"column":17}},"type":"if","locations":[{"start":{"line":66,"column":16},"end":{"line":68,"column":17}},{"start":{"line":66,"column":16},"end":{"line":68,"column":17}}],"line":66},"17":{"loc":{"start":{"line":86,"column":21},"end":{"line":86,"column":105}},"type":"cond-expr","locations":[{"start":{"line":86,"column":51},"end":{"line":86,"column":88}},{"start":{"line":86,"column":91},"end":{"line":86,"column":105}}],"line":86},"18":{"loc":{"start":{"line":88,"column":24},"end":{"line":88,"column":47}},"type":"binary-expr","locations":[{"start":{"line":88,"column":24},"end":{"line":88,"column":41}},{"start":{"line":88,"column":45},"end":{"line":88,"column":47}}],"line":88},"19":{"loc":{"start":{"line":89,"column":30},"end":{"line":89,"column":59}},"type":"binary-expr","locations":[{"start":{"line":89,"column":30},"end":{"line":89,"column":53}},{"start":{"line":89,"column":57},"end":{"line":89,"column":59}}],"line":89},"20":{"loc":{"start":{"line":90,"column":31},"end":{"line":90,"column":64}},"type":"binary-expr","locations":[{"start":{"line":90,"column":31},"end":{"line":90,"column":55}},{"start":{"line":90,"column":59},"end":{"line":90,"column":64}}],"line":90},"21":{"loc":{"start":{"line":91,"column":33},"end":{"line":91,"column":68}},"type":"binary-expr","locations":[{"start":{"line":91,"column":33},"end":{"line":91,"column":59}},{"start":{"line":91,"column":63},"end":{"line":91,"column":68}}],"line":91},"22":{"loc":{"start":{"line":92,"column":34},"end":{"line":92,"column":100}},"type":"cond-expr","locations":[{"start":{"line":92,"column":95},"end":{"line":92,"column":96}},{"start":{"line":92,"column":99},"end":{"line":92,"column":100}}],"line":92},"23":{"loc":{"start":{"line":92,"column":34},"end":{"line":92,"column":92}},"type":"binary-expr","locations":[{"start":{"line":92,"column":34},"end":{"line":92,"column":74}},{"start":{"line":92,"column":78},"end":{"line":92,"column":92}}],"line":92},"24":{"loc":{"start":{"line":96,"column":8},"end":{"line":103,"column":9}},"type":"if","locations":[{"start":{"line":96,"column":8},"end":{"line":103,"column":9}},{"start":{"line":96,"column":8},"end":{"line":103,"column":9}}],"line":96},"25":{"loc":{"start":{"line":98,"column":24},"end":{"line":98,"column":60}},"type":"cond-expr","locations":[{"start":{"line":98,"column":37},"end":{"line":98,"column":55}},{"start":{"line":98,"column":58},"end":{"line":98,"column":60}}],"line":98},"26":{"loc":{"start":{"line":110,"column":12},"end":{"line":114,"column":13}},"type":"if","locations":[{"start":{"line":110,"column":12},"end":{"line":114,"column":13}},{"start":{"line":110,"column":12},"end":{"line":114,"column":13}}],"line":110},"27":{"loc":{"start":{"line":111,"column":48},"end":{"line":111,"column":91}},"type":"cond-expr","locations":[{"start":{"line":111,"column":66},"end":{"line":111,"column":80}},{"start":{"line":111,"column":83},"end":{"line":111,"column":91}}],"line":111},"28":{"loc":{"start":{"line":112,"column":29},"end":{"line":112,"column":87}},"type":"binary-expr","locations":[{"start":{"line":112,"column":29},"end":{"line":112,"column":39}},{"start":{"line":112,"column":43},"end":{"line":112,"column":87}}],"line":112},"29":{"loc":{"start":{"line":120,"column":4},"end":{"line":130,"column":5}},"type":"if","locations":[{"start":{"line":120,"column":4},"end":{"line":130,"column":5}},{"start":{"line":120,"column":4},"end":{"line":130,"column":5}}],"line":120},"30":{"loc":{"start":{"line":124,"column":8},"end":{"line":126,"column":9}},"type":"if","locations":[{"start":{"line":124,"column":8},"end":{"line":126,"column":9}},{"start":{"line":124,"column":8},"end":{"line":126,"column":9}}],"line":124},"31":{"loc":{"start":{"line":124,"column":12},"end":{"line":124,"column":99}},"type":"binary-expr","locations":[{"start":{"line":124,"column":12},"end":{"line":124,"column":37}},{"start":{"line":124,"column":41},"end":{"line":124,"column":99}}],"line":124},"32":{"loc":{"start":{"line":127,"column":8},"end":{"line":129,"column":9}},"type":"if","locations":[{"start":{"line":127,"column":8},"end":{"line":129,"column":9}},{"start":{"line":127,"column":8},"end":{"line":129,"column":9}}],"line":127},"33":{"loc":{"start":{"line":127,"column":12},"end":{"line":127,"column":99}},"type":"binary-expr","locations":[{"start":{"line":127,"column":12},"end":{"line":127,"column":37}},{"start":{"line":127,"column":41},"end":{"line":127,"column":99}}],"line":127},"34":{"loc":{"start":{"line":131,"column":4},"end":{"line":133,"column":5}},"type":"if","locations":[{"start":{"line":131,"column":4},"end":{"line":133,"column":5}},{"start":{"line":131,"column":4},"end":{"line":133,"column":5}}],"line":131},"35":{"loc":{"start":{"line":131,"column":8},"end":{"line":131,"column":51}},"type":"binary-expr","locations":[{"start":{"line":131,"column":8},"end":{"line":131,"column":36}},{"start":{"line":131,"column":40},"end":{"line":131,"column":51}}],"line":131},"36":{"loc":{"start":{"line":134,"column":4},"end":{"line":136,"column":5}},"type":"if","locations":[{"start":{"line":134,"column":4},"end":{"line":136,"column":5}},{"start":{"line":134,"column":4},"end":{"line":136,"column":5}}],"line":134},"37":{"loc":{"start":{"line":134,"column":8},"end":{"line":134,"column":89}},"type":"binary-expr","locations":[{"start":{"line":134,"column":8},"end":{"line":134,"column":28}},{"start":{"line":134,"column":32},"end":{"line":134,"column":58}},{"start":{"line":134,"column":62},"end":{"line":134,"column":89}}],"line":134},"38":{"loc":{"start":{"line":137,"column":4},"end":{"line":139,"column":5}},"type":"if","locations":[{"start":{"line":137,"column":4},"end":{"line":139,"column":5}},{"start":{"line":137,"column":4},"end":{"line":139,"column":5}}],"line":137},"39":{"loc":{"start":{"line":140,"column":4},"end":{"line":148,"column":5}},"type":"if","locations":[{"start":{"line":140,"column":4},"end":{"line":148,"column":5}},{"start":{"line":140,"column":4},"end":{"line":148,"column":5}}],"line":140},"40":{"loc":{"start":{"line":140,"column":8},"end":{"line":140,"column":92}},"type":"binary-expr","locations":[{"start":{"line":140,"column":8},"end":{"line":140,"column":13}},{"start":{"line":140,"column":17},"end":{"line":140,"column":63}},{"start":{"line":140,"column":67},"end":{"line":140,"column":92}}],"line":140},"41":{"loc":{"start":{"line":143,"column":12},"end":{"line":145,"column":13}},"type":"if","locations":[{"start":{"line":143,"column":12},"end":{"line":145,"column":13}},{"start":{"line":143,"column":12},"end":{"line":145,"column":13}}],"line":143}},"s":{"0":3,"1":8,"2":8,"3":8,"4":0,"5":8,"6":8,"7":0,"8":24,"9":16,"10":8,"11":3,"12":3,"13":3,"14":8,"15":8,"16":8,"17":0,"18":8,"19":0,"20":8,"21":8,"22":0,"23":8,"24":8,"25":0,"26":8,"27":0,"28":8,"29":8,"30":8,"31":0,"32":8,"33":8,"34":8,"35":8,"36":8,"37":8,"38":8,"39":9,"40":9,"41":8,"42":8,"43":8,"44":8,"45":8,"46":8,"47":8,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":3,"57":9,"58":9,"59":9,"60":9,"61":9,"62":9,"63":9,"64":8,"65":8,"66":8,"67":8,"68":8,"69":8,"70":9,"71":9,"72":3,"73":3,"74":3,"75":3,"76":9,"77":9,"78":1,"79":8,"80":0,"81":8,"82":1,"83":9,"84":0,"85":9,"86":1,"87":9,"88":6,"89":9,"90":0,"91":0,"92":0,"93":0,"94":0,"95":9},"f":{"0":8,"1":8,"2":8,"3":8,"4":24,"5":16,"6":8,"7":8,"8":8,"9":9,"10":9,"11":8,"12":8,"13":9},"b":{"0":[3,3,3],"1":[8,8],"2":[8,16],"3":[8,8],"4":[0,8],"5":[8,8],"6":[0,8],"7":[8,8],"8":[0,8],"9":[0,0],"10":[0,8],"11":[0,8],"12":[0,8],"13":[8,8],"14":[8,0],"15":[8,0],"16":[8,0],"17":[8,1],"18":[9,2],"19":[9,6],"20":[9,6],"21":[9,8],"22":[1,8],"23":[9,8],"24":[8,0],"25":[0,8],"26":[3,0],"27":[0,3],"28":[3,3],"29":[1,8],"30":[0,8],"31":[8,3],"32":[1,7],"33":[8,3],"34":[0,9],"35":[9,1],"36":[1,8],"37":[9,2,2],"38":[6,3],"39":[0,9],"40":[9,9,0],"41":[0,0]},"inputSourceMap":{"version":3,"file":"post.parameter.js","sourceRoot":"","sources":["post.parameter.ts"],"names":[],"mappings":"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","sourcesContent":["import { Request, Response, NextFunction } from \"express\";\r\n\r\nimport { isBool, isInteger, isString } from \"../../utils\";\r\nimport { default as Application, ApplicationModel, ParameterModel, ParameterType, File } from \"../../models/Application\";\r\n\r\nexport default async function postUpdateParameters(req: Request, res: Response, next: NextFunction) {\r\n  const errors: string[] = [];\r\n\r\n  if (!req.body.entryApp || !req.body.entryApp.appName) {\r\n    errors.push(\"`entryApp.appName` not specified.\");\r\n  }\r\n\r\n  if (!isBool(req.body.entryApp.localFile) && req.body.entryApp.localFile) {\r\n    errors.push(\"`entryApp.localFile` must be of type boolean.\");\r\n  }\r\n  else {\r\n    req.body.entryApp.localFile = req.body.entryApp.localFile ? (req.body.entryApp.localFile === \"true\" || req.body.entryApp.localFile === true) : false;\r\n  }\r\n\r\n  if (errors.length !== 0) {\r\n    return res.status(400).json({ messages: errors });\r\n  }\r\n\r\n  let existingApp: ApplicationModel;\r\n\r\n  try {\r\n    existingApp = <ApplicationModel>(await Application.findOne({ id: req.body.app_id, \"algorithms.id\": req.body.version_id }));\r\n  }\r\n  catch (err) {\r\n    return next(err);\r\n  }\r\n\r\n  if (!existingApp) {\r\n    return res.status(400).json({ messages: [\"`app_id` and/or `algorithms.id` are non registered.\"] });\r\n  }\r\n  else {\r\n    const algorithm = existingApp.algorithms.find((elem) => {\r\n      return elem.id == req.body.version_id;\r\n    });\r\n\r\n    if ((algorithm.files.indexOf(req.body.entryApp.appName) === -1) && req.body.entryApp.localFile) {\r\n      return res.status(400).json({ messages: [`\\`algorithm.entryApp\\` (${req.body.entryApp.localFile}) file not found!`] });\r\n    }\r\n\r\n    algorithm.entryApp = {\r\n      appName: req.body.entryApp.appName,\r\n      localFile: req.body.entryApp.localFile\r\n    };\r\n\r\n    algorithm.parameters = [];\r\n    req.body.parameters = req.body.parameters ? req.body.parameters : [];\r\n\r\n    if (req.body.parameters instanceof Array) {\r\n      const errors: any[] = [];\r\n      let pos: number = 0;\r\n\r\n      req.body.parameters.forEach((parameter: ParameterModel) => {\r\n        paramSetDefaults(parameter, pos++);\r\n        algorithm.parameters.push(parameter);\r\n      });\r\n\r\n      const resObj: any = {};\r\n\r\n      try {\r\n        await existingApp.validate();\r\n      }\r\n      catch (err) {\r\n        handleValidationError(err, resObj);\r\n      }\r\n\r\n      checkParamConstraints(algorithm.parameters, resObj, algorithm.files);\r\n\r\n      if (Object.keys(resObj).length !== 0) {\r\n        return res.status(400).json(resObj);\r\n      }\r\n\r\n      try {\r\n        await existingApp.save();\r\n      }\r\n      catch (err) {\r\n        return next(err);\r\n      }\r\n\r\n      const app = existingApp.toObject();\r\n      app.algorithms = [algorithm];\r\n      delete app._id;\r\n      delete app.__v;\r\n\r\n      return res.json({ app });\r\n    }\r\n  }\r\n}\r\n\r\nfunction paramSetDefaults(parameter: ParameterModel, pos: number) {\r\n  parameter.type = parameter.type == undefined ? ParameterType.Primitive : parameter.type;\r\n  parameter.position = pos;\r\n  parameter.options = <any>parameter.options || {};\r\n  parameter.options.nArgs = <any>parameter.options.nArgs || {};\r\n  parameter.options.static = parameter.options.static || false;\r\n  parameter.options.required = parameter.options.required || false;\r\n  parameter.options.nArgs.min = parameter.options.nArgs.min == undefined && parameter.flag ? 0 : 1;\r\n}\r\n\r\nfunction handleValidationError(err: any, res: any) {\r\n  for (const property in err.errors) {\r\n    if (err.errors.hasOwnProperty(property)) {\r\n      const i = property.indexOf(\"parameters\");\r\n      const key = (i !== -1) ? property.substr(i) : \"\";\r\n      res[key] = {\r\n        messages: [err.errors[property].message],\r\n        value: err.errors[property].value\r\n      };\r\n    }\r\n  }\r\n}\r\n\r\n\r\nfunction checkParamConstraints(params: ParameterModel[], res: any, files?: string[]) {\r\n  for (let i = 0; i < params.length; i++) {\r\n    const err = validateParamConstraints(params[i], files);\r\n\r\n    for (const property in err) {\r\n      if (err.hasOwnProperty(property)) {\r\n        const index = `parameters.${i}${property !== \"\" ? \".\" + property : property}`;\r\n        res[index] = res[index] || { messages: [], value: err[property].value };\r\n        res[index].messages = res[index].messages.concat(err[property].messages);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction validateParamConstraints(param: ParameterModel, files?: string[]) {\r\n  const errors: any = { \"\": { messages: [], value: param } };\r\n\r\n  if (param.options.nArgs.max < param.options.nArgs.min) {\r\n    errors[\"\"].messages.push(`\\`options.nArgs.min\\` (${param.options.nArgs.min}) must be lower or equal than \\`options.nArgs.max\\` (${param.options.nArgs.max}).`);\r\n  }\r\n  else {\r\n    if (param.options.defaultArgs && param.options.defaultArgs.length < param.options.nArgs.min) {\r\n      errors[\"\"].messages.push(`The number of args provided in \\`options.defaultArgs\\` (${param.options.defaultArgs.length}) is less than minimum allowed value (${param.options.nArgs.min}).`);\r\n    }\r\n\r\n    if (param.options.defaultArgs && param.options.defaultArgs.length > param.options.nArgs.max) {\r\n      errors[\"\"].messages.push(`The number of args provided in \\`options.defaultArgs\\` (${param.options.defaultArgs.length}) is greater than maximum allowed value (${param.options.nArgs.max}).`);\r\n    }\r\n  }\r\n\r\n  if (param.options.nArgs.min == 0 && !param.flag) {\r\n    errors[\"\"].messages.push(\"Parameter can be null! No flag specified and `options.nArgs.min` is 0.\");\r\n  }\r\n\r\n  if (param.options.static && !param.options.defaultArgs && param.options.nArgs.min > 0) {\r\n    errors[\"\"].messages.push(\"`options.static` requires `options.defaultArgs.length` > 0.\");\r\n  }\r\n\r\n  if (errors[\"\"].messages.length === 0) {\r\n    delete errors[\"\"];\r\n  }\r\n\r\n  if (files && param.type == ParameterType.File && param.options.defaultArgs) {\r\n    let i: number = 0;\r\n    for (const fileName of param.options.defaultArgs) {\r\n      if (files.indexOf(<string>fileName) === -1) {\r\n        errors[`options.defaultArgs.${i}`] = { messages: [`Path \\`param.options.defaultArgs.${i}\\` (${fileName}) not found in the uploaded files.`], value: fileName };\r\n      }\r\n      i++;\r\n    }\r\n  }\r\n\r\n  return errors;\r\n}\r\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"afdb47c5bcb271f72ef33fb986ffea58a44a6757"}
,"/usr/src/app/src/controllers/app.creation/post.uploader.ts": {"path":"/usr/src/app/src/controllers/app.creation/post.uploader.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":9,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":8,"column":7}},"2":{"start":{"line":4,"column":36},"end":{"line":4,"column":97}},"3":{"start":{"line":4,"column":42},"end":{"line":4,"column":70}},"4":{"start":{"line":4,"column":85},"end":{"line":4,"column":95}},"5":{"start":{"line":5,"column":35},"end":{"line":5,"column":100}},"6":{"start":{"line":5,"column":41},"end":{"line":5,"column":73}},"7":{"start":{"line":5,"column":88},"end":{"line":5,"column":98}},"8":{"start":{"line":6,"column":32},"end":{"line":6,"column":149}},"9":{"start":{"line":6,"column":97},"end":{"line":6,"column":119}},"10":{"start":{"line":7,"column":8},"end":{"line":7,"column":78}},"11":{"start":{"line":10,"column":0},"end":{"line":10,"column":62}},"12":{"start":{"line":11,"column":17},"end":{"line":11,"column":36}},"13":{"start":{"line":12,"column":11},"end":{"line":12,"column":24}},"14":{"start":{"line":13,"column":13},"end":{"line":13,"column":28}},"15":{"start":{"line":14,"column":15},"end":{"line":14,"column":32}},"16":{"start":{"line":15,"column":19},"end":{"line":15,"column":40}},"17":{"start":{"line":16,"column":22},"end":{"line":16,"column":57}},"18":{"start":{"line":17,"column":16},"end":{"line":17,"column":38}},"19":{"start":{"line":23,"column":4},"end":{"line":81,"column":7}},"20":{"start":{"line":24,"column":23},"end":{"line":24,"column":25}},"21":{"start":{"line":25,"column":8},"end":{"line":27,"column":9}},"22":{"start":{"line":26,"column":12},"end":{"line":26,"column":85}},"23":{"start":{"line":28,"column":8},"end":{"line":33,"column":9}},"24":{"start":{"line":29,"column":12},"end":{"line":29,"column":37}},"25":{"start":{"line":32,"column":12},"end":{"line":32,"column":63}},"26":{"start":{"line":34,"column":8},"end":{"line":36,"column":9}},"27":{"start":{"line":35,"column":12},"end":{"line":35,"column":62}},"28":{"start":{"line":38,"column":8},"end":{"line":43,"column":9}},"29":{"start":{"line":39,"column":12},"end":{"line":39,"column":127}},"30":{"start":{"line":42,"column":12},"end":{"line":42,"column":29}},"31":{"start":{"line":44,"column":8},"end":{"line":80,"column":9}},"32":{"start":{"line":45,"column":12},"end":{"line":50,"column":13}},"33":{"start":{"line":46,"column":16},"end":{"line":46,"column":45}},"34":{"start":{"line":49,"column":16},"end":{"line":49,"column":33}},"35":{"start":{"line":51,"column":12},"end":{"line":51,"column":111}},"36":{"start":{"line":54,"column":30},"end":{"line":56,"column":14}},"37":{"start":{"line":55,"column":16},"end":{"line":55,"column":54}},"38":{"start":{"line":57,"column":28},"end":{"line":57,"column":101}},"39":{"start":{"line":58,"column":12},"end":{"line":63,"column":13}},"40":{"start":{"line":59,"column":16},"end":{"line":59,"column":44}},"41":{"start":{"line":62,"column":16},"end":{"line":62,"column":33}},"42":{"start":{"line":64,"column":12},"end":{"line":66,"column":13}},"43":{"start":{"line":65,"column":16},"end":{"line":65,"column":40}},"44":{"start":{"line":67,"column":12},"end":{"line":74,"column":13}},"45":{"start":{"line":68,"column":29},"end":{"line":68,"column":64}},"46":{"start":{"line":69,"column":16},"end":{"line":69,"column":87}},"47":{"start":{"line":70,"column":16},"end":{"line":70,"column":41}},"48":{"start":{"line":73,"column":16},"end":{"line":73,"column":33}},"49":{"start":{"line":75,"column":24},"end":{"line":75,"column":46}},"50":{"start":{"line":76,"column":12},"end":{"line":76,"column":41}},"51":{"start":{"line":77,"column":12},"end":{"line":77,"column":27}},"52":{"start":{"line":78,"column":12},"end":{"line":78,"column":27}},"53":{"start":{"line":79,"column":12},"end":{"line":79,"column":37}},"54":{"start":{"line":83,"column":0},"end":{"line":83,"column":29}},"55":{"start":{"line":85,"column":23},"end":{"line":85,"column":54}},"56":{"start":{"line":86,"column":4},"end":{"line":117,"column":7}},"57":{"start":{"line":87,"column":8},"end":{"line":116,"column":11}},"58":{"start":{"line":88,"column":12},"end":{"line":115,"column":15}},"59":{"start":{"line":89,"column":16},"end":{"line":93,"column":17}},"60":{"start":{"line":90,"column":20},"end":{"line":92,"column":23}},"61":{"start":{"line":91,"column":24},"end":{"line":91,"column":45}},"62":{"start":{"line":94,"column":16},"end":{"line":114,"column":17}},"63":{"start":{"line":95,"column":36},"end":{"line":95,"column":71}},"64":{"start":{"line":96,"column":20},"end":{"line":110,"column":23}},"65":{"start":{"line":98,"column":39},"end":{"line":98,"column":41}},"66":{"start":{"line":99,"column":24},"end":{"line":101,"column":27}},"67":{"start":{"line":100,"column":28},"end":{"line":100,"column":48}},"68":{"start":{"line":102,"column":24},"end":{"line":106,"column":27}},"69":{"start":{"line":103,"column":28},"end":{"line":104,"column":51}},"70":{"start":{"line":104,"column":32},"end":{"line":104,"column":51}},"71":{"start":{"line":105,"column":28},"end":{"line":105,"column":51}},"72":{"start":{"line":109,"column":24},"end":{"line":109,"column":36}},"73":{"start":{"line":113,"column":20},"end":{"line":113,"column":56}},"74":{"start":{"line":120,"column":4},"end":{"line":126,"column":7}},"75":{"start":{"line":121,"column":8},"end":{"line":125,"column":11}},"76":{"start":{"line":122,"column":12},"end":{"line":123,"column":28}},"77":{"start":{"line":123,"column":16},"end":{"line":123,"column":28}},"78":{"start":{"line":124,"column":12},"end":{"line":124,"column":22}},"79":{"start":{"line":129,"column":4},"end":{"line":137,"column":7}},"80":{"start":{"line":130,"column":8},"end":{"line":136,"column":11}},"81":{"start":{"line":131,"column":12},"end":{"line":135,"column":15}},"82":{"start":{"line":132,"column":16},"end":{"line":133,"column":39}},"83":{"start":{"line":133,"column":20},"end":{"line":133,"column":39}},"84":{"start":{"line":134,"column":16},"end":{"line":134,"column":33}},"85":{"start":{"line":140,"column":4},"end":{"line":142,"column":5}},"86":{"start":{"line":141,"column":8},"end":{"line":141,"column":29}},"87":{"start":{"line":143,"column":4},"end":{"line":151,"column":5}},"88":{"start":{"line":144,"column":8},"end":{"line":150,"column":9}},"89":{"start":{"line":145,"column":12},"end":{"line":146,"column":25}},"90":{"start":{"line":146,"column":16},"end":{"line":146,"column":25}},"91":{"start":{"line":147,"column":12},"end":{"line":149,"column":13}},"92":{"start":{"line":148,"column":16},"end":{"line":148,"column":44}},"93":{"start":{"line":154,"column":4},"end":{"line":156,"column":5}},"94":{"start":{"line":155,"column":8},"end":{"line":155,"column":20}},"95":{"start":{"line":157,"column":4},"end":{"line":157,"column":17}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":3,"column":36},"end":{"line":3,"column":37}},"loc":{"start":{"line":3,"column":63},"end":{"line":8,"column":5}},"line":3},"2":{"name":"fulfilled","decl":{"start":{"line":4,"column":17},"end":{"line":4,"column":26}},"loc":{"start":{"line":4,"column":34},"end":{"line":4,"column":99}},"line":4},"3":{"name":"rejected","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":25}},"loc":{"start":{"line":5,"column":33},"end":{"line":5,"column":102}},"line":5},"4":{"name":"step","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":21}},"loc":{"start":{"line":6,"column":30},"end":{"line":6,"column":151}},"line":6},"5":{"name":"(anonymous_5)","decl":{"start":{"line":6,"column":76},"end":{"line":6,"column":77}},"loc":{"start":{"line":6,"column":95},"end":{"line":6,"column":121}},"line":6},"6":{"name":"postUpload","decl":{"start":{"line":22,"column":9},"end":{"line":22,"column":19}},"loc":{"start":{"line":22,"column":36},"end":{"line":82,"column":1}},"line":22},"7":{"name":"(anonymous_7)","decl":{"start":{"line":23,"column":43},"end":{"line":23,"column":44}},"loc":{"start":{"line":23,"column":56},"end":{"line":81,"column":5}},"line":23},"8":{"name":"(anonymous_8)","decl":{"start":{"line":54,"column":58},"end":{"line":54,"column":59}},"loc":{"start":{"line":54,"column":68},"end":{"line":56,"column":13}},"line":54},"9":{"name":"moveFiles","decl":{"start":{"line":84,"column":9},"end":{"line":84,"column":18}},"loc":{"start":{"line":84,"column":33},"end":{"line":118,"column":1}},"line":84},"10":{"name":"(anonymous_10)","decl":{"start":{"line":86,"column":31},"end":{"line":86,"column":32}},"loc":{"start":{"line":86,"column":41},"end":{"line":117,"column":5}},"line":86},"11":{"name":"(anonymous_11)","decl":{"start":{"line":87,"column":27},"end":{"line":87,"column":28}},"loc":{"start":{"line":87,"column":48},"end":{"line":116,"column":9}},"line":87},"12":{"name":"(anonymous_12)","decl":{"start":{"line":88,"column":70},"end":{"line":88,"column":71}},"loc":{"start":{"line":88,"column":81},"end":{"line":115,"column":13}},"line":88},"13":{"name":"(anonymous_13)","decl":{"start":{"line":90,"column":41},"end":{"line":90,"column":42}},"loc":{"start":{"line":90,"column":49},"end":{"line":92,"column":21}},"line":90},"14":{"name":"(anonymous_14)","decl":{"start":{"line":97,"column":30},"end":{"line":97,"column":31}},"loc":{"start":{"line":97,"column":42},"end":{"line":107,"column":21}},"line":97},"15":{"name":"(anonymous_15)","decl":{"start":{"line":99,"column":39},"end":{"line":99,"column":40}},"loc":{"start":{"line":99,"column":46},"end":{"line":101,"column":25}},"line":99},"16":{"name":"(anonymous_16)","decl":{"start":{"line":102,"column":43},"end":{"line":102,"column":44}},"loc":{"start":{"line":102,"column":52},"end":{"line":106,"column":25}},"line":102},"17":{"name":"(anonymous_17)","decl":{"start":{"line":108,"column":31},"end":{"line":108,"column":32}},"loc":{"start":{"line":108,"column":40},"end":{"line":110,"column":21}},"line":108},"18":{"name":"emptyDir","decl":{"start":{"line":119,"column":9},"end":{"line":119,"column":17}},"loc":{"start":{"line":119,"column":23},"end":{"line":127,"column":1}},"line":119},"19":{"name":"(anonymous_19)","decl":{"start":{"line":120,"column":23},"end":{"line":120,"column":24}},"loc":{"start":{"line":120,"column":44},"end":{"line":126,"column":5}},"line":120},"20":{"name":"(anonymous_20)","decl":{"start":{"line":121,"column":27},"end":{"line":121,"column":28}},"loc":{"start":{"line":121,"column":42},"end":{"line":125,"column":9}},"line":121},"21":{"name":"deleteFiles","decl":{"start":{"line":128,"column":9},"end":{"line":128,"column":20}},"loc":{"start":{"line":128,"column":28},"end":{"line":138,"column":1}},"line":128},"22":{"name":"(anonymous_22)","decl":{"start":{"line":129,"column":31},"end":{"line":129,"column":32}},"loc":{"start":{"line":129,"column":41},"end":{"line":137,"column":5}},"line":129},"23":{"name":"(anonymous_23)","decl":{"start":{"line":130,"column":20},"end":{"line":130,"column":21}},"loc":{"start":{"line":130,"column":41},"end":{"line":136,"column":9}},"line":130},"24":{"name":"(anonymous_24)","decl":{"start":{"line":131,"column":33},"end":{"line":131,"column":34}},"loc":{"start":{"line":131,"column":40},"end":{"line":135,"column":13}},"line":131},"25":{"name":"updateAlgorithmFiles","decl":{"start":{"line":139,"column":9},"end":{"line":139,"column":29}},"loc":{"start":{"line":139,"column":57},"end":{"line":152,"column":1}},"line":139},"26":{"name":"isDir","decl":{"start":{"line":153,"column":9},"end":{"line":153,"column":14}},"loc":{"start":{"line":153,"column":22},"end":{"line":158,"column":1}},"line":153}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":9,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":9,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":16},"end":{"line":3,"column":34}},"type":"binary-expr","locations":[{"start":{"line":3,"column":16},"end":{"line":3,"column":17}},{"start":{"line":3,"column":22},"end":{"line":3,"column":33}}],"line":3},"2":{"loc":{"start":{"line":6,"column":32},"end":{"line":6,"column":148}},"type":"cond-expr","locations":[{"start":{"line":6,"column":46},"end":{"line":6,"column":67}},{"start":{"line":6,"column":70},"end":{"line":6,"column":148}}],"line":6},"3":{"loc":{"start":{"line":7,"column":51},"end":{"line":7,"column":67}},"type":"binary-expr","locations":[{"start":{"line":7,"column":51},"end":{"line":7,"column":61}},{"start":{"line":7,"column":65},"end":{"line":7,"column":67}}],"line":7},"4":{"loc":{"start":{"line":25,"column":8},"end":{"line":27,"column":9}},"type":"if","locations":[{"start":{"line":25,"column":8},"end":{"line":27,"column":9}},{"start":{"line":25,"column":8},"end":{"line":27,"column":9}}],"line":25},"5":{"loc":{"start":{"line":25,"column":12},"end":{"line":25,"column":48}},"type":"binary-expr","locations":[{"start":{"line":25,"column":12},"end":{"line":25,"column":22}},{"start":{"line":25,"column":26},"end":{"line":25,"column":48}}],"line":25},"6":{"loc":{"start":{"line":28,"column":8},"end":{"line":33,"column":9}},"type":"if","locations":[{"start":{"line":28,"column":8},"end":{"line":33,"column":9}},{"start":{"line":28,"column":8},"end":{"line":33,"column":9}}],"line":28},"7":{"loc":{"start":{"line":34,"column":8},"end":{"line":36,"column":9}},"type":"if","locations":[{"start":{"line":34,"column":8},"end":{"line":36,"column":9}},{"start":{"line":34,"column":8},"end":{"line":36,"column":9}}],"line":34},"8":{"loc":{"start":{"line":44,"column":8},"end":{"line":80,"column":9}},"type":"if","locations":[{"start":{"line":44,"column":8},"end":{"line":80,"column":9}},{"start":{"line":44,"column":8},"end":{"line":80,"column":9}}],"line":44},"9":{"loc":{"start":{"line":64,"column":12},"end":{"line":66,"column":13}},"type":"if","locations":[{"start":{"line":64,"column":12},"end":{"line":66,"column":13}},{"start":{"line":64,"column":12},"end":{"line":66,"column":13}}],"line":64},"10":{"loc":{"start":{"line":89,"column":16},"end":{"line":93,"column":17}},"type":"if","locations":[{"start":{"line":89,"column":16},"end":{"line":93,"column":17}},{"start":{"line":89,"column":16},"end":{"line":93,"column":17}}],"line":89},"11":{"loc":{"start":{"line":94,"column":16},"end":{"line":114,"column":17}},"type":"if","locations":[{"start":{"line":94,"column":16},"end":{"line":114,"column":17}},{"start":{"line":94,"column":16},"end":{"line":114,"column":17}}],"line":94},"12":{"loc":{"start":{"line":103,"column":28},"end":{"line":104,"column":51}},"type":"if","locations":[{"start":{"line":103,"column":28},"end":{"line":104,"column":51}},{"start":{"line":103,"column":28},"end":{"line":104,"column":51}}],"line":103},"13":{"loc":{"start":{"line":122,"column":12},"end":{"line":123,"column":28}},"type":"if","locations":[{"start":{"line":122,"column":12},"end":{"line":123,"column":28}},{"start":{"line":122,"column":12},"end":{"line":123,"column":28}}],"line":122},"14":{"loc":{"start":{"line":132,"column":16},"end":{"line":133,"column":39}},"type":"if","locations":[{"start":{"line":132,"column":16},"end":{"line":133,"column":39}},{"start":{"line":132,"column":16},"end":{"line":133,"column":39}}],"line":132},"15":{"loc":{"start":{"line":140,"column":4},"end":{"line":142,"column":5}},"type":"if","locations":[{"start":{"line":140,"column":4},"end":{"line":142,"column":5}},{"start":{"line":140,"column":4},"end":{"line":142,"column":5}}],"line":140},"16":{"loc":{"start":{"line":145,"column":12},"end":{"line":146,"column":25}},"type":"if","locations":[{"start":{"line":145,"column":12},"end":{"line":146,"column":25}},{"start":{"line":145,"column":12},"end":{"line":146,"column":25}}],"line":145},"17":{"loc":{"start":{"line":147,"column":12},"end":{"line":149,"column":13}},"type":"if","locations":[{"start":{"line":147,"column":12},"end":{"line":149,"column":13}},{"start":{"line":147,"column":12},"end":{"line":149,"column":13}}],"line":147},"18":{"loc":{"start":{"line":154,"column":4},"end":{"line":156,"column":5}},"type":"if","locations":[{"start":{"line":154,"column":4},"end":{"line":156,"column":5}},{"start":{"line":154,"column":4},"end":{"line":156,"column":5}}],"line":154}},"s":{"0":3,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":3,"12":3,"13":3,"14":3,"15":3,"16":3,"17":3,"18":3,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":3,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0},"b":{"0":[3,3,3],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0]},"inputSourceMap":{"version":3,"file":"post.uploader.js","sourceRoot":"","sources":["post.uploader.ts"],"names":[],"mappings":"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","sourcesContent":["import { Request, Response, NextFunction } from \"express\";\r\nimport * as promises from \"bluebird\";\r\nimport * as fs from \"fs\";\r\nimport * as path from \"path\";\r\nimport * as rimraf from \"rimraf\";\r\nconst decompress = require(\"decompress\");\r\n\r\nimport { default as Application, ApplicationModel, AlgorithmModel } from \"../../models/Application\";\r\nimport { isBool, mkdirsSync } from \"../../utils\";\r\n\r\n/*\r\n    TODO:\r\n        1.  Suport files with same name (rename duplicates)\r\n*/\r\nexport default async function postUpload(req: Request, res: Response, next: NextFunction) {\r\n  const errors: string[] = [];\r\n\r\n  if (!req.files || (<Express.Multer.File[]>req.files).length === 0) {\r\n    return res.json({ success: false, errors: [\"No files were uploaded.\"] });\r\n  }\r\n\r\n  if (!isBool(req.body.override)) {\r\n    req.body.override = true;\r\n  }\r\n  else {\r\n    req.body.override = (req.body.override === \"true\");\r\n  }\r\n\r\n  if (errors.length !== 0) {\r\n    return res.status(400).json({ messages: errors });\r\n  }\r\n\r\n  let existingApp: ApplicationModel;\r\n\r\n  try {\r\n    existingApp = <ApplicationModel>(await Application.findOne({ id: req.body.app_id, \"algorithms.id\": req.body.version_id }));\r\n  }\r\n  catch (err) {\r\n    return next(err);\r\n  }\r\n\r\n  if (!existingApp) {\r\n    try {\r\n      await deleteFiles(<Express.Multer.File[]>req.files);\r\n    }\r\n    catch (err) {\r\n      return next(err);\r\n    }\r\n    return res.status(400).json({ messages: [\"`app_id` and/or `algorithms.id` are non registered.\"] });\r\n  }\r\n  else {\r\n    const algorithm = existingApp.algorithms.find((elem) => {\r\n      return elem.id == req.body.version_id;\r\n    });\r\n\r\n    const appPath = path.join(process.cwd(), \"uploads\", req.body.app_id, req.body.version_id);\r\n    try {\r\n      mkdirsSync(appPath);\r\n    }\r\n    catch (err) {\r\n      return next(err);\r\n    }\r\n\r\n    if (!req.body.override) {\r\n      await emptyDir(appPath);\r\n    }\r\n\r\n    try {\r\n      const fRes = await moveFiles(<Express.Multer.File[]>req.files, appPath);\r\n      updateAlgorithmFiles(algorithm, <string[][]>fRes, { override: req.body.override });\r\n      await existingApp.save();\r\n    }\r\n    catch (err) {\r\n      return next(err);\r\n    }\r\n\r\n    const app = existingApp.toObject();\r\n    app.algorithms = [algorithm];\r\n    delete app._id;\r\n    delete app.__v;\r\n\r\n    return res.json({ app });\r\n  }\r\n}\r\n\r\nfunction moveFiles(files: Express.Multer.File[], fPath: string) {\r\n  const extentions = [\".zip\", \".gz\", \".bz2\", \".tgz\"];\r\n\r\n  return promises.map(files, (file) => {\r\n    return new Promise((resolve, reject) => {\r\n      fs.rename(file.path, path.join(fPath, file.originalname), (error) => {\r\n        if (error) {\r\n          fs.unlink(file.path, (rr) => {\r\n            return reject(error);\r\n          });\r\n        }\r\n\r\n        if (extentions.indexOf(path.extname(file.originalname)) !== -1) {\r\n          const zipFile = path.join(fPath, file.originalname);\r\n\r\n          decompress(zipFile, fPath)\r\n            .then((dFiles: any) => {\r\n              const fArray: string[] = [];\r\n              dFiles.forEach((f: any) => {\r\n                fArray.push(f.path);\r\n              });\r\n              fs.unlink(zipFile, (err) => {\r\n                if (err) return reject(err);\r\n                return resolve(fArray);\r\n              });\r\n            })\r\n            .catch((err: any) => {\r\n              reject(err);\r\n            });\r\n        }\r\n        else {\r\n          return resolve([file.originalname]);\r\n        }\r\n      });\r\n    });\r\n  });\r\n}\r\n\r\nfunction emptyDir(dir: string) {\r\n  return new Promise((resolve, reject) => {\r\n    rimraf(`${dir}/*`, function (err) {\r\n      if (err) reject(err);\r\n      resolve();\r\n    });\r\n  });\r\n}\r\n\r\nfunction deleteFiles(files: Express.Multer.File[]) {\r\n  return promises.map(files, (file) => {\r\n    new Promise((resolve, reject) => {\r\n      fs.unlink(file.path, err => {\r\n        if (err) return reject(err);\r\n        return resolve();\r\n      });\r\n    });\r\n  });\r\n}\r\n\r\nfunction updateAlgorithmFiles(algorithm: AlgorithmModel, files: string[][], options: { override: boolean }) {\r\n  if (!options.override) {\r\n    algorithm.files = [];\r\n  }\r\n\r\n  for (const fset of files) {\r\n    for (const fPath of fset) {\r\n      if (isDir(fPath))\r\n        continue;\r\n      if (algorithm.files.indexOf(fPath) === -1) {\r\n        algorithm.files.push(fPath);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nfunction isDir(fPath: string): boolean {\r\n  if (fPath.slice(-1) === path.sep) {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\n\r\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"502969b906d1351541cdd51827198a0bdff64204"}
,"/usr/src/app/src/controllers/app.invoke/exec.app.ts": {"path":"/usr/src/app/src/controllers/app.invoke/exec.app.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":9,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":8,"column":7}},"2":{"start":{"line":4,"column":36},"end":{"line":4,"column":97}},"3":{"start":{"line":4,"column":42},"end":{"line":4,"column":70}},"4":{"start":{"line":4,"column":85},"end":{"line":4,"column":95}},"5":{"start":{"line":5,"column":35},"end":{"line":5,"column":100}},"6":{"start":{"line":5,"column":41},"end":{"line":5,"column":73}},"7":{"start":{"line":5,"column":88},"end":{"line":5,"column":98}},"8":{"start":{"line":6,"column":32},"end":{"line":6,"column":149}},"9":{"start":{"line":6,"column":97},"end":{"line":6,"column":119}},"10":{"start":{"line":7,"column":8},"end":{"line":7,"column":78}},"11":{"start":{"line":10,"column":0},"end":{"line":10,"column":62}},"12":{"start":{"line":11,"column":11},"end":{"line":11,"column":24}},"13":{"start":{"line":12,"column":15},"end":{"line":12,"column":32}},"14":{"start":{"line":13,"column":13},"end":{"line":13,"column":28}},"15":{"start":{"line":14,"column":15},"end":{"line":14,"column":30}},"16":{"start":{"line":15,"column":23},"end":{"line":15,"column":61}},"17":{"start":{"line":16,"column":16},"end":{"line":16,"column":34}},"18":{"start":{"line":17,"column":22},"end":{"line":17,"column":57}},"19":{"start":{"line":18,"column":15},"end":{"line":18,"column":32}},"20":{"start":{"line":19,"column":18},"end":{"line":19,"column":57}},"21":{"start":{"line":22,"column":8},"end":{"line":22,"column":29}},"22":{"start":{"line":23,"column":8},"end":{"line":23,"column":28}},"23":{"start":{"line":24,"column":8},"end":{"line":24,"column":36}},"24":{"start":{"line":25,"column":8},"end":{"line":25,"column":27}},"25":{"start":{"line":28,"column":8},"end":{"line":33,"column":11}},"26":{"start":{"line":29,"column":12},"end":{"line":29,"column":70}},"27":{"start":{"line":30,"column":12},"end":{"line":30,"column":63}},"28":{"start":{"line":31,"column":12},"end":{"line":31,"column":74}},"29":{"start":{"line":32,"column":12},"end":{"line":32,"column":19}},"30":{"start":{"line":36,"column":8},"end":{"line":39,"column":11}},"31":{"start":{"line":37,"column":12},"end":{"line":38,"column":26}},"32":{"start":{"line":38,"column":16},"end":{"line":38,"column":26}},"33":{"start":{"line":42,"column":8},"end":{"line":42,"column":29}},"34":{"start":{"line":45,"column":24},"end":{"line":54,"column":10}},"35":{"start":{"line":55,"column":8},"end":{"line":57,"column":11}},"36":{"start":{"line":56,"column":12},"end":{"line":56,"column":35}},"37":{"start":{"line":58,"column":8},"end":{"line":58,"column":23}},"38":{"start":{"line":61,"column":25},"end":{"line":61,"column":27}},"39":{"start":{"line":62,"column":8},"end":{"line":64,"column":11}},"40":{"start":{"line":63,"column":12},"end":{"line":63,"column":54}},"41":{"start":{"line":65,"column":8},"end":{"line":74,"column":11}},"42":{"start":{"line":73,"column":12},"end":{"line":73,"column":35}},"43":{"start":{"line":77,"column":19},"end":{"line":77,"column":47}},"44":{"start":{"line":78,"column":21},"end":{"line":78,"column":85}},"45":{"start":{"line":79,"column":24},"end":{"line":79,"column":62}},"46":{"start":{"line":80,"column":8},"end":{"line":90,"column":11}},"47":{"start":{"line":81,"column":12},"end":{"line":89,"column":15}},"48":{"start":{"line":82,"column":16},"end":{"line":83,"column":39}},"49":{"start":{"line":83,"column":20},"end":{"line":83,"column":39}},"50":{"start":{"line":84,"column":16},"end":{"line":88,"column":19}},"51":{"start":{"line":85,"column":20},"end":{"line":86,"column":43}},"52":{"start":{"line":86,"column":24},"end":{"line":86,"column":43}},"53":{"start":{"line":87,"column":20},"end":{"line":87,"column":37}},"54":{"start":{"line":93,"column":8},"end":{"line":93,"column":120}},"55":{"start":{"line":94,"column":20},"end":{"line":94,"column":46}},"56":{"start":{"line":95,"column":8},"end":{"line":95,"column":123}},"57":{"start":{"line":98,"column":8},"end":{"line":155,"column":11}},"58":{"start":{"line":99,"column":12},"end":{"line":99,"column":28}},"59":{"start":{"line":100,"column":30},"end":{"line":100,"column":32}},"60":{"start":{"line":101,"column":12},"end":{"line":103,"column":15}},"61":{"start":{"line":102,"column":16},"end":{"line":102,"column":49}},"62":{"start":{"line":104,"column":12},"end":{"line":153,"column":13}},"63":{"start":{"line":106,"column":16},"end":{"line":123,"column":17}},"64":{"start":{"line":107,"column":20},"end":{"line":107,"column":67}},"65":{"start":{"line":108,"column":20},"end":{"line":108,"column":59}},"66":{"start":{"line":110,"column":21},"end":{"line":123,"column":17}},"67":{"start":{"line":111,"column":20},"end":{"line":111,"column":55}},"68":{"start":{"line":114,"column":20},"end":{"line":122,"column":21}},"69":{"start":{"line":115,"column":24},"end":{"line":115,"column":59}},"70":{"start":{"line":117,"column":25},"end":{"line":122,"column":21}},"71":{"start":{"line":118,"column":24},"end":{"line":118,"column":50}},"72":{"start":{"line":121,"column":24},"end":{"line":121,"column":33}},"73":{"start":{"line":124,"column":16},"end":{"line":152,"column":17}},"74":{"start":{"line":125,"column":20},"end":{"line":125,"column":86}},"75":{"start":{"line":128,"column":34},"end":{"line":128,"column":36}},"76":{"start":{"line":129,"column":35},"end":{"line":129,"column":80}},"77":{"start":{"line":130,"column":20},"end":{"line":150,"column":21}},"78":{"start":{"line":131,"column":24},"end":{"line":134,"column":25}},"79":{"start":{"line":132,"column":28},"end":{"line":132,"column":45}},"80":{"start":{"line":133,"column":28},"end":{"line":133,"column":37}},"81":{"start":{"line":135,"column":35},"end":{"line":135,"column":107}},"82":{"start":{"line":136,"column":24},"end":{"line":136,"column":84}},"83":{"start":{"line":137,"column":38},"end":{"line":137,"column":62}},"84":{"start":{"line":138,"column":24},"end":{"line":147,"column":25}},"85":{"start":{"line":139,"column":28},"end":{"line":139,"column":99}},"86":{"start":{"line":141,"column":29},"end":{"line":147,"column":25}},"87":{"start":{"line":142,"column":28},"end":{"line":142,"column":126}},"88":{"start":{"line":145,"column":41},"end":{"line":145,"column":110}},"89":{"start":{"line":146,"column":28},"end":{"line":146,"column":91}},"90":{"start":{"line":148,"column":24},"end":{"line":148,"column":79}},"91":{"start":{"line":149,"column":24},"end":{"line":149,"column":42}},"92":{"start":{"line":151,"column":20},"end":{"line":151,"column":85}},"93":{"start":{"line":154,"column":12},"end":{"line":154,"column":42}},"94":{"start":{"line":158,"column":19},"end":{"line":158,"column":21}},"95":{"start":{"line":159,"column":23},"end":{"line":159,"column":25}},"96":{"start":{"line":160,"column":8},"end":{"line":161,"column":28}},"97":{"start":{"line":161,"column":12},"end":{"line":161,"column":28}},"98":{"start":{"line":162,"column":8},"end":{"line":162,"column":35}},"99":{"start":{"line":163,"column":8},"end":{"line":163,"column":20}},"100":{"start":{"line":166,"column":8},"end":{"line":173,"column":11}},"101":{"start":{"line":167,"column":12},"end":{"line":172,"column":15}},"102":{"start":{"line":168,"column":16},"end":{"line":169,"column":32}},"103":{"start":{"line":169,"column":20},"end":{"line":169,"column":32}},"104":{"start":{"line":170,"column":16},"end":{"line":170,"column":44}},"105":{"start":{"line":171,"column":16},"end":{"line":171,"column":26}},"106":{"start":{"line":176,"column":0},"end":{"line":176,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":3,"column":36},"end":{"line":3,"column":37}},"loc":{"start":{"line":3,"column":63},"end":{"line":8,"column":5}},"line":3},"2":{"name":"fulfilled","decl":{"start":{"line":4,"column":17},"end":{"line":4,"column":26}},"loc":{"start":{"line":4,"column":34},"end":{"line":4,"column":99}},"line":4},"3":{"name":"rejected","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":25}},"loc":{"start":{"line":5,"column":33},"end":{"line":5,"column":102}},"line":5},"4":{"name":"step","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":21}},"loc":{"start":{"line":6,"column":30},"end":{"line":6,"column":151}},"line":6},"5":{"name":"(anonymous_5)","decl":{"start":{"line":6,"column":76},"end":{"line":6,"column":77}},"loc":{"start":{"line":6,"column":95},"end":{"line":6,"column":121}},"line":6},"6":{"name":"(anonymous_6)","decl":{"start":{"line":21,"column":4},"end":{"line":21,"column":5}},"loc":{"start":{"line":21,"column":34},"end":{"line":26,"column":5}},"line":21},"7":{"name":"(anonymous_7)","decl":{"start":{"line":27,"column":4},"end":{"line":27,"column":5}},"loc":{"start":{"line":27,"column":22},"end":{"line":34,"column":5}},"line":27},"8":{"name":"(anonymous_8)","decl":{"start":{"line":28,"column":47},"end":{"line":28,"column":48}},"loc":{"start":{"line":28,"column":60},"end":{"line":33,"column":9}},"line":28},"9":{"name":"(anonymous_9)","decl":{"start":{"line":35,"column":4},"end":{"line":35,"column":5}},"loc":{"start":{"line":35,"column":22},"end":{"line":40,"column":5}},"line":35},"10":{"name":"(anonymous_10)","decl":{"start":{"line":36,"column":35},"end":{"line":36,"column":36}},"loc":{"start":{"line":36,"column":44},"end":{"line":39,"column":9}},"line":36},"11":{"name":"(anonymous_11)","decl":{"start":{"line":41,"column":4},"end":{"line":41,"column":5}},"loc":{"start":{"line":41,"column":19},"end":{"line":43,"column":5}},"line":41},"12":{"name":"(anonymous_12)","decl":{"start":{"line":44,"column":4},"end":{"line":44,"column":5}},"loc":{"start":{"line":44,"column":26},"end":{"line":59,"column":5}},"line":44},"13":{"name":"(anonymous_13)","decl":{"start":{"line":55,"column":33},"end":{"line":55,"column":34}},"loc":{"start":{"line":55,"column":39},"end":{"line":57,"column":9}},"line":55},"14":{"name":"(anonymous_14)","decl":{"start":{"line":60,"column":4},"end":{"line":60,"column":5}},"loc":{"start":{"line":60,"column":37},"end":{"line":75,"column":5}},"line":60},"15":{"name":"(anonymous_15)","decl":{"start":{"line":62,"column":32},"end":{"line":62,"column":33}},"loc":{"start":{"line":62,"column":41},"end":{"line":64,"column":9}},"line":62},"16":{"name":"(anonymous_16)","decl":{"start":{"line":72,"column":21},"end":{"line":72,"column":22}},"loc":{"start":{"line":72,"column":27},"end":{"line":74,"column":9}},"line":72},"17":{"name":"(anonymous_17)","decl":{"start":{"line":76,"column":4},"end":{"line":76,"column":5}},"loc":{"start":{"line":76,"column":29},"end":{"line":91,"column":5}},"line":76},"18":{"name":"(anonymous_18)","decl":{"start":{"line":80,"column":27},"end":{"line":80,"column":28}},"loc":{"start":{"line":80,"column":48},"end":{"line":90,"column":9}},"line":80},"19":{"name":"(anonymous_19)","decl":{"start":{"line":81,"column":30},"end":{"line":81,"column":31}},"loc":{"start":{"line":81,"column":39},"end":{"line":89,"column":13}},"line":81},"20":{"name":"(anonymous_20)","decl":{"start":{"line":84,"column":54},"end":{"line":84,"column":55}},"loc":{"start":{"line":84,"column":63},"end":{"line":88,"column":17}},"line":84},"21":{"name":"(anonymous_21)","decl":{"start":{"line":92,"column":4},"end":{"line":92,"column":5}},"loc":{"start":{"line":92,"column":38},"end":{"line":96,"column":5}},"line":92},"22":{"name":"(anonymous_22)","decl":{"start":{"line":97,"column":4},"end":{"line":97,"column":5}},"loc":{"start":{"line":97,"column":43},"end":{"line":156,"column":5}},"line":97},"23":{"name":"(anonymous_23)","decl":{"start":{"line":98,"column":47},"end":{"line":98,"column":48}},"loc":{"start":{"line":98,"column":60},"end":{"line":155,"column":9}},"line":98},"24":{"name":"(anonymous_24)","decl":{"start":{"line":101,"column":38},"end":{"line":101,"column":39}},"loc":{"start":{"line":101,"column":50},"end":{"line":103,"column":13}},"line":101},"25":{"name":"(anonymous_25)","decl":{"start":{"line":157,"column":4},"end":{"line":157,"column":5}},"loc":{"start":{"line":157,"column":27},"end":{"line":164,"column":5}},"line":157},"26":{"name":"(anonymous_26)","decl":{"start":{"line":165,"column":4},"end":{"line":165,"column":5}},"loc":{"start":{"line":165,"column":41},"end":{"line":174,"column":5}},"line":165},"27":{"name":"(anonymous_27)","decl":{"start":{"line":166,"column":27},"end":{"line":166,"column":28}},"loc":{"start":{"line":166,"column":48},"end":{"line":173,"column":9}},"line":166},"28":{"name":"(anonymous_28)","decl":{"start":{"line":167,"column":48},"end":{"line":167,"column":49}},"loc":{"start":{"line":167,"column":57},"end":{"line":172,"column":13}},"line":167}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":9,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":9,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":16},"end":{"line":3,"column":34}},"type":"binary-expr","locations":[{"start":{"line":3,"column":16},"end":{"line":3,"column":17}},{"start":{"line":3,"column":22},"end":{"line":3,"column":33}}],"line":3},"2":{"loc":{"start":{"line":6,"column":32},"end":{"line":6,"column":148}},"type":"cond-expr","locations":[{"start":{"line":6,"column":46},"end":{"line":6,"column":67}},{"start":{"line":6,"column":70},"end":{"line":6,"column":148}}],"line":6},"3":{"loc":{"start":{"line":7,"column":51},"end":{"line":7,"column":67}},"type":"binary-expr","locations":[{"start":{"line":7,"column":51},"end":{"line":7,"column":61}},{"start":{"line":7,"column":65},"end":{"line":7,"column":67}}],"line":7},"4":{"loc":{"start":{"line":37,"column":12},"end":{"line":38,"column":26}},"type":"if","locations":[{"start":{"line":37,"column":12},"end":{"line":38,"column":26}},{"start":{"line":37,"column":12},"end":{"line":38,"column":26}}],"line":37},"5":{"loc":{"start":{"line":82,"column":16},"end":{"line":83,"column":39}},"type":"if","locations":[{"start":{"line":82,"column":16},"end":{"line":83,"column":39}},{"start":{"line":82,"column":16},"end":{"line":83,"column":39}}],"line":82},"6":{"loc":{"start":{"line":82,"column":20},"end":{"line":82,"column":48}},"type":"binary-expr","locations":[{"start":{"line":82,"column":20},"end":{"line":82,"column":23}},{"start":{"line":82,"column":27},"end":{"line":82,"column":48}}],"line":82},"7":{"loc":{"start":{"line":85,"column":20},"end":{"line":86,"column":43}},"type":"if","locations":[{"start":{"line":85,"column":20},"end":{"line":86,"column":43}},{"start":{"line":85,"column":20},"end":{"line":86,"column":43}}],"line":85},"8":{"loc":{"start":{"line":85,"column":24},"end":{"line":85,"column":52}},"type":"binary-expr","locations":[{"start":{"line":85,"column":24},"end":{"line":85,"column":27}},{"start":{"line":85,"column":31},"end":{"line":85,"column":52}}],"line":85},"9":{"loc":{"start":{"line":93,"column":20},"end":{"line":93,"column":119}},"type":"cond-expr","locations":[{"start":{"line":93,"column":51},"end":{"line":93,"column":107}},{"start":{"line":93,"column":110},"end":{"line":93,"column":119}}],"line":93},"10":{"loc":{"start":{"line":95,"column":24},"end":{"line":95,"column":122}},"type":"cond-expr","locations":[{"start":{"line":95,"column":55},"end":{"line":95,"column":116}},{"start":{"line":95,"column":119},"end":{"line":95,"column":122}}],"line":95},"11":{"loc":{"start":{"line":106,"column":16},"end":{"line":123,"column":17}},"type":"if","locations":[{"start":{"line":106,"column":16},"end":{"line":123,"column":17}},{"start":{"line":106,"column":16},"end":{"line":123,"column":17}}],"line":106},"12":{"loc":{"start":{"line":110,"column":21},"end":{"line":123,"column":17}},"type":"if","locations":[{"start":{"line":110,"column":21},"end":{"line":123,"column":17}},{"start":{"line":110,"column":21},"end":{"line":123,"column":17}}],"line":110},"13":{"loc":{"start":{"line":114,"column":20},"end":{"line":122,"column":21}},"type":"if","locations":[{"start":{"line":114,"column":20},"end":{"line":122,"column":21}},{"start":{"line":114,"column":20},"end":{"line":122,"column":21}}],"line":114},"14":{"loc":{"start":{"line":114,"column":24},"end":{"line":114,"column":132}},"type":"binary-expr","locations":[{"start":{"line":114,"column":24},"end":{"line":114,"column":56}},{"start":{"line":114,"column":60},"end":{"line":114,"column":82}},{"start":{"line":114,"column":86},"end":{"line":114,"column":103}},{"start":{"line":114,"column":107},"end":{"line":114,"column":132}}],"line":114},"15":{"loc":{"start":{"line":117,"column":25},"end":{"line":122,"column":21}},"type":"if","locations":[{"start":{"line":117,"column":25},"end":{"line":122,"column":21}},{"start":{"line":117,"column":25},"end":{"line":122,"column":21}}],"line":117},"16":{"loc":{"start":{"line":124,"column":16},"end":{"line":152,"column":17}},"type":"if","locations":[{"start":{"line":124,"column":16},"end":{"line":152,"column":17}},{"start":{"line":124,"column":16},"end":{"line":152,"column":17}}],"line":124},"17":{"loc":{"start":{"line":131,"column":24},"end":{"line":134,"column":25}},"type":"if","locations":[{"start":{"line":131,"column":24},"end":{"line":134,"column":25}},{"start":{"line":131,"column":24},"end":{"line":134,"column":25}}],"line":131},"18":{"loc":{"start":{"line":136,"column":33},"end":{"line":136,"column":82}},"type":"cond-expr","locations":[{"start":{"line":136,"column":57},"end":{"line":136,"column":77}},{"start":{"line":136,"column":80},"end":{"line":136,"column":82}}],"line":136},"19":{"loc":{"start":{"line":138,"column":24},"end":{"line":147,"column":25}},"type":"if","locations":[{"start":{"line":138,"column":24},"end":{"line":147,"column":25}},{"start":{"line":138,"column":24},"end":{"line":147,"column":25}}],"line":138},"20":{"loc":{"start":{"line":141,"column":29},"end":{"line":147,"column":25}},"type":"if","locations":[{"start":{"line":141,"column":29},"end":{"line":147,"column":25}},{"start":{"line":141,"column":29},"end":{"line":147,"column":25}}],"line":141},"21":{"loc":{"start":{"line":145,"column":41},"end":{"line":145,"column":110}},"type":"cond-expr","locations":[{"start":{"line":145,"column":73},"end":{"line":145,"column":82}},{"start":{"line":145,"column":85},"end":{"line":145,"column":110}}],"line":145},"22":{"loc":{"start":{"line":160,"column":8},"end":{"line":161,"column":28}},"type":"if","locations":[{"start":{"line":160,"column":8},"end":{"line":161,"column":28}},{"start":{"line":160,"column":8},"end":{"line":161,"column":28}}],"line":160},"23":{"loc":{"start":{"line":168,"column":16},"end":{"line":169,"column":32}},"type":"if","locations":[{"start":{"line":168,"column":16},"end":{"line":169,"column":32}},{"start":{"line":168,"column":16},"end":{"line":169,"column":32}}],"line":168}},"s":{"0":3,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":3,"12":3,"13":3,"14":3,"15":3,"16":3,"17":3,"18":3,"19":3,"20":3,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":3},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0},"b":{"0":[3,3,3],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0,0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0]},"inputSourceMap":{"version":3,"file":"exec.app.js","sourceRoot":"","sources":["exec.app.ts"],"names":[],"mappings":"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","sourcesContent":["import * as fs from \"fs\";\r\nimport * as crypto from \"crypto\";\r\nimport * as path from \"path\";\r\nimport { isPrimitive, isString } from \"util\";\r\nimport { Response } from \"express\";\r\n\r\nimport { JsonParser } from \"../json.parser/json.parsers\";\r\nimport { default as Spawn } from \"./spawn\";\r\nimport { AlgorithmModel, ParameterType, File } from \"../../models/Application\";\r\nimport { mkdirsSync } from \"../../utils\";\r\nimport * as rimraf from \"rimraf\";\r\nimport { Sandbox } from \"../../docker_sandbox/sandbox\";\r\n\r\ntype Arguments = {\r\n  [key: string]: any,\r\n};\r\n\r\nexport class ExecApp {\r\n  private _appId: string;\r\n  private _algorithm: AlgorithmModel;\r\n\r\n  private _tempDir: string;\r\n  private _command: string;\r\n  private _args: string[];\r\n  private _cwd: string;\r\n  private _mapping: any;\r\n\r\n  private _tempFiles: string[] = [];\r\n\r\n  constructor(appId: string, algorithm: AlgorithmModel) {\r\n    this._appId = appId;\r\n    this._algorithm = algorithm;\r\n    this._mapping = {};\r\n  }\r\n\r\n  public async compileArgs(args: Arguments) {\r\n    this._tempDir = await this._prepareFs(this._algorithm.id);\r\n\r\n    this._compileCommand(this._appId, this._algorithm);\r\n    await this._compileArgs(this._algorithm, args, this._tempDir);\r\n    return;\r\n  }\r\n\r\n  private deleteTempFiles() {\r\n    rimraf(`${this._tempDir}`, (err) => {\r\n      if (err) throw err;\r\n    });\r\n  }\r\n\r\n  public getOutputDir() {\r\n    return this._tempDir;\r\n  }\r\n\r\n  public spawnProcess(timeout: number) {\r\n    const process = new Spawn(this._command, this._args, timeout, {\r\n      spawn: {\r\n        cwd: this._cwd,\r\n        detached: true\r\n      },\r\n      output: {\r\n        outputDir: path.join(this._tempDir, \"files\"),\r\n        ignoreFiles: this._tempFiles\r\n      }\r\n    });\r\n\r\n    process.runChild.finally(() => {\r\n      this.deleteTempFiles();\r\n    });\r\n\r\n    return process;\r\n  }\r\n\r\n  public spawnRemoteProcess(res: Response, timeout: number) {\r\n    const fStreams: fs.ReadStream[] = [];\r\n\r\n    this._tempFiles.forEach(fpath => {\r\n      fStreams.push(fs.createReadStream(fpath));\r\n    });\r\n\r\n    return Sandbox.getInstance().run(res, timeout, {\r\n      command: this._command,\r\n      args: JSON.stringify(this._args),\r\n      cwd: path.join(\"uploads\", this._appId, this._algorithm.id),\r\n      mapping: JSON.stringify(this._mapping),\r\n      files: fStreams\r\n    })\r\n      .finally(() => {\r\n        this.deleteTempFiles();\r\n      });\r\n  }\r\n\r\n  private _prepareFs(algorithm_id: string) {\r\n    const ms = new Date().getMilliseconds();\r\n    const hash = crypto.createHash(\"md5\").update(ms + algorithm_id).digest(\"hex\");\r\n    const tempDir = path.join(process.cwd(), \"temp\", hash);\r\n\r\n    return new Promise<string>((resolve, reject) => {\r\n      fs.mkdir(tempDir, (err) => {\r\n        if (err && err.code !== \"EEXIST\") return reject(err);\r\n        fs.mkdir(path.join(tempDir, \"files\"), (err) => {\r\n          if (err && err.code !== \"EEXIST\") return reject(err);\r\n          resolve(tempDir);\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  private _compileCommand(appId: string, algorithm: AlgorithmModel) {\r\n    this._cwd = algorithm.files.length !== 0 ? path.join(process.cwd(), \"uploads\", appId, algorithm.id) : undefined;\r\n\r\n    const app = algorithm.entryApp.appName;\r\n    this._command = algorithm.entryApp.localFile ? path.join(process.cwd(), \"uploads\", appId, algorithm.id, app) : app;\r\n  }\r\n\r\n  private async _compileArgs(algorithm: AlgorithmModel, args: Arguments, tempDir: string) {\r\n    this._args = [];\r\n\r\n    const promisses: Promise<any>[] = [];\r\n\r\n    algorithm.parameters.sort((p1, p2) => {\r\n      return p1.position - p2.position;\r\n    });\r\n\r\n    for (const param of algorithm.parameters) {\r\n      let values: any[];\r\n\r\n      if (param.name === \"outputDir\") {\r\n        this._mapping[\"outputDir\"] = this._args.length;\r\n        values = [path.join(tempDir, \"files\")];\r\n      }\r\n      else if (param.options.static) {\r\n        values = param.options.defaultArgs;\r\n      }\r\n      else {\r\n        if (!args.hasOwnProperty(param.name) && param.options.required || !args[param.name] && param.options.defaultArgs) {\r\n          values = param.options.defaultArgs;\r\n        }\r\n        else if (args[param.name]) {\r\n          values = args[param.name];\r\n        }\r\n        else {\r\n          continue;\r\n        }\r\n      }\r\n\r\n      if (param.type == ParameterType.Primitive) {\r\n        this._args = this._args.concat(this.buildArg(param.flag, values));\r\n      }\r\n      else /*if (param.type == ParameterType.File)*/ {\r\n        const files: string[] = [];\r\n        const parser = await JsonParser.getInstance();\r\n\r\n        for (const file of <(File | string)[]>values) {\r\n          if (isString(file)) {\r\n            files.push(file);\r\n            continue;\r\n          }\r\n          let hash = crypto.createHash(\"md5\").update(JSON.stringify(file.data)).digest(\"hex\");\r\n          hash += (file.extention !== \"\" ? \".\" + file.extention : \"\");\r\n          const fpath = path.join(tempDir, hash);\r\n\r\n          if (file.rawData) {\r\n            promisses.push(this.creatTempFile(fpath, file.rawData, file.encoding));\r\n          }\r\n          else if (parser.isParsable(file.extention)) {\r\n            promisses.push(this.creatTempFile(fpath, parser.parse(file.extention, file.data), file.encoding));\r\n          }\r\n          else {\r\n            const data: string = isPrimitive(file.data) ? file.data : JSON.stringify(file.data);\r\n            promisses.push(this.creatTempFile(fpath, data, file.encoding));\r\n          }\r\n\r\n          this._mapping[hash] = this._args.length + files.length;\r\n          files.push(fpath);\r\n        }\r\n\r\n        this._args = this._args.concat(this.buildArg(param.flag, files));\r\n      }\r\n    }\r\n\r\n    return Promise.all(promisses);\r\n  }\r\n\r\n  private buildArg(flag: string, values: string[]) {\r\n    let args: string[] = [];\r\n    const errors: any = {};\r\n\r\n    if (flag) args.push(flag);\r\n    args = args.concat(values);\r\n\r\n    return args;\r\n  }\r\n\r\n  private creatTempFile(fPath: string, data: string, encoding: string) {\r\n    return new Promise((resolve, reject) => {\r\n      fs.writeFile(fPath, data, encoding, (err) => {\r\n        if (err) reject(err);\r\n        this._tempFiles.push(fPath);\r\n        resolve();\r\n      });\r\n    });\r\n  }\r\n}\r\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"38332c1c6bec735bad894cdfa449c7548ba71fa5"}
,"/usr/src/app/src/controllers/app.invoke/index.ts": {"path":"/usr/src/app/src/controllers/app.invoke/index.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":20},"end":{"line":3,"column":44}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":56}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":60}}},"fnMap":{},"branchMap":{},"s":{"0":3,"1":3,"2":3,"3":3},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":";;AAAA,6CAAmE;AAA1D,wCAAA,eAAe,CAAA;AAAE,0CAAA,iBAAiB,CAAA","sourcesContent":["export { invokeAlgorithm, invokeAlgorithmV2 } from \"./post.invoke\";\r\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"00a06a16b280d6a867165cec1d44edcbd6169a0b"}
,"/usr/src/app/src/controllers/app.invoke/pipe.output.ts": {"path":"/usr/src/app/src/controllers/app.invoke/pipe.output.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":17},"end":{"line":3,"column":34}},"2":{"start":{"line":4,"column":11},"end":{"line":4,"column":24}},"3":{"start":{"line":5,"column":13},"end":{"line":5,"column":28}},"4":{"start":{"line":8,"column":8},"end":{"line":8,"column":23}},"5":{"start":{"line":9,"column":8},"end":{"line":9,"column":46}},"6":{"start":{"line":12,"column":27},"end":{"line":12,"column":76}},"7":{"start":{"line":13,"column":27},"end":{"line":13,"column":76}},"8":{"start":{"line":14,"column":8},"end":{"line":18,"column":9}},"9":{"start":{"line":15,"column":12},"end":{"line":17,"column":15}},"10":{"start":{"line":16,"column":16},"end":{"line":16,"column":39}},"11":{"start":{"line":19,"column":8},"end":{"line":23,"column":9}},"12":{"start":{"line":20,"column":12},"end":{"line":22,"column":15}},"13":{"start":{"line":21,"column":16},"end":{"line":21,"column":39}},"14":{"start":{"line":24,"column":8},"end":{"line":37,"column":9}},"15":{"start":{"line":25,"column":12},"end":{"line":36,"column":15}},"16":{"start":{"line":26,"column":30},"end":{"line":26,"column":41}},"17":{"start":{"line":27,"column":33},"end":{"line":29,"column":18}},"18":{"start":{"line":28,"column":20},"end":{"line":28,"column":61}},"19":{"start":{"line":30,"column":16},"end":{"line":35,"column":17}},"20":{"start":{"line":31,"column":20},"end":{"line":33,"column":21}},"21":{"start":{"line":32,"column":24},"end":{"line":32,"column":44}},"22":{"start":{"line":34,"column":20},"end":{"line":34,"column":58}},"23":{"start":{"line":38,"column":8},"end":{"line":56,"column":11}},"24":{"start":{"line":40,"column":12},"end":{"line":40,"column":31}},"25":{"start":{"line":41,"column":12},"end":{"line":41,"column":31}},"26":{"start":{"line":42,"column":12},"end":{"line":51,"column":21}},"27":{"start":{"line":54,"column":12},"end":{"line":54,"column":73}},"28":{"start":{"line":55,"column":12},"end":{"line":55,"column":35}},"29":{"start":{"line":59,"column":8},"end":{"line":59,"column":63}},"30":{"start":{"line":60,"column":8},"end":{"line":60,"column":35}},"31":{"start":{"line":61,"column":8},"end":{"line":61,"column":30}},"32":{"start":{"line":62,"column":8},"end":{"line":62,"column":56}},"33":{"start":{"line":63,"column":8},"end":{"line":63,"column":41}},"34":{"start":{"line":64,"column":8},"end":{"line":64,"column":57}},"35":{"start":{"line":65,"column":8},"end":{"line":65,"column":41}},"36":{"start":{"line":66,"column":8},"end":{"line":68,"column":9}},"37":{"start":{"line":67,"column":12},"end":{"line":67,"column":93}},"38":{"start":{"line":69,"column":8},"end":{"line":69,"column":30}},"39":{"start":{"line":70,"column":8},"end":{"line":70,"column":55}},"40":{"start":{"line":71,"column":8},"end":{"line":71,"column":31}},"41":{"start":{"line":74,"column":8},"end":{"line":86,"column":9}},"42":{"start":{"line":75,"column":32},"end":{"line":75,"column":40}},"43":{"start":{"line":76,"column":12},"end":{"line":76,"column":59}},"44":{"start":{"line":77,"column":12},"end":{"line":84,"column":13}},"45":{"start":{"line":78,"column":29},"end":{"line":78,"column":49}},"46":{"start":{"line":79,"column":16},"end":{"line":79,"column":53}},"47":{"start":{"line":80,"column":16},"end":{"line":80,"column":91}},"48":{"start":{"line":81,"column":16},"end":{"line":83,"column":17}},"49":{"start":{"line":82,"column":20},"end":{"line":82,"column":44}},"50":{"start":{"line":85,"column":12},"end":{"line":85,"column":35}},"51":{"start":{"line":89,"column":0},"end":{"line":89,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":4},"end":{"line":7,"column":5}},"loc":{"start":{"line":7,"column":21},"end":{"line":10,"column":5}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":11,"column":4},"end":{"line":11,"column":5}},"loc":{"start":{"line":11,"column":46},"end":{"line":57,"column":5}},"line":11},"2":{"name":"(anonymous_2)","decl":{"start":{"line":15,"column":42},"end":{"line":15,"column":43}},"loc":{"start":{"line":15,"column":52},"end":{"line":17,"column":13}},"line":15},"3":{"name":"(anonymous_3)","decl":{"start":{"line":20,"column":42},"end":{"line":20,"column":43}},"loc":{"start":{"line":20,"column":52},"end":{"line":22,"column":13}},"line":20},"4":{"name":"(anonymous_4)","decl":{"start":{"line":25,"column":35},"end":{"line":25,"column":36}},"loc":{"start":{"line":25,"column":53},"end":{"line":36,"column":13}},"line":25},"5":{"name":"(anonymous_5)","decl":{"start":{"line":27,"column":44},"end":{"line":27,"column":45}},"loc":{"start":{"line":27,"column":51},"end":{"line":29,"column":17}},"line":27},"6":{"name":"(anonymous_6)","decl":{"start":{"line":39,"column":18},"end":{"line":39,"column":19}},"loc":{"start":{"line":39,"column":28},"end":{"line":52,"column":9}},"line":39},"7":{"name":"(anonymous_7)","decl":{"start":{"line":53,"column":19},"end":{"line":53,"column":20}},"loc":{"start":{"line":53,"column":30},"end":{"line":56,"column":9}},"line":53},"8":{"name":"(anonymous_8)","decl":{"start":{"line":58,"column":4},"end":{"line":58,"column":5}},"loc":{"start":{"line":58,"column":36},"end":{"line":72,"column":5}},"line":58},"9":{"name":"(anonymous_9)","decl":{"start":{"line":73,"column":4},"end":{"line":73,"column":5}},"loc":{"start":{"line":73,"column":21},"end":{"line":87,"column":5}},"line":73}},"branchMap":{"0":{"loc":{"start":{"line":14,"column":8},"end":{"line":18,"column":9}},"type":"if","locations":[{"start":{"line":14,"column":8},"end":{"line":18,"column":9}},{"start":{"line":14,"column":8},"end":{"line":18,"column":9}}],"line":14},"1":{"loc":{"start":{"line":19,"column":8},"end":{"line":23,"column":9}},"type":"if","locations":[{"start":{"line":19,"column":8},"end":{"line":23,"column":9}},{"start":{"line":19,"column":8},"end":{"line":23,"column":9}}],"line":19},"2":{"loc":{"start":{"line":24,"column":8},"end":{"line":37,"column":9}},"type":"if","locations":[{"start":{"line":24,"column":8},"end":{"line":37,"column":9}},{"start":{"line":24,"column":8},"end":{"line":37,"column":9}}],"line":24},"3":{"loc":{"start":{"line":30,"column":16},"end":{"line":35,"column":17}},"type":"if","locations":[{"start":{"line":30,"column":16},"end":{"line":35,"column":17}},{"start":{"line":30,"column":16},"end":{"line":35,"column":17}}],"line":30},"4":{"loc":{"start":{"line":31,"column":20},"end":{"line":33,"column":21}},"type":"if","locations":[{"start":{"line":31,"column":20},"end":{"line":33,"column":21}},{"start":{"line":31,"column":20},"end":{"line":33,"column":21}}],"line":31},"5":{"loc":{"start":{"line":66,"column":8},"end":{"line":68,"column":9}},"type":"if","locations":[{"start":{"line":66,"column":8},"end":{"line":68,"column":9}},{"start":{"line":66,"column":8},"end":{"line":68,"column":9}}],"line":66},"6":{"loc":{"start":{"line":77,"column":28},"end":{"line":77,"column":77}},"type":"binary-expr","locations":[{"start":{"line":77,"column":28},"end":{"line":77,"column":45}},{"start":{"line":77,"column":49},"end":{"line":77,"column":77}}],"line":77},"7":{"loc":{"start":{"line":81,"column":16},"end":{"line":83,"column":17}},"type":"if","locations":[{"start":{"line":81,"column":16},"end":{"line":83,"column":17}},{"start":{"line":81,"column":16},"end":{"line":83,"column":17}}],"line":81}},"s":{"0":3,"1":3,"2":3,"3":3,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":3},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"inputSourceMap":{"version":3,"file":"pipe.output.js","sourceRoot":"","sources":["pipe.output.ts"],"names":[],"mappings":"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","sourcesContent":["import { Readable } from \"stream\";\r\nimport * as fs from \"fs\";\r\nimport * as path from \"path\";\r\nimport { Response } from \"express\";\r\n\r\nimport { OutputModel, FileOutputModel } from \"../../models/Application\";\r\nimport { default as Spawn } from \"./spawn\";\r\n\r\ntype PipeOptions = {\r\n  stderr?: boolean,\r\n  stdout?: boolean,\r\n  files?: boolean\r\n};\r\n\r\ntype FilesCreated = FileOutputModel & {\r\n  files: {\r\n    fPath: string,\r\n    fName: string\r\n  }[]\r\n};\r\n\r\n\r\ntype stdOptions = {\r\n  stdout: {\r\n    path: string,\r\n    alias: string\r\n  }\r\n  stderr: {\r\n    path: string,\r\n    alias: string\r\n  }\r\n};\r\n\r\nexport abstract class PipeOutput {\r\n  private res: Response;\r\n  protected stream: Readable;\r\n\r\n  constructor(res: Response) {\r\n    this.res = res;\r\n    this.stream = new Readable();\r\n  }\r\n\r\n  public initOutput(options: PipeOptions, model: OutputModel, spawn: Spawn, outdir: string) {\r\n    const fOutStream = fs.createWriteStream(path.join(outdir, \"stdout\"));\r\n    const fErrStream = fs.createWriteStream(path.join(outdir, \"stderr\"));\r\n\r\n    if (options.stderr) {\r\n      spawn.child.stderr.on(\"data\", (data: Buffer) => {\r\n        fErrStream.write(data);\r\n      });\r\n    }\r\n    if (options.stdout) {\r\n      spawn.child.stdout.on(\"data\", (data: Buffer) => {\r\n        fOutStream.write(data);\r\n      });\r\n    }\r\n\r\n    if (options.files) {\r\n      spawn.files.on(\"data\", (fPath: string, fName: string) => {\r\n        const files: FileOutputModel[] = model.files;\r\n        const fOptions = <FilesCreated>files.find((f) => {\r\n          return new RegExp(f.fileRgx).test(fName);\r\n        });\r\n\r\n        if (fOptions) {\r\n          if (!fOptions.files) {\r\n            fOptions.files = [];\r\n          }\r\n          fOptions.files.push({ fPath, fName });\r\n        }\r\n      });\r\n    }\r\n\r\n    spawn.runChild\r\n      .then((code) => {\r\n        fOutStream.close();\r\n        fErrStream.close();\r\n\r\n        this.pipeData(<FilesCreated[]>model.files, {\r\n          stdout: {\r\n            alias: model.stdout.alias,\r\n            path: path.join(outdir, \"stdout\")\r\n          },\r\n          stderr: {\r\n            alias: model.stderr.alias,\r\n            path: path.join(outdir, \"stderr\")\r\n          }\r\n        }, code);\r\n      })\r\n      .catch((error) => {\r\n        this.stream.push(`{\"Fatal Error\":${JSON.stringify(error)}}`);\r\n        this.stream.push(null);\r\n      });\r\n  }\r\n\r\n  public pipeData(files: FilesCreated[], std: stdOptions, exit_code: number) {\r\n    this.res.setHeader(\"Content-Type\", \"application/json\");\r\n    this.stream.pipe(this.res);\r\n    this.stream.push(\"{\");\r\n    this.stream.push('\"' + std.stdout.alias + '\":');\r\n    this.pipeStdout(std.stdout.path);\r\n    this.stream.push(',\"' + std.stderr.alias + '\":');\r\n    this.pipeStdout(std.stderr.path);\r\n    if (exit_code == null) {\r\n      this.stream.push('\",waring\":\"Process allowed execution time expired (Killed).\"');\r\n    }\r\n    this.pipeFiles(<FilesCreated[]>files);\r\n    this.stream.push(`,\"exit_code\":${exit_code}}`);\r\n    this.stream.push(null);\r\n  }\r\n\r\n  private pipeFiles(files: FilesCreated[]) {\r\n    for (let n = 0; n < files.length; n++) {\r\n      const fileOutOpts = files[n];\r\n      this.stream.push(`,\"${fileOutOpts.alias}\":[{`);\r\n      for (let i = 0; fileOutOpts.files && i < fileOutOpts.files.length; i++) {\r\n        const file = fileOutOpts.files[i];\r\n        this.stream.push(`\"${file.fName}\":`);\r\n        this.pipeFileData(path.join(file.fPath, file.fName), fileOutOpts.encoding);\r\n\r\n        if (i + 1 !== fileOutOpts.files.length) {\r\n          this.stream.push(\"},{\");\r\n        }\r\n      }\r\n      this.stream.push(\"}]\");\r\n    }\r\n  }\r\n\r\n  protected abstract pipeStdout(fPath: string): void;\r\n\r\n  protected abstract pipeStderr(fPath: string): void;\r\n\r\n  protected abstract pipeFileData(fPath: string, encoding: string): void;\r\n}\r\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"c17122fc13001ed3f96eec75d96a656113813263"}
,"/usr/src/app/src/controllers/app.invoke/pipe.raw.ts": {"path":"/usr/src/app/src/controllers/app.invoke/pipe.raw.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":11},"end":{"line":3,"column":24}},"2":{"start":{"line":4,"column":22},"end":{"line":4,"column":46}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":75}},"4":{"start":{"line":8,"column":8},"end":{"line":8,"column":15}},"5":{"start":{"line":11,"column":8},"end":{"line":11,"column":51}},"6":{"start":{"line":14,"column":8},"end":{"line":14,"column":51}},"7":{"start":{"line":17,"column":8},"end":{"line":17,"column":51}},"8":{"start":{"line":20,"column":0},"end":{"line":20,"column":38}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":4},"end":{"line":6,"column":5}},"loc":{"start":{"line":6,"column":37},"end":{"line":9,"column":5}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":22},"end":{"line":12,"column":5}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":13,"column":22},"end":{"line":15,"column":5}},"line":13},"3":{"name":"(anonymous_3)","decl":{"start":{"line":16,"column":4},"end":{"line":16,"column":5}},"loc":{"start":{"line":16,"column":34},"end":{"line":18,"column":5}},"line":16}},"branchMap":{},"s":{"0":3,"1":3,"2":3,"3":0,"4":0,"5":0,"6":0,"7":0,"8":3},"f":{"0":0,"1":0,"2":0,"3":0},"b":{},"inputSourceMap":{"version":3,"file":"pipe.raw.js","sourceRoot":"","sources":["pipe.raw.ts"],"names":[],"mappings":";;AAAA,yBAAyB;AACzB,+CAA2C;AAI3C,mBAA2B,SAAQ,wBAAU;IAEnC,eAAe,CAAC,KAAa,EAAE,QAAgB;QACrD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC,YAAY,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;QACnE,MAAM,CAAC;IACT,CAAC;IAES,UAAU,CAAC,KAAa;QAChC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IAC7C,CAAC;IAES,UAAU,CAAC,KAAa;QAChC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IAC7C,CAAC;IAES,YAAY,CAAC,KAAa,EAAE,QAAgB;QACpD,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,MAAM,CAAC,CAAC;IAC7C,CAAC;CACF;AAlBD,sCAkBC","sourcesContent":["import * as fs from \"fs\";\r\nimport { PipeOutput } from \"./pipe.output\";\r\n\r\nimport { FileParser } from \"../file.parser/file.parsers\";\r\n\r\nexport class PipeRawOutput extends PipeOutput {\r\n\r\n  private pipeRawFileData(fPath: string, encoding: string) {\r\n    this.stream.push(JSON.stringify(fs.readFileSync(fPath, encoding)));\r\n    return;\r\n  }\r\n\r\n  protected pipeStdout(fPath: string) {\r\n    return this.pipeRawFileData(fPath, \"utf8\");\r\n  }\r\n\r\n  protected pipeStderr(fPath: string) {\r\n    return this.pipeRawFileData(fPath, \"utf8\");\r\n  }\r\n\r\n  protected pipeFileData(fPath: string, encoding: string) {\r\n    return this.pipeRawFileData(fPath, \"utf8\");\r\n  }\r\n}\r\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"2fe4f5c5c5c1ed9b3be4f3ba049298338fdeb3ac"}
,"/usr/src/app/src/controllers/app.invoke/post.invoke.ts": {"path":"/usr/src/app/src/controllers/app.invoke/post.invoke.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":9,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":8,"column":7}},"2":{"start":{"line":4,"column":36},"end":{"line":4,"column":97}},"3":{"start":{"line":4,"column":42},"end":{"line":4,"column":70}},"4":{"start":{"line":4,"column":85},"end":{"line":4,"column":95}},"5":{"start":{"line":5,"column":35},"end":{"line":5,"column":100}},"6":{"start":{"line":5,"column":41},"end":{"line":5,"column":73}},"7":{"start":{"line":5,"column":88},"end":{"line":5,"column":98}},"8":{"start":{"line":6,"column":32},"end":{"line":6,"column":149}},"9":{"start":{"line":6,"column":97},"end":{"line":6,"column":119}},"10":{"start":{"line":7,"column":8},"end":{"line":7,"column":78}},"11":{"start":{"line":10,"column":0},"end":{"line":10,"column":62}},"12":{"start":{"line":11,"column":19},"end":{"line":11,"column":40}},"13":{"start":{"line":12,"column":19},"end":{"line":12,"column":40}},"14":{"start":{"line":13,"column":21},"end":{"line":13,"column":44}},"15":{"start":{"line":15,"column":0},"end":{"line":18,"column":36}},"16":{"start":{"line":16,"column":4},"end":{"line":16,"column":54}},"17":{"start":{"line":17,"column":4},"end":{"line":17,"column":46}},"18":{"start":{"line":25,"column":4},"end":{"line":50,"column":7}},"19":{"start":{"line":27,"column":8},"end":{"line":27,"column":69}},"20":{"start":{"line":28,"column":8},"end":{"line":30,"column":9}},"21":{"start":{"line":29,"column":12},"end":{"line":29,"column":19}},"22":{"start":{"line":31,"column":20},"end":{"line":31,"column":76}},"23":{"start":{"line":33,"column":8},"end":{"line":39,"column":9}},"24":{"start":{"line":34,"column":12},"end":{"line":34,"column":50}},"25":{"start":{"line":35,"column":12},"end":{"line":35,"column":72}},"26":{"start":{"line":38,"column":12},"end":{"line":38,"column":29}},"27":{"start":{"line":40,"column":23},"end":{"line":40,"column":47}},"28":{"start":{"line":41,"column":8},"end":{"line":49,"column":9}},"29":{"start":{"line":43,"column":29},"end":{"line":43,"column":62}},"30":{"start":{"line":44,"column":16},"end":{"line":44,"column":92}},"31":{"start":{"line":45,"column":16},"end":{"line":45,"column":22}},"32":{"start":{"line":48,"column":16},"end":{"line":48,"column":22}},"33":{"start":{"line":52,"column":0},"end":{"line":52,"column":42}},"34":{"start":{"line":54,"column":4},"end":{"line":72,"column":7}},"35":{"start":{"line":56,"column":8},"end":{"line":56,"column":69}},"36":{"start":{"line":57,"column":8},"end":{"line":59,"column":9}},"37":{"start":{"line":58,"column":12},"end":{"line":58,"column":19}},"38":{"start":{"line":60,"column":20},"end":{"line":60,"column":76}},"39":{"start":{"line":61,"column":8},"end":{"line":66,"column":9}},"40":{"start":{"line":62,"column":12},"end":{"line":62,"column":50}},"41":{"start":{"line":65,"column":12},"end":{"line":65,"column":29}},"42":{"start":{"line":67,"column":8},"end":{"line":71,"column":11}},"43":{"start":{"line":69,"column":12},"end":{"line":69,"column":75}},"44":{"start":{"line":70,"column":12},"end":{"line":70,"column":22}},"45":{"start":{"line":74,"column":0},"end":{"line":74,"column":46}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":3,"column":36},"end":{"line":3,"column":37}},"loc":{"start":{"line":3,"column":63},"end":{"line":8,"column":5}},"line":3},"2":{"name":"fulfilled","decl":{"start":{"line":4,"column":17},"end":{"line":4,"column":26}},"loc":{"start":{"line":4,"column":34},"end":{"line":4,"column":99}},"line":4},"3":{"name":"rejected","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":25}},"loc":{"start":{"line":5,"column":33},"end":{"line":5,"column":102}},"line":5},"4":{"name":"step","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":21}},"loc":{"start":{"line":6,"column":30},"end":{"line":6,"column":151}},"line":6},"5":{"name":"(anonymous_5)","decl":{"start":{"line":6,"column":76},"end":{"line":6,"column":77}},"loc":{"start":{"line":6,"column":95},"end":{"line":6,"column":121}},"line":6},"6":{"name":"(anonymous_6)","decl":{"start":{"line":15,"column":1},"end":{"line":15,"column":2}},"loc":{"start":{"line":15,"column":23},"end":{"line":18,"column":1}},"line":15},"7":{"name":"invokeAlgorithm","decl":{"start":{"line":24,"column":9},"end":{"line":24,"column":24}},"loc":{"start":{"line":24,"column":41},"end":{"line":51,"column":1}},"line":24},"8":{"name":"(anonymous_8)","decl":{"start":{"line":25,"column":43},"end":{"line":25,"column":44}},"loc":{"start":{"line":25,"column":56},"end":{"line":50,"column":5}},"line":25},"9":{"name":"invokeAlgorithmV2","decl":{"start":{"line":53,"column":9},"end":{"line":53,"column":26}},"loc":{"start":{"line":53,"column":43},"end":{"line":73,"column":1}},"line":53},"10":{"name":"(anonymous_10)","decl":{"start":{"line":54,"column":43},"end":{"line":54,"column":44}},"loc":{"start":{"line":54,"column":56},"end":{"line":72,"column":5}},"line":54},"11":{"name":"(anonymous_11)","decl":{"start":{"line":68,"column":19},"end":{"line":68,"column":20}},"loc":{"start":{"line":68,"column":28},"end":{"line":71,"column":9}},"line":68}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":9,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":9,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":16},"end":{"line":3,"column":34}},"type":"binary-expr","locations":[{"start":{"line":3,"column":16},"end":{"line":3,"column":17}},{"start":{"line":3,"column":22},"end":{"line":3,"column":33}}],"line":3},"2":{"loc":{"start":{"line":6,"column":32},"end":{"line":6,"column":148}},"type":"cond-expr","locations":[{"start":{"line":6,"column":46},"end":{"line":6,"column":67}},{"start":{"line":6,"column":70},"end":{"line":6,"column":148}}],"line":6},"3":{"loc":{"start":{"line":7,"column":51},"end":{"line":7,"column":67}},"type":"binary-expr","locations":[{"start":{"line":7,"column":51},"end":{"line":7,"column":61}},{"start":{"line":7,"column":65},"end":{"line":7,"column":67}}],"line":7},"4":{"loc":{"start":{"line":18,"column":3},"end":{"line":18,"column":34}},"type":"binary-expr","locations":[{"start":{"line":18,"column":3},"end":{"line":18,"column":13}},{"start":{"line":18,"column":18},"end":{"line":18,"column":33}}],"line":18},"5":{"loc":{"start":{"line":28,"column":8},"end":{"line":30,"column":9}},"type":"if","locations":[{"start":{"line":28,"column":8},"end":{"line":30,"column":9}},{"start":{"line":28,"column":8},"end":{"line":30,"column":9}}],"line":28},"6":{"loc":{"start":{"line":41,"column":8},"end":{"line":49,"column":9}},"type":"switch","locations":[{"start":{"line":42,"column":12},"end":{"line":45,"column":22}},{"start":{"line":46,"column":12},"end":{"line":48,"column":22}}],"line":41},"7":{"loc":{"start":{"line":57,"column":8},"end":{"line":59,"column":9}},"type":"if","locations":[{"start":{"line":57,"column":8},"end":{"line":59,"column":9}},{"start":{"line":57,"column":8},"end":{"line":59,"column":9}}],"line":57}},"s":{"0":3,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":3,"12":3,"13":3,"14":3,"15":3,"16":3,"17":3,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":3,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":3},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":3,"7":0,"8":0,"9":0,"10":0,"11":0},"b":{"0":[3,3,3],"1":[0,0],"2":[0,0],"3":[0,0],"4":[3,3],"5":[0,0],"6":[0,0],"7":[0,0]},"inputSourceMap":{"version":3,"file":"post.invoke.js","sourceRoot":"","sources":["post.invoke.ts"],"names":[],"mappings":";;;;;;;;;;AAGA,yCAA2C;AAC3C,yCAAqC;AACrC,6CAAkD;AAoBlD,IAAK,UAGJ;AAHD,WAAK,UAAU;IACb,iDAAO,CAAA;IACP,yCAAG,CAAA;AACL,CAAC,EAHI,UAAU,KAAV,UAAU,QAGd;AAGD;;;;EAIE;AAEF,yBAAsC,GAAY,EAAE,GAAa,EAAE,IAAkB;;QACnF,IAAI,IAAI,CAAC;QAET,IAAI,GAAG,MAAM,+BAAkB,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;QAEhD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YACV,MAAM,CAAC;QACT,CAAC;QAED,MAAM,GAAG,GAAG,IAAI,kBAAO,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAE1D,IAAI,OAAc,CAAC;QAEnB,IAAI,CAAC;YACH,MAAM,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACtC,OAAO,GAAG,MAAM,GAAG,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC9D,CAAC;QACD,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACX,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC;QAED,MAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;QAExC,MAAM,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;YACpB,KAAK,UAAU,CAAC,OAAO;gBACrB,MAAM,IAAI,GAAG,IAAI,wBAAa,CAAC,GAAG,CAAC,CAAC;gBACpC,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,OAAO,EAAE,GAAG,CAAC,YAAY,EAAE,CAAC,CAAC;gBAC5E,KAAK,CAAC;YACR,KAAK,UAAU,CAAC,GAAG;gBACjB,gFAAgF;gBAChF,KAAK,CAAC;QACV,CAAC;IACH,CAAC;CAAA;AAhCD,0CAgCC;AAED,2BAAwC,GAAY,EAAE,GAAa,EAAE,IAAkB;;QACrF,IAAI,IAAI,CAAC;QAET,IAAI,GAAG,MAAM,+BAAkB,CAAC,GAAG,EAAE,GAAG,EAAE,IAAI,CAAC,CAAC;QAEhD,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YACV,MAAM,CAAC;QACT,CAAC;QAED,MAAM,GAAG,GAAG,IAAI,kBAAO,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAE1D,IAAI,CAAC;YACH,MAAM,GAAG,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACxC,CAAC;QACD,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACX,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC;QAED,GAAG,CAAC,kBAAkB,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;aACnD,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE;YACb,OAAO,CAAC,KAAK,CAAC,0CAA0C,GAAG,EAAE,CAAC,CAAC;YAC/D,IAAI,CAAC,GAAG,CAAC,CAAC;QACZ,CAAC,CAAC,CAAC;IACP,CAAC;CAAA;AAvBD,8CAuBC","sourcesContent":["import { Request, Response, NextFunction } from \"express\";\r\n\r\nimport { default as Spawn } from \"./spawn\";\r\nimport { PipeRawOutput } from \"./pipe.raw\";\r\nimport { ExecApp } from \"./exec.app\";\r\nimport { preInvokeAlgorithm } from \"./pre.invoke\";\r\n\r\ntype Arguments = {\r\n  [key: string]: any\r\n};\r\n\r\ntype InvokeModel = {\r\n  app_id: string,\r\n  version_id: string,\r\n  args: Arguments,\r\n  options: {\r\n    timeout: number,\r\n    output: {\r\n      mode: OutputMode,\r\n      stderr: boolean,\r\n      stdout: boolean\r\n    }\r\n  }\r\n};\r\n\r\nenum OutputMode {\r\n  RawJson,\r\n  Raw\r\n}\r\n\r\n\r\n/*\r\n  TODO:\r\n    1.  File parsing is missing (input and output)\r\n    2.  Cach calls (save output to file)\r\n*/\r\n\r\nexport async function invokeAlgorithm(req: Request, res: Response, next: NextFunction) {\r\n  let data;\r\n\r\n  data = await preInvokeAlgorithm(req, res, next);\r\n\r\n  if (!data) {\r\n    return;\r\n  }\r\n\r\n  const app = new ExecApp(data.call.app_id, data.algorithm);\r\n\r\n  let process: Spawn;\r\n\r\n  try {\r\n    await app.compileArgs(data.call.args);\r\n    process = await app.spawnProcess(data.call.options.timeout);\r\n  }\r\n  catch (err) {\r\n    return next(err);\r\n  }\r\n\r\n  const output = data.call.options.output;\r\n\r\n  switch (output.mode) {\r\n    case OutputMode.RawJson:\r\n      const pipe = new PipeRawOutput(res);\r\n      pipe.initOutput(output, data.algorithm.output, process, app.getOutputDir());\r\n      break;\r\n    case OutputMode.Raw:\r\n      //  pipeRawData(process, res, { stderr: output.stderr, stdout: output.stdout });\r\n      break;\r\n  }\r\n}\r\n\r\nexport async function invokeAlgorithmV2(req: Request, res: Response, next: NextFunction) {\r\n  let data;\r\n\r\n  data = await preInvokeAlgorithm(req, res, next);\r\n\r\n  if (!data) {\r\n    return;\r\n  }\r\n\r\n  const app = new ExecApp(data.call.app_id, data.algorithm);\r\n\r\n  try {\r\n    await app.compileArgs(data.call.args);\r\n  }\r\n  catch (err) {\r\n    return next(err);\r\n  }\r\n\r\n  app.spawnRemoteProcess(res, data.call.options.timeout)\r\n    .catch((err) => {\r\n      console.error(`unable to run the code in the sandbox: ${err}`);\r\n      next(err);\r\n    });\r\n}\r\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"e381ee511161968d14e57325b6b1ca1c050ff508"}
,"/usr/src/app/src/controllers/app.invoke/pre.invoke.ts": {"path":"/usr/src/app/src/controllers/app.invoke/pre.invoke.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":9,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":8,"column":7}},"2":{"start":{"line":4,"column":36},"end":{"line":4,"column":97}},"3":{"start":{"line":4,"column":42},"end":{"line":4,"column":70}},"4":{"start":{"line":4,"column":85},"end":{"line":4,"column":95}},"5":{"start":{"line":5,"column":35},"end":{"line":5,"column":100}},"6":{"start":{"line":5,"column":41},"end":{"line":5,"column":73}},"7":{"start":{"line":5,"column":88},"end":{"line":5,"column":98}},"8":{"start":{"line":6,"column":32},"end":{"line":6,"column":149}},"9":{"start":{"line":6,"column":97},"end":{"line":6,"column":119}},"10":{"start":{"line":7,"column":8},"end":{"line":7,"column":78}},"11":{"start":{"line":10,"column":0},"end":{"line":10,"column":62}},"12":{"start":{"line":11,"column":15},"end":{"line":11,"column":30}},"13":{"start":{"line":12,"column":22},"end":{"line":12,"column":57}},"14":{"start":{"line":13,"column":16},"end":{"line":13,"column":38}},"15":{"start":{"line":15,"column":0},"end":{"line":18,"column":36}},"16":{"start":{"line":16,"column":4},"end":{"line":16,"column":54}},"17":{"start":{"line":17,"column":4},"end":{"line":17,"column":46}},"18":{"start":{"line":20,"column":4},"end":{"line":20,"column":36}},"19":{"start":{"line":21,"column":4},"end":{"line":21,"column":50}},"20":{"start":{"line":22,"column":4},"end":{"line":22,"column":76}},"21":{"start":{"line":23,"column":4},"end":{"line":23,"column":66}},"22":{"start":{"line":24,"column":4},"end":{"line":24,"column":66}},"23":{"start":{"line":25,"column":4},"end":{"line":25,"column":55}},"24":{"start":{"line":26,"column":4},"end":{"line":26,"column":30}},"25":{"start":{"line":29,"column":19},"end":{"line":29,"column":21}},"26":{"start":{"line":30,"column":19},"end":{"line":30,"column":37}},"27":{"start":{"line":31,"column":4},"end":{"line":33,"column":5}},"28":{"start":{"line":32,"column":8},"end":{"line":32,"column":119}},"29":{"start":{"line":34,"column":4},"end":{"line":39,"column":5}},"30":{"start":{"line":35,"column":8},"end":{"line":35,"column":140}},"31":{"start":{"line":38,"column":8},"end":{"line":38,"column":62}},"32":{"start":{"line":40,"column":4},"end":{"line":45,"column":5}},"33":{"start":{"line":41,"column":8},"end":{"line":41,"column":140}},"34":{"start":{"line":44,"column":8},"end":{"line":44,"column":62}},"35":{"start":{"line":46,"column":4},"end":{"line":51,"column":5}},"36":{"start":{"line":47,"column":8},"end":{"line":47,"column":140}},"37":{"start":{"line":50,"column":8},"end":{"line":50,"column":58}},"38":{"start":{"line":52,"column":4},"end":{"line":52,"column":18}},"39":{"start":{"line":55,"column":4},"end":{"line":60,"column":5}},"40":{"start":{"line":56,"column":8},"end":{"line":56,"column":56}},"41":{"start":{"line":59,"column":8},"end":{"line":59,"column":39}},"42":{"start":{"line":63,"column":19},"end":{"line":63,"column":21}},"43":{"start":{"line":64,"column":4},"end":{"line":113,"column":5}},"44":{"start":{"line":65,"column":8},"end":{"line":67,"column":9}},"45":{"start":{"line":66,"column":12},"end":{"line":66,"column":36}},"46":{"start":{"line":68,"column":21},"end":{"line":68,"column":30}},"47":{"start":{"line":69,"column":22},"end":{"line":71,"column":10}},"48":{"start":{"line":70,"column":12},"end":{"line":70,"column":37}},"49":{"start":{"line":72,"column":8},"end":{"line":112,"column":9}},"50":{"start":{"line":73,"column":12},"end":{"line":73,"column":68}},"51":{"start":{"line":76,"column":12},"end":{"line":78,"column":13}},"52":{"start":{"line":77,"column":16},"end":{"line":77,"column":25}},"53":{"start":{"line":79,"column":12},"end":{"line":81,"column":13}},"54":{"start":{"line":80,"column":16},"end":{"line":80,"column":154}},"55":{"start":{"line":82,"column":12},"end":{"line":84,"column":13}},"56":{"start":{"line":83,"column":16},"end":{"line":83,"column":156}},"57":{"start":{"line":85,"column":12},"end":{"line":111,"column":13}},"58":{"start":{"line":86,"column":24},"end":{"line":86,"column":25}},"59":{"start":{"line":87,"column":16},"end":{"line":110,"column":19}},"60":{"start":{"line":88,"column":20},"end":{"line":94,"column":21}},"61":{"start":{"line":89,"column":24},"end":{"line":91,"column":25}},"62":{"start":{"line":90,"column":28},"end":{"line":90,"column":99}},"63":{"start":{"line":92,"column":24},"end":{"line":92,"column":28}},"64":{"start":{"line":93,"column":24},"end":{"line":93,"column":31}},"65":{"start":{"line":95,"column":20},"end":{"line":95,"column":58}},"66":{"start":{"line":96,"column":20},"end":{"line":96,"column":60}},"67":{"start":{"line":97,"column":20},"end":{"line":99,"column":21}},"68":{"start":{"line":98,"column":24},"end":{"line":98,"column":92}},"69":{"start":{"line":100,"column":20},"end":{"line":102,"column":21}},"70":{"start":{"line":101,"column":24},"end":{"line":101,"column":128}},"71":{"start":{"line":103,"column":20},"end":{"line":105,"column":21}},"72":{"start":{"line":104,"column":24},"end":{"line":104,"column":131}},"73":{"start":{"line":106,"column":20},"end":{"line":108,"column":21}},"74":{"start":{"line":107,"column":24},"end":{"line":107,"column":129}},"75":{"start":{"line":109,"column":20},"end":{"line":109,"column":24}},"76":{"start":{"line":114,"column":4},"end":{"line":119,"column":7}},"77":{"start":{"line":115,"column":8},"end":{"line":118,"column":9}},"78":{"start":{"line":116,"column":24},"end":{"line":116,"column":106}},"79":{"start":{"line":117,"column":12},"end":{"line":117,"column":82}},"80":{"start":{"line":120,"column":4},"end":{"line":120,"column":18}},"81":{"start":{"line":123,"column":4},"end":{"line":175,"column":7}},"82":{"start":{"line":124,"column":21},"end":{"line":124,"column":29}},"83":{"start":{"line":125,"column":8},"end":{"line":125,"column":26}},"84":{"start":{"line":126,"column":21},"end":{"line":126,"column":44}},"85":{"start":{"line":127,"column":8},"end":{"line":130,"column":9}},"86":{"start":{"line":128,"column":12},"end":{"line":128,"column":45}},"87":{"start":{"line":129,"column":12},"end":{"line":129,"column":19}},"88":{"start":{"line":132,"column":8},"end":{"line":151,"column":9}},"89":{"start":{"line":133,"column":12},"end":{"line":147,"column":15}},"90":{"start":{"line":150,"column":12},"end":{"line":150,"column":29}},"91":{"start":{"line":152,"column":8},"end":{"line":159,"column":9}},"92":{"start":{"line":153,"column":12},"end":{"line":157,"column":15}},"93":{"start":{"line":158,"column":12},"end":{"line":158,"column":19}},"94":{"start":{"line":160,"column":26},"end":{"line":160,"column":51}},"95":{"start":{"line":161,"column":8},"end":{"line":161,"column":92}},"96":{"start":{"line":162,"column":8},"end":{"line":165,"column":9}},"97":{"start":{"line":163,"column":12},"end":{"line":163,"column":45}},"98":{"start":{"line":164,"column":12},"end":{"line":164,"column":19}},"99":{"start":{"line":166,"column":8},"end":{"line":173,"column":9}},"100":{"start":{"line":167,"column":12},"end":{"line":171,"column":15}},"101":{"start":{"line":172,"column":12},"end":{"line":172,"column":19}},"102":{"start":{"line":174,"column":8},"end":{"line":174,"column":35}},"103":{"start":{"line":177,"column":0},"end":{"line":177,"column":48}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":3,"column":36},"end":{"line":3,"column":37}},"loc":{"start":{"line":3,"column":63},"end":{"line":8,"column":5}},"line":3},"2":{"name":"fulfilled","decl":{"start":{"line":4,"column":17},"end":{"line":4,"column":26}},"loc":{"start":{"line":4,"column":34},"end":{"line":4,"column":99}},"line":4},"3":{"name":"rejected","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":25}},"loc":{"start":{"line":5,"column":33},"end":{"line":5,"column":102}},"line":5},"4":{"name":"step","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":21}},"loc":{"start":{"line":6,"column":30},"end":{"line":6,"column":151}},"line":6},"5":{"name":"(anonymous_5)","decl":{"start":{"line":6,"column":76},"end":{"line":6,"column":77}},"loc":{"start":{"line":6,"column":95},"end":{"line":6,"column":121}},"line":6},"6":{"name":"(anonymous_6)","decl":{"start":{"line":15,"column":1},"end":{"line":15,"column":2}},"loc":{"start":{"line":15,"column":23},"end":{"line":18,"column":1}},"line":15},"7":{"name":"setDefaults","decl":{"start":{"line":19,"column":9},"end":{"line":19,"column":20}},"loc":{"start":{"line":19,"column":26},"end":{"line":27,"column":1}},"line":19},"8":{"name":"validateDataTypes","decl":{"start":{"line":28,"column":9},"end":{"line":28,"column":26}},"loc":{"start":{"line":28,"column":32},"end":{"line":53,"column":1}},"line":28},"9":{"name":"addError","decl":{"start":{"line":54,"column":9},"end":{"line":54,"column":17}},"loc":{"start":{"line":54,"column":43},"end":{"line":61,"column":1}},"line":54},"10":{"name":"validateParamConstraints","decl":{"start":{"line":62,"column":9},"end":{"line":62,"column":33}},"loc":{"start":{"line":62,"column":59},"end":{"line":121,"column":1}},"line":62},"11":{"name":"(anonymous_11)","decl":{"start":{"line":69,"column":38},"end":{"line":69,"column":39}},"loc":{"start":{"line":69,"column":48},"end":{"line":71,"column":9}},"line":69},"12":{"name":"(anonymous_12)","decl":{"start":{"line":87,"column":29},"end":{"line":87,"column":30}},"loc":{"start":{"line":87,"column":39},"end":{"line":110,"column":17}},"line":87},"13":{"name":"(anonymous_13)","decl":{"start":{"line":114,"column":23},"end":{"line":114,"column":24}},"loc":{"start":{"line":114,"column":34},"end":{"line":119,"column":5}},"line":114},"14":{"name":"preInvokeAlgorithm","decl":{"start":{"line":122,"column":9},"end":{"line":122,"column":27}},"loc":{"start":{"line":122,"column":44},"end":{"line":176,"column":1}},"line":122},"15":{"name":"(anonymous_15)","decl":{"start":{"line":123,"column":43},"end":{"line":123,"column":44}},"loc":{"start":{"line":123,"column":56},"end":{"line":175,"column":5}},"line":123}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":9,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":9,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":16},"end":{"line":3,"column":34}},"type":"binary-expr","locations":[{"start":{"line":3,"column":16},"end":{"line":3,"column":17}},{"start":{"line":3,"column":22},"end":{"line":3,"column":33}}],"line":3},"2":{"loc":{"start":{"line":6,"column":32},"end":{"line":6,"column":148}},"type":"cond-expr","locations":[{"start":{"line":6,"column":46},"end":{"line":6,"column":67}},{"start":{"line":6,"column":70},"end":{"line":6,"column":148}}],"line":6},"3":{"loc":{"start":{"line":7,"column":51},"end":{"line":7,"column":67}},"type":"binary-expr","locations":[{"start":{"line":7,"column":51},"end":{"line":7,"column":61}},{"start":{"line":7,"column":65},"end":{"line":7,"column":67}}],"line":7},"4":{"loc":{"start":{"line":18,"column":3},"end":{"line":18,"column":34}},"type":"binary-expr","locations":[{"start":{"line":18,"column":3},"end":{"line":18,"column":13}},{"start":{"line":18,"column":18},"end":{"line":18,"column":33}}],"line":18},"5":{"loc":{"start":{"line":20,"column":18},"end":{"line":20,"column":35}},"type":"binary-expr","locations":[{"start":{"line":20,"column":18},"end":{"line":20,"column":29}},{"start":{"line":20,"column":33},"end":{"line":20,"column":35}}],"line":20},"6":{"loc":{"start":{"line":21,"column":25},"end":{"line":21,"column":49}},"type":"binary-expr","locations":[{"start":{"line":21,"column":25},"end":{"line":21,"column":43}},{"start":{"line":21,"column":47},"end":{"line":21,"column":49}}],"line":21},"7":{"loc":{"start":{"line":22,"column":30},"end":{"line":22,"column":75}},"type":"binary-expr","locations":[{"start":{"line":22,"column":30},"end":{"line":22,"column":53}},{"start":{"line":22,"column":57},"end":{"line":22,"column":75}}],"line":22},"8":{"loc":{"start":{"line":23,"column":32},"end":{"line":23,"column":65}},"type":"binary-expr","locations":[{"start":{"line":23,"column":32},"end":{"line":23,"column":57}},{"start":{"line":23,"column":61},"end":{"line":23,"column":65}}],"line":23},"9":{"loc":{"start":{"line":24,"column":32},"end":{"line":24,"column":65}},"type":"binary-expr","locations":[{"start":{"line":24,"column":32},"end":{"line":24,"column":57}},{"start":{"line":24,"column":61},"end":{"line":24,"column":65}}],"line":24},"10":{"loc":{"start":{"line":25,"column":26},"end":{"line":25,"column":54}},"type":"binary-expr","locations":[{"start":{"line":25,"column":26},"end":{"line":25,"column":45}},{"start":{"line":25,"column":49},"end":{"line":25,"column":54}}],"line":25},"11":{"loc":{"start":{"line":26,"column":15},"end":{"line":26,"column":29}},"type":"binary-expr","locations":[{"start":{"line":26,"column":15},"end":{"line":26,"column":23}},{"start":{"line":26,"column":27},"end":{"line":26,"column":29}}],"line":26},"12":{"loc":{"start":{"line":31,"column":4},"end":{"line":33,"column":5}},"type":"if","locations":[{"start":{"line":31,"column":4},"end":{"line":33,"column":5}},{"start":{"line":31,"column":4},"end":{"line":33,"column":5}}],"line":31},"13":{"loc":{"start":{"line":34,"column":4},"end":{"line":39,"column":5}},"type":"if","locations":[{"start":{"line":34,"column":4},"end":{"line":39,"column":5}},{"start":{"line":34,"column":4},"end":{"line":39,"column":5}}],"line":34},"14":{"loc":{"start":{"line":40,"column":4},"end":{"line":45,"column":5}},"type":"if","locations":[{"start":{"line":40,"column":4},"end":{"line":45,"column":5}},{"start":{"line":40,"column":4},"end":{"line":45,"column":5}}],"line":40},"15":{"loc":{"start":{"line":46,"column":4},"end":{"line":51,"column":5}},"type":"if","locations":[{"start":{"line":46,"column":4},"end":{"line":51,"column":5}},{"start":{"line":46,"column":4},"end":{"line":51,"column":5}}],"line":46},"16":{"loc":{"start":{"line":55,"column":4},"end":{"line":60,"column":5}},"type":"if","locations":[{"start":{"line":55,"column":4},"end":{"line":60,"column":5}},{"start":{"line":55,"column":4},"end":{"line":60,"column":5}}],"line":55},"17":{"loc":{"start":{"line":65,"column":8},"end":{"line":67,"column":9}},"type":"if","locations":[{"start":{"line":65,"column":8},"end":{"line":67,"column":9}},{"start":{"line":65,"column":8},"end":{"line":67,"column":9}}],"line":65},"18":{"loc":{"start":{"line":72,"column":8},"end":{"line":112,"column":9}},"type":"if","locations":[{"start":{"line":72,"column":8},"end":{"line":112,"column":9}},{"start":{"line":72,"column":8},"end":{"line":112,"column":9}}],"line":72},"19":{"loc":{"start":{"line":76,"column":12},"end":{"line":78,"column":13}},"type":"if","locations":[{"start":{"line":76,"column":12},"end":{"line":78,"column":13}},{"start":{"line":76,"column":12},"end":{"line":78,"column":13}}],"line":76},"20":{"loc":{"start":{"line":79,"column":12},"end":{"line":81,"column":13}},"type":"if","locations":[{"start":{"line":79,"column":12},"end":{"line":81,"column":13}},{"start":{"line":79,"column":12},"end":{"line":81,"column":13}}],"line":79},"21":{"loc":{"start":{"line":79,"column":16},"end":{"line":79,"column":88}},"type":"binary-expr","locations":[{"start":{"line":79,"column":16},"end":{"line":79,"column":20}},{"start":{"line":79,"column":24},"end":{"line":79,"column":47}},{"start":{"line":79,"column":51},"end":{"line":79,"column":88}}],"line":79},"22":{"loc":{"start":{"line":82,"column":12},"end":{"line":84,"column":13}},"type":"if","locations":[{"start":{"line":82,"column":12},"end":{"line":84,"column":13}},{"start":{"line":82,"column":12},"end":{"line":84,"column":13}}],"line":82},"23":{"loc":{"start":{"line":82,"column":16},"end":{"line":82,"column":61}},"type":"binary-expr","locations":[{"start":{"line":82,"column":16},"end":{"line":82,"column":20}},{"start":{"line":82,"column":24},"end":{"line":82,"column":61}}],"line":82},"24":{"loc":{"start":{"line":85,"column":12},"end":{"line":111,"column":13}},"type":"if","locations":[{"start":{"line":85,"column":12},"end":{"line":111,"column":13}},{"start":{"line":85,"column":12},"end":{"line":111,"column":13}}],"line":85},"25":{"loc":{"start":{"line":88,"column":20},"end":{"line":94,"column":21}},"type":"if","locations":[{"start":{"line":88,"column":20},"end":{"line":94,"column":21}},{"start":{"line":88,"column":20},"end":{"line":94,"column":21}}],"line":88},"26":{"loc":{"start":{"line":89,"column":24},"end":{"line":91,"column":25}},"type":"if","locations":[{"start":{"line":89,"column":24},"end":{"line":91,"column":25}},{"start":{"line":89,"column":24},"end":{"line":91,"column":25}}],"line":89},"27":{"loc":{"start":{"line":95,"column":37},"end":{"line":95,"column":57}},"type":"binary-expr","locations":[{"start":{"line":95,"column":37},"end":{"line":95,"column":51}},{"start":{"line":95,"column":55},"end":{"line":95,"column":57}}],"line":95},"28":{"loc":{"start":{"line":96,"column":36},"end":{"line":96,"column":59}},"type":"binary-expr","locations":[{"start":{"line":96,"column":36},"end":{"line":96,"column":49}},{"start":{"line":96,"column":53},"end":{"line":96,"column":59}}],"line":96},"29":{"loc":{"start":{"line":97,"column":20},"end":{"line":99,"column":21}},"type":"if","locations":[{"start":{"line":97,"column":20},"end":{"line":99,"column":21}},{"start":{"line":97,"column":20},"end":{"line":99,"column":21}}],"line":97},"30":{"loc":{"start":{"line":97,"column":24},"end":{"line":97,"column":51}},"type":"binary-expr","locations":[{"start":{"line":97,"column":24},"end":{"line":97,"column":34}},{"start":{"line":97,"column":38},"end":{"line":97,"column":51}}],"line":97},"31":{"loc":{"start":{"line":100,"column":20},"end":{"line":102,"column":21}},"type":"if","locations":[{"start":{"line":100,"column":20},"end":{"line":102,"column":21}},{"start":{"line":100,"column":20},"end":{"line":102,"column":21}}],"line":100},"32":{"loc":{"start":{"line":103,"column":20},"end":{"line":105,"column":21}},"type":"if","locations":[{"start":{"line":103,"column":20},"end":{"line":105,"column":21}},{"start":{"line":103,"column":20},"end":{"line":105,"column":21}}],"line":103},"33":{"loc":{"start":{"line":106,"column":20},"end":{"line":108,"column":21}},"type":"if","locations":[{"start":{"line":106,"column":20},"end":{"line":108,"column":21}},{"start":{"line":106,"column":20},"end":{"line":108,"column":21}}],"line":106},"34":{"loc":{"start":{"line":106,"column":24},"end":{"line":106,"column":70}},"type":"binary-expr","locations":[{"start":{"line":106,"column":24},"end":{"line":106,"column":54}},{"start":{"line":106,"column":58},"end":{"line":106,"column":70}}],"line":106},"35":{"loc":{"start":{"line":115,"column":8},"end":{"line":118,"column":9}},"type":"if","locations":[{"start":{"line":115,"column":8},"end":{"line":118,"column":9}},{"start":{"line":115,"column":8},"end":{"line":118,"column":9}}],"line":115},"36":{"loc":{"start":{"line":115,"column":12},"end":{"line":115,"column":85}},"type":"binary-expr","locations":[{"start":{"line":115,"column":12},"end":{"line":115,"column":34}},{"start":{"line":115,"column":38},"end":{"line":115,"column":55}},{"start":{"line":115,"column":59},"end":{"line":115,"column":85}}],"line":115},"37":{"loc":{"start":{"line":117,"column":12},"end":{"line":117,"column":81}},"type":"cond-expr","locations":[{"start":{"line":117,"column":30},"end":{"line":117,"column":55}},{"start":{"line":117,"column":58},"end":{"line":117,"column":81}}],"line":117},"38":{"loc":{"start":{"line":127,"column":8},"end":{"line":130,"column":9}},"type":"if","locations":[{"start":{"line":127,"column":8},"end":{"line":130,"column":9}},{"start":{"line":127,"column":8},"end":{"line":130,"column":9}}],"line":127},"39":{"loc":{"start":{"line":152,"column":8},"end":{"line":159,"column":9}},"type":"if","locations":[{"start":{"line":152,"column":8},"end":{"line":159,"column":9}},{"start":{"line":152,"column":8},"end":{"line":159,"column":9}}],"line":152},"40":{"loc":{"start":{"line":152,"column":12},"end":{"line":152,"column":52}},"type":"binary-expr","locations":[{"start":{"line":152,"column":12},"end":{"line":152,"column":24}},{"start":{"line":152,"column":28},"end":{"line":152,"column":52}}],"line":152},"41":{"loc":{"start":{"line":162,"column":8},"end":{"line":165,"column":9}},"type":"if","locations":[{"start":{"line":162,"column":8},"end":{"line":165,"column":9}},{"start":{"line":162,"column":8},"end":{"line":165,"column":9}}],"line":162},"42":{"loc":{"start":{"line":166,"column":8},"end":{"line":173,"column":9}},"type":"if","locations":[{"start":{"line":166,"column":8},"end":{"line":173,"column":9}},{"start":{"line":166,"column":8},"end":{"line":173,"column":9}}],"line":166}},"s":{"0":3,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":3,"12":3,"13":3,"14":3,"15":3,"16":3,"17":3,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":3},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":3,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0},"b":{"0":[3,3,3],"1":[0,0],"2":[0,0],"3":[0,0],"4":[3,3],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0]},"inputSourceMap":{"version":3,"file":"pre.invoke.js","sourceRoot":"","sources":["pre.invoke.ts"],"names":[],"mappings":"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","sourcesContent":["import { isString } from \"util\";\r\nimport { Request, Response, NextFunction } from \"express\";\r\n\r\nimport { AlgorithmModel, ParameterModel, ParameterType, default as Application, File } from \"../../models/Application\";\r\nimport { isBool, isInteger } from \"../../utils\";\r\n\r\n\r\ntype Arguments = {\r\n  [key: string]: any\r\n};\r\n\r\ntype InvokeModel = {\r\n  app_id: string,\r\n  version_id: string,\r\n  args: Arguments,\r\n  options: {\r\n    timeout: number,\r\n    output: {\r\n      mode: OutputMode,\r\n      stderr: boolean,\r\n      stdout: boolean,\r\n      files: boolean\r\n    }\r\n  }\r\n};\r\n\r\nenum OutputMode {\r\n  RawJson,\r\n  Raw\r\n}\r\n\r\nfunction setDefaults(req: InvokeModel) {\r\n  req.options = <any>req.options || {};\r\n  req.options.output = <any>req.options.output || {};\r\n\r\n  req.options.output.mode = req.options.output.mode || OutputMode.RawJson;\r\n  req.options.output.stderr = req.options.output.stderr || true;\r\n  req.options.output.stdout = req.options.output.stdout || true;\r\n\r\n  req.options.timeout = req.options.timeout || 10000;\r\n\r\n  req.args = <any>req.args || [];\r\n}\r\n\r\nfunction validateDataTypes(req: InvokeModel) {\r\n  const errors: any = {};\r\n\r\n  const output = req.options.output;\r\n\r\n  if (!(output.mode in OutputMode)) {\r\n    addError(errors, `\\`options.output.mode\\` (${output.mode}) out of range.`, \"options.output.mode\", output.mode);\r\n  }\r\n\r\n  if (!isBool(output.stdout)) {\r\n    addError(errors, `Failed to cast \\`options.output.stdout\\` (${output.stdout}) to boolean.`, \"options.output.stdout\", output.stdout);\r\n  }\r\n  else {\r\n    output.stdout = (<any>output.stdout.toString() === \"true\");\r\n  }\r\n\r\n  if (!isBool(output.stderr)) {\r\n    addError(errors, `Failed to cast \\`options.output.stderr\\` (${output.stderr}) to boolean.`, \"options.output.stderr\", output.stderr);\r\n  }\r\n  else {\r\n    output.stderr = (<any>output.stderr.toString() === \"true\");\r\n  }\r\n\r\n  if (!isInteger(req.options.timeout)) {\r\n    addError(errors, `Failed to cast \\`options.timeout\\` (${req.options.timeout}) to integer.`, \"options.timeout\", req.options.timeout);\r\n  }\r\n  else {\r\n    req.options.timeout = Number(req.options.timeout);\r\n  }\r\n\r\n  return errors;\r\n}\r\n\r\nfunction addError(errObj: any, msg: string, key: string, value?: any) {\r\n  if (!errObj[key]) {\r\n    errObj[key] = { messages: [msg], value: value };\r\n  }\r\n  else {\r\n    errObj[key].messages.push(msg);\r\n  }\r\n}\r\n\r\nfunction validateParamConstraints(parameters: ParameterModel[], args: Arguments, files: string[]) {\r\n  const errors: any = {};\r\n\r\n  for (const arg in args) {\r\n    if (!(args[arg] instanceof Array)) {\r\n      args[arg] = [args[arg]];\r\n    }\r\n\r\n    const data = args[arg];\r\n\r\n    const param = parameters.find((elem) => {\r\n      return elem.name === arg;\r\n    });\r\n\r\n    if (!param) {\r\n      addError(errors, `Invalide arg (${arg}).`, `args`, arg);\r\n    }\r\n    else {\r\n      if (param.options.static) {\r\n        continue;\r\n      }\r\n\r\n      if (data && param.options.nArgs.max && param.options.nArgs.max < data.length) {\r\n        addError(errors, `Number of provided values (${data.length}) exceeds the max allowed (${param.options.nArgs.max}).`,\r\n          `args.${arg}`, data);\r\n      }\r\n\r\n      if (data && param.options.nArgs.min > data.length) {\r\n        addError(errors, `Number of provided values (${data.length}) is bellow the min allowed (${param.options.nArgs.min}).`,\r\n          `args.${arg}`, data);\r\n      }\r\n\r\n      if (param.type == ParameterType.File) {\r\n        let n = 0;\r\n        data.forEach((file: File | string) => {\r\n          if (isString(file)) {\r\n            if (files.indexOf(file) === -1) {\r\n              addError(errors, `'${file}' file not found`,\r\n                `args.${arg}.${n}`, file);\r\n            }\r\n            n++;\r\n            return;\r\n          }\r\n\r\n          file.extention = file.extention || \"\";\r\n          file.encoding = file.encoding || \"utf8\";\r\n\r\n          if (!file.data && !file.rawData) {\r\n            addError(errors, \"Missing properties `data` and/or `rawData`.\", \"\");\r\n          }\r\n\r\n          if (!isString(file.encoding)) {\r\n            addError(errors, `\\`encoding\\` property must be a string.`, `args.${arg}.${n}.encoding`, file.encoding);\r\n          }\r\n\r\n          if (!isString(file.extention)) {\r\n            addError(errors, `\\`extention\\` property must be a string.`, `args.${arg}.${n}.extention`, file.extention);\r\n          }\r\n\r\n          if (!isString(file.rawData) && file.rawData) {\r\n            addError(errors, \"`rawData` property must be of type string.\", `args.${arg}.${n}.rawData`, file.rawData);\r\n          }\r\n          n++;\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  parameters.forEach((param) => {\r\n    if (param.options.required && !args[param.name] && !param.options.defaultArgs) {\r\n      const msg = `The parameter \\`${param.name}\\` is required but no default values are available.`;\r\n      errors.messages ? errors.messages.push(msg) : errors.messages = [msg];\r\n    }\r\n  });\r\n\r\n  return errors;\r\n}\r\n\r\nexport async function preInvokeAlgorithm(req: Request, res: Response, next: NextFunction) {\r\n  const call: InvokeModel = req.body;\r\n\r\n  setDefaults(call);\r\n  let errors = validateDataTypes(call);\r\n\r\n  if (Object.keys(errors).length !== 0) {\r\n    res.status(400).json({ errors });\r\n    return;\r\n  }\r\n\r\n  let existingApp: any;\r\n\r\n  try {\r\n    existingApp = await Application.aggregate([\r\n      {\r\n        $match: {\r\n          id: call.app_id\r\n        }\r\n      },\r\n      {\r\n        $unwind: \"$algorithms\"\r\n      },\r\n      {\r\n        $match: {\r\n          \"algorithms.id\": call.version_id\r\n        }\r\n      },\r\n    ]);\r\n  }\r\n  catch (err) {\r\n    return next(err);\r\n  }\r\n\r\n  if (!existingApp || existingApp.length === 0) {\r\n    res.status(400).json({\r\n      errors: {\r\n        messages: [\"Requested application was not found.\"]\r\n      }\r\n    });\r\n    return;\r\n  }\r\n\r\n  const algorithm = <AlgorithmModel>existingApp[0].algorithms;\r\n\r\n  errors = validateParamConstraints(algorithm.parameters, call.args, algorithm.files);\r\n\r\n  if (Object.keys(errors).length !== 0) {\r\n    res.status(400).json({ errors });\r\n    return;\r\n  }\r\n\r\n  if (!algorithm.entryApp) {\r\n    res.status(400).json({\r\n      errors: {\r\n        messages: [\"Requested application is missing an entry app. The application was not properly configured.\"]\r\n      }\r\n    });\r\n    return;\r\n  }\r\n\r\n  return { call, algorithm };\r\n}\r\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"4b4c14c2c8c8f69eaa78b7abccd55ac0fb8f2f02"}
,"/usr/src/app/src/controllers/app.invoke/spawn.ts": {"path":"/usr/src/app/src/controllers/app.invoke/spawn.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":14},"end":{"line":3,"column":38}},"2":{"start":{"line":4,"column":13},"end":{"line":4,"column":33}},"3":{"start":{"line":5,"column":16},"end":{"line":5,"column":35}},"4":{"start":{"line":6,"column":11},"end":{"line":6,"column":24}},"5":{"start":{"line":7,"column":13},"end":{"line":7,"column":28}},"6":{"start":{"line":8,"column":21},"end":{"line":8,"column":38}},"7":{"start":{"line":11,"column":20},"end":{"line":11,"column":50}},"8":{"start":{"line":12,"column":28},"end":{"line":12,"column":60}},"9":{"start":{"line":13,"column":8},"end":{"line":27,"column":11}},"10":{"start":{"line":14,"column":12},"end":{"line":26,"column":15}},"11":{"start":{"line":15,"column":16},"end":{"line":16,"column":39}},"12":{"start":{"line":16,"column":20},"end":{"line":16,"column":39}},"13":{"start":{"line":17,"column":16},"end":{"line":24,"column":19}},"14":{"start":{"line":18,"column":20},"end":{"line":20,"column":21}},"15":{"start":{"line":19,"column":24},"end":{"line":19,"column":31}},"16":{"start":{"line":21,"column":20},"end":{"line":23,"column":21}},"17":{"start":{"line":22,"column":24},"end":{"line":22,"column":60}},"18":{"start":{"line":25,"column":16},"end":{"line":25,"column":26}},"19":{"start":{"line":30,"column":8},"end":{"line":30,"column":28}},"20":{"start":{"line":31,"column":8},"end":{"line":31,"column":26}},"21":{"start":{"line":32,"column":8},"end":{"line":32,"column":32}},"22":{"start":{"line":33,"column":8},"end":{"line":33,"column":32}},"23":{"start":{"line":34,"column":8},"end":{"line":34,"column":40}},"24":{"start":{"line":35,"column":8},"end":{"line":35,"column":79}},"25":{"start":{"line":36,"column":28},"end":{"line":36,"column":86}},"26":{"start":{"line":36,"column":47},"end":{"line":36,"column":68}},"27":{"start":{"line":37,"column":8},"end":{"line":48,"column":11}},"28":{"start":{"line":38,"column":12},"end":{"line":41,"column":15}},"29":{"start":{"line":39,"column":16},"end":{"line":39,"column":42}},"30":{"start":{"line":40,"column":16},"end":{"line":40,"column":28}},"31":{"start":{"line":42,"column":12},"end":{"line":47,"column":15}},"32":{"start":{"line":43,"column":16},"end":{"line":43,"column":42}},"33":{"start":{"line":44,"column":16},"end":{"line":46,"column":49}},"34":{"start":{"line":45,"column":32},"end":{"line":45,"column":45}},"35":{"start":{"line":46,"column":36},"end":{"line":46,"column":47}},"36":{"start":{"line":51,"column":0},"end":{"line":51,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":10,"column":4},"end":{"line":10,"column":5}},"loc":{"start":{"line":10,"column":17},"end":{"line":28,"column":5}},"line":10},"1":{"name":"(anonymous_1)","decl":{"start":{"line":13,"column":27},"end":{"line":13,"column":28}},"loc":{"start":{"line":13,"column":48},"end":{"line":27,"column":9}},"line":13},"2":{"name":"(anonymous_2)","decl":{"start":{"line":14,"column":28},"end":{"line":14,"column":29}},"loc":{"start":{"line":14,"column":44},"end":{"line":26,"column":13}},"line":14},"3":{"name":"(anonymous_3)","decl":{"start":{"line":17,"column":30},"end":{"line":17,"column":31}},"loc":{"start":{"line":17,"column":41},"end":{"line":24,"column":17}},"line":17},"4":{"name":"(anonymous_4)","decl":{"start":{"line":29,"column":4},"end":{"line":29,"column":5}},"loc":{"start":{"line":29,"column":47},"end":{"line":49,"column":5}},"line":29},"5":{"name":"(anonymous_5)","decl":{"start":{"line":36,"column":39},"end":{"line":36,"column":40}},"loc":{"start":{"line":36,"column":45},"end":{"line":36,"column":70}},"line":36},"6":{"name":"(anonymous_6)","decl":{"start":{"line":37,"column":36},"end":{"line":37,"column":37}},"loc":{"start":{"line":37,"column":57},"end":{"line":48,"column":9}},"line":37},"7":{"name":"(anonymous_7)","decl":{"start":{"line":38,"column":35},"end":{"line":38,"column":36}},"loc":{"start":{"line":38,"column":44},"end":{"line":41,"column":13}},"line":38},"8":{"name":"(anonymous_8)","decl":{"start":{"line":42,"column":35},"end":{"line":42,"column":36}},"loc":{"start":{"line":42,"column":45},"end":{"line":47,"column":13}},"line":42},"9":{"name":"(anonymous_9)","decl":{"start":{"line":45,"column":26},"end":{"line":45,"column":27}},"loc":{"start":{"line":45,"column":32},"end":{"line":45,"column":45}},"line":45},"10":{"name":"(anonymous_10)","decl":{"start":{"line":46,"column":27},"end":{"line":46,"column":28}},"loc":{"start":{"line":46,"column":36},"end":{"line":46,"column":47}},"line":46}},"branchMap":{"0":{"loc":{"start":{"line":15,"column":16},"end":{"line":16,"column":39}},"type":"if","locations":[{"start":{"line":15,"column":16},"end":{"line":16,"column":39}},{"start":{"line":15,"column":16},"end":{"line":16,"column":39}}],"line":15},"1":{"loc":{"start":{"line":18,"column":20},"end":{"line":20,"column":21}},"type":"if","locations":[{"start":{"line":18,"column":20},"end":{"line":20,"column":21}},{"start":{"line":18,"column":20},"end":{"line":20,"column":21}}],"line":18},"2":{"loc":{"start":{"line":21,"column":20},"end":{"line":23,"column":21}},"type":"if","locations":[{"start":{"line":21,"column":20},"end":{"line":23,"column":21}},{"start":{"line":21,"column":20},"end":{"line":23,"column":21}}],"line":21}},"s":{"0":3,"1":3,"2":3,"3":3,"4":3,"5":3,"6":3,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":3},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0]},"inputSourceMap":{"version":3,"file":"spawn.js","sourceRoot":"","sources":["spawn.ts"],"names":[],"mappings":";;AAAA,uCAAuC;AACvC,kCAAkC;AAClC,oCAAoC;AACpC,yBAAyB;AACzB,6BAA6B;AAE7B,uCAAuC;AAUvC;IAUU,UAAU;QAChB,MAAM,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC;QAC3C,MAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,WAAW,CAAC;QAErD,MAAM,CAAC,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YACrC,EAAE,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,KAAK,EAAE,EAAE;gBAC7B,EAAE,CAAC,CAAC,GAAG,CAAC;oBAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;gBAE5B,KAAK,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,EAAE;oBACtB,EAAE,CAAC,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;wBACtC,MAAM,CAAC;oBACT,CAAC;oBACD,EAAE,CAAC,CAAC,EAAE,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;wBACjD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,EAAE,KAAK,CAAC,CAAC;oBACtC,CAAC;gBACH,CAAC,CAAC,CAAC;gBAEH,OAAO,EAAE,CAAC;YACZ,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,YAAY,KAAa,EAAE,IAAc,EAAE,OAAe,EAAE,OAAqB;QAC/E,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;QAClB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QACxB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;QAExB,IAAI,CAAC,KAAK,GAAG,IAAI,YAAY,EAAE,CAAC;QAEhC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QAEvE,MAAM,WAAW,GAAG,UAAU,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QAE/E,IAAI,CAAC,QAAQ,GAAG,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;YAC9C,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,GAAG,EAAE,EAAE;gBAC7B,YAAY,CAAC,WAAW,CAAC,CAAC;gBAC1B,MAAM,CAAC,GAAG,CAAC,CAAC;YACd,CAAC,CAAC,CAAC;YAEH,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,IAAI,EAAE,EAAE;gBAC9B,YAAY,CAAC,WAAW,CAAC,CAAC;gBAC1B,IAAI,CAAC,UAAU,EAAE;qBACd,IAAI,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;qBACzB,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;YACjC,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;CACF;AA1DD,8BA0DC","sourcesContent":["import * as child from \"child_process\";\r\nimport * as kill from \"tree-kill\";\r\nimport * as Promise from \"bluebird\";\r\nimport * as fs from \"fs\";\r\nimport * as path from \"path\";\r\nimport * as crypto from \"crypto\";\r\nimport * as EventEmitter from \"events\";\r\n\r\nexport type SpawnOptions = {\r\n  output: {\r\n    outputDir: string,\r\n    ignoreFiles: string[]\r\n  }\r\n  spawn: child.SpawnOptions\r\n};\r\n\r\nexport default class SpawnWarper {\r\n  private _entry: string;\r\n  private _args: string[];\r\n  private _options: SpawnOptions;\r\n  private _timeout: number;\r\n\r\n  public child: child.ChildProcess;\r\n  public runChild: Promise<any>;\r\n  public files: EventEmitter;\r\n\r\n  private _readFiles() {\r\n    const dir = this._options.output.outputDir;\r\n    const ignoreFiles = this._options.output.ignoreFiles;\r\n\r\n    return new Promise((resolve, reject) => {\r\n      fs.readdir(dir, (err, files) => {\r\n        if (err) return reject(err);\r\n\r\n        files.forEach((fName) => {\r\n          if (ignoreFiles.indexOf(fName) !== -1) {\r\n            return;\r\n          }\r\n          if (fs.lstatSync(path.join(dir, fName)).isFile()) {\r\n            this.files.emit(\"data\", dir, fName);\r\n          }\r\n        });\r\n\r\n        resolve();\r\n      });\r\n    });\r\n  }\r\n\r\n  constructor(entry: string, args: string[], timeout: number, options: SpawnOptions) {\r\n    this._entry = entry;\r\n    this._args = args;\r\n    this._timeout = timeout;\r\n    this._options = options;\r\n\r\n    this.files = new EventEmitter();\r\n\r\n    this.child = child.spawn(this._entry, this._args, this._options.spawn);\r\n\r\n    const timeoutFunc = setTimeout(() => { kill(this.child.pid); }, this._timeout);\r\n\r\n    this.runChild = new Promise((resolve, reject) => {\r\n      this.child.on(\"error\", (err) => {\r\n        clearTimeout(timeoutFunc);\r\n        reject(err);\r\n      });\r\n\r\n      this.child.on(\"close\", (code) => {\r\n        clearTimeout(timeoutFunc);\r\n        this._readFiles()\r\n          .then(() => resolve(code))\r\n          .catch((err) => reject(err));\r\n      });\r\n    });\r\n  }\r\n}\r\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"883457e1fa78e611b80ff3a9cbade7a32a62b5eb"}
,"/usr/src/app/src/controllers/json.parser/json.parsers.ts": {"path":"/usr/src/app/src/controllers/json.parser/json.parsers.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":17},"end":{"line":3,"column":38}},"2":{"start":{"line":4,"column":16},"end":{"line":4,"column":36}},"3":{"start":{"line":5,"column":17},"end":{"line":5,"column":38}},"4":{"start":{"line":8,"column":8},"end":{"line":12,"column":10}},"5":{"start":{"line":15,"column":8},"end":{"line":17,"column":9}},"6":{"start":{"line":16,"column":12},"end":{"line":16,"column":46}},"7":{"start":{"line":18,"column":8},"end":{"line":18,"column":30}},"8":{"start":{"line":21,"column":21},"end":{"line":21,"column":38}},"9":{"start":{"line":22,"column":8},"end":{"line":22,"column":37}},"10":{"start":{"line":25,"column":8},"end":{"line":25,"column":43}},"11":{"start":{"line":28,"column":23},"end":{"line":28,"column":44}},"12":{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},"13":{"start":{"line":30,"column":12},"end":{"line":30,"column":68}},"14":{"start":{"line":32,"column":8},"end":{"line":32,"column":40}},"15":{"start":{"line":35,"column":0},"end":{"line":35,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":7,"column":4},"end":{"line":7,"column":5}},"loc":{"start":{"line":7,"column":18},"end":{"line":13,"column":5}},"line":7},"1":{"name":"(anonymous_1)","decl":{"start":{"line":14,"column":4},"end":{"line":14,"column":5}},"loc":{"start":{"line":14,"column":25},"end":{"line":19,"column":5}},"line":14},"2":{"name":"(anonymous_2)","decl":{"start":{"line":20,"column":4},"end":{"line":20,"column":5}},"loc":{"start":{"line":20,"column":22},"end":{"line":23,"column":5}},"line":20},"3":{"name":"(anonymous_3)","decl":{"start":{"line":24,"column":4},"end":{"line":24,"column":5}},"loc":{"start":{"line":24,"column":27},"end":{"line":26,"column":5}},"line":24},"4":{"name":"(anonymous_4)","decl":{"start":{"line":27,"column":4},"end":{"line":27,"column":5}},"loc":{"start":{"line":27,"column":30},"end":{"line":33,"column":5}},"line":27}},"branchMap":{"0":{"loc":{"start":{"line":15,"column":8},"end":{"line":17,"column":9}},"type":"if","locations":[{"start":{"line":15,"column":8},"end":{"line":17,"column":9}},{"start":{"line":15,"column":8},"end":{"line":17,"column":9}}],"line":15},"1":{"loc":{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},"type":"if","locations":[{"start":{"line":29,"column":8},"end":{"line":31,"column":9}},{"start":{"line":29,"column":8},"end":{"line":31,"column":9}}],"line":29}},"s":{"0":3,"1":3,"2":3,"3":3,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":3},"f":{"0":0,"1":0,"2":0,"3":0,"4":0},"b":{"0":[0,0],"1":[0,0]},"inputSourceMap":{"version":3,"file":"json.parsers.js","sourceRoot":"","sources":["json.parsers.ts"],"names":[],"mappings":";;AAGA,uCAAuC;AACvC,qCAAqC;AACrC,uCAAuC;AAQvC;IAUE;QANQ,aAAQ,GAA2B;YACzC,GAAG,EAAE,IAAI,QAAQ,CAAC,MAAM,EAAE;YAC1B,GAAG,EAAE,IAAI,QAAQ,CAAC,MAAM,EAAE;YAC1B,EAAE,EAAE,IAAI,OAAO,CAAC,MAAM,EAAE;SACzB,CAAC;IAEsB,CAAC;IAElB,MAAM,CAAC,WAAW;QACvB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,SAAS,GAAG,IAAI,UAAU,EAAE,CAAC;QACpC,CAAC;QACD,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC;IACxB,CAAC;IAEM,SAAS,CAAC,MAAwB;QACvC,MAAM,IAAI,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;QAC/B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;IAC/B,CAAC;IAEM,UAAU,CAAC,UAAkB;QAClC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC;IACrC,CAAC;IAGD,KAAK,CAAC,MAAc,EAAE,IAAS,EAAE,IAAU;QACzC,MAAM,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAErC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACZ,MAAM,KAAK,CAAC,iCAAiC,MAAM,GAAG,CAAC,CAAC;QAC1D,CAAC;QAED,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IAClC,CAAC;CACF;AAtCD,gCAsCC","sourcesContent":["import * as fs from \"fs\";\r\nimport * as path from \"path\";\r\n\r\nimport * as json2xml from \"./json2xml\";\r\nimport * as json2rr from \"./json2rr\";\r\nimport * as json2csv from \"./json2csv\";\r\n\r\nimport { JsonParser as PluginJsonParser } from \"../../plugins/parser\";\r\n\r\ntype Options = {\r\n  format: string\r\n};\r\n\r\nexport class JsonParser {\r\n\r\n  private static _instance: JsonParser;\r\n\r\n  private _parsers: { [key: string]: any } = {\r\n    csv: new json2csv.Parser(),\r\n    xml: new json2xml.Parser(),\r\n    rr: new json2rr.Parser()\r\n  };\r\n\r\n  private constructor() { }\r\n\r\n  public static getInstance() {\r\n    if (!this._instance) {\r\n      this._instance = new JsonParser();\r\n    }\r\n    return this._instance;\r\n  }\r\n\r\n  public addParser(parser: PluginJsonParser) {\r\n    const type = parser.register();\r\n    this._parsers[type] = parser;\r\n  }\r\n\r\n  public isParsable(destFormat: string) {\r\n    return !!this._parsers[destFormat];\r\n  }\r\n\r\n\r\n  parse(format: string, data: any, opts?: any) {\r\n    const parser = this._parsers[format];\r\n\r\n    if (!parser) {\r\n      throw Error(`Not parser available for type ${format}.`);\r\n    }\r\n\r\n    return parser.parse(data, opts);\r\n  }\r\n}\r\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"4340a21903a6e8350b675b39a18a9a011cae3e41"}
,"/usr/src/app/src/controllers/json.parser/json2csv.ts": {"path":"/usr/src/app/src/controllers/json.parser/json2csv.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":13},"end":{"line":3,"column":33}},"2":{"start":{"line":6,"column":8},"end":{"line":6,"column":54}},"3":{"start":{"line":9,"column":0},"end":{"line":9,"column":24}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":4},"end":{"line":5,"column":5}},"loc":{"start":{"line":5,"column":16},"end":{"line":7,"column":5}},"line":5}},"branchMap":{},"s":{"0":3,"1":3,"2":0,"3":3},"f":{"0":0},"b":{},"inputSourceMap":{"version":3,"file":"json2csv.js","sourceRoot":"","sources":["json2csv.ts"],"names":[],"mappings":";;AAAA,kCAAkC;AAIlC;IACS,KAAK,CAAC,IAAS;QACpB,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,SAAS,EAAE,GAAG,EAAE,CAAC,CAAC;IAChD,CAAC;CACF;AAJD,wBAIC","sourcesContent":["import * as Papa from \"papaparse\";\r\n\r\nimport { FileInputParser } from \"./file.input.parser\";\r\n\r\nexport class Parser implements FileInputParser {\r\n  public parse(data: any) {\r\n    return Papa.unparse(data, { delimiter: \";\" });\r\n  }\r\n}\r\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"30e887984a7e8e9336fe0d3e24fe4ae5f1f84fa7"}
,"/usr/src/app/src/controllers/json.parser/json2rr.ts": {"path":"/usr/src/app/src/controllers/json.parser/json2rr.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":5,"column":18},"end":{"line":5,"column":20}},"2":{"start":{"line":6,"column":8},"end":{"line":8,"column":9}},"3":{"start":{"line":7,"column":12},"end":{"line":7,"column":69}},"4":{"start":{"line":9,"column":8},"end":{"line":17,"column":9}},"5":{"start":{"line":10,"column":12},"end":{"line":12,"column":13}},"6":{"start":{"line":11,"column":16},"end":{"line":11,"column":75}},"7":{"start":{"line":13,"column":12},"end":{"line":13,"column":32}},"8":{"start":{"line":14,"column":12},"end":{"line":16,"column":13}},"9":{"start":{"line":15,"column":16},"end":{"line":15,"column":28}},"10":{"start":{"line":18,"column":8},"end":{"line":18,"column":19}},"11":{"start":{"line":21,"column":0},"end":{"line":21,"column":24}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":4},"end":{"line":4,"column":5}},"loc":{"start":{"line":4,"column":21},"end":{"line":19,"column":5}},"line":4}},"branchMap":{"0":{"loc":{"start":{"line":6,"column":8},"end":{"line":8,"column":9}},"type":"if","locations":[{"start":{"line":6,"column":8},"end":{"line":8,"column":9}},{"start":{"line":6,"column":8},"end":{"line":8,"column":9}}],"line":6},"1":{"loc":{"start":{"line":10,"column":12},"end":{"line":12,"column":13}},"type":"if","locations":[{"start":{"line":10,"column":12},"end":{"line":12,"column":13}},{"start":{"line":10,"column":12},"end":{"line":12,"column":13}}],"line":10},"2":{"loc":{"start":{"line":14,"column":12},"end":{"line":16,"column":13}},"type":"if","locations":[{"start":{"line":14,"column":12},"end":{"line":16,"column":13}},{"start":{"line":14,"column":12},"end":{"line":16,"column":13}}],"line":14}},"s":{"0":3,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":3},"f":{"0":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0]},"inputSourceMap":{"version":3,"file":"json2rr.js","sourceRoot":"","sources":["json2rr.ts"],"names":[],"mappings":";;AAEA;IAGS,KAAK,CAAC,SAAc;QACzB,IAAI,GAAG,GAAG,EAAE,CAAC;QAEb,EAAE,CAAC,CAAC,CAAC,CAAC,SAAS,YAAY,KAAK,CAAC,CAAC,CAAC,CAAC;YAClC,MAAM,kDAAkD,CAAC;QAC3D,CAAC;QAED,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAC1C,EAAE,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACxB,MAAM,iDAAiD,CAAC,EAAE,CAAC;YAC7D,CAAC;YAED,GAAG,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC;YACpB,EAAE,CAAC,CAAC,CAAC,KAAK,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;gBAC/B,GAAG,IAAI,IAAI,CAAC;YACd,CAAC;QACH,CAAC;QACD,MAAM,CAAC,GAAG,CAAC;IACb,CAAC;CACF;AAtBD,wBAsBC","sourcesContent":["import { FileInputParser } from \"./file.input.parser\";\r\n\r\nexport class Parser implements FileInputParser {\r\n  private _lastLineData: string;\r\n\r\n  public parse(intervals: any) {\r\n    let res = \"\";\r\n\r\n    if (!(intervals instanceof Array)) {\r\n      throw \"RR Parser Error: expected an array of intervals.\";\r\n    }\r\n\r\n    for (let i = 0; i < intervals.length; i++) {\r\n      if (isNaN(intervals[i])) {\r\n        throw `RR Parser Error: invalide element at position ${i}`;\r\n      }\r\n\r\n      res += intervals[i];\r\n      if (i !== intervals.length - 1) {\r\n        res += \"\\n\";\r\n      }\r\n    }\r\n    return res;\r\n  }\r\n}\r\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"6bf872536c3dfe75780836f648d6a8ca59fdc7e4"}
,"/usr/src/app/src/controllers/json.parser/json2xml.ts": {"path":"/usr/src/app/src/controllers/json.parser/json2xml.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":17},"end":{"line":3,"column":40}},"2":{"start":{"line":6,"column":8},"end":{"line":8,"column":9}},"3":{"start":{"line":7,"column":12},"end":{"line":7,"column":103}},"4":{"start":{"line":9,"column":21},"end":{"line":9,"column":41}},"5":{"start":{"line":10,"column":8},"end":{"line":10,"column":48}},"6":{"start":{"line":13,"column":0},"end":{"line":13,"column":24}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":5,"column":4},"end":{"line":5,"column":5}},"loc":{"start":{"line":5,"column":16},"end":{"line":11,"column":5}},"line":5}},"branchMap":{"0":{"loc":{"start":{"line":6,"column":8},"end":{"line":8,"column":9}},"type":"if","locations":[{"start":{"line":6,"column":8},"end":{"line":8,"column":9}},{"start":{"line":6,"column":8},"end":{"line":8,"column":9}}],"line":6}},"s":{"0":3,"1":3,"2":0,"3":0,"4":0,"5":0,"6":3},"f":{"0":0},"b":{"0":[0,0]},"inputSourceMap":{"version":3,"file":"json2xml.js","sourceRoot":"","sources":["json2xml.ts"],"names":[],"mappings":";;AAAA,yCAAyC;AAIzC;IACS,KAAK,CAAC,IAAS;QACpB,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;YACnC,MAAM,KAAK,CAAC,6EAA6E,CAAC,CAAC;QAC7F,CAAC;QACD,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QAClC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAC1C,CAAC;CACF;AARD,wBAQC","sourcesContent":["import * as json2xml from \"js2xmlparser\";\r\n\r\nimport { FileInputParser } from \"./file.input.parser\";\r\n\r\nexport class Parser implements FileInputParser {\r\n  public parse(data: any) {\r\n    if (Object.keys(data).length !== 1) {\r\n      throw Error(\"XML Parser Error: Provided object must contain only a single root property.\");\r\n    }\r\n    const root = Object.keys(data)[0];\r\n    return json2xml.parse(root, data[root]);\r\n  }\r\n}\r\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"e7994ead9a92919eb7a8f9de64a8b53c6a1b5d8f"}
,"/usr/src/app/src/docker_sandbox/container.ts": {"path":"/usr/src/app/src/docker_sandbox/container.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":14},"end":{"line":3,"column":30}},"2":{"start":{"line":4,"column":16},"end":{"line":4,"column":34}},"3":{"start":{"line":14,"column":8},"end":{"line":14,"column":21}},"4":{"start":{"line":15,"column":8},"end":{"line":15,"column":27}},"5":{"start":{"line":16,"column":8},"end":{"line":16,"column":21}},"6":{"start":{"line":17,"column":8},"end":{"line":17,"column":31}},"7":{"start":{"line":23,"column":24},"end":{"line":27,"column":9}},"8":{"start":{"line":28,"column":8},"end":{"line":40,"column":11}},"9":{"start":{"line":29,"column":12},"end":{"line":39,"column":34}},"10":{"start":{"line":32,"column":16},"end":{"line":34,"column":17}},"11":{"start":{"line":33,"column":20},"end":{"line":33,"column":39}},"12":{"start":{"line":37,"column":16},"end":{"line":37,"column":33}},"13":{"start":{"line":43,"column":8},"end":{"line":43,"column":23}},"14":{"start":{"line":46,"column":8},"end":{"line":55,"column":11}},"15":{"start":{"line":47,"column":12},"end":{"line":54,"column":15}},"16":{"start":{"line":48,"column":16},"end":{"line":51,"column":17}},"17":{"start":{"line":50,"column":20},"end":{"line":50,"column":83}},"18":{"start":{"line":52,"column":16},"end":{"line":52,"column":57}},"19":{"start":{"line":53,"column":16},"end":{"line":53,"column":26}},"20":{"start":{"line":61,"column":8},"end":{"line":65,"column":9}},"21":{"start":{"line":62,"column":12},"end":{"line":64,"column":15}},"22":{"start":{"line":63,"column":16},"end":{"line":63,"column":26}},"23":{"start":{"line":66,"column":23},"end":{"line":73,"column":9}},"24":{"start":{"line":70,"column":16},"end":{"line":70,"column":38}},"25":{"start":{"line":71,"column":16},"end":{"line":71,"column":37}},"26":{"start":{"line":74,"column":8},"end":{"line":80,"column":11}},"27":{"start":{"line":75,"column":12},"end":{"line":79,"column":15}},"28":{"start":{"line":76,"column":16},"end":{"line":77,"column":39}},"29":{"start":{"line":77,"column":20},"end":{"line":77,"column":39}},"30":{"start":{"line":78,"column":16},"end":{"line":78,"column":26}},"31":{"start":{"line":83,"column":0},"end":{"line":83,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":13,"column":4},"end":{"line":13,"column":5}},"loc":{"start":{"line":13,"column":30},"end":{"line":18,"column":5}},"line":13},"1":{"name":"(anonymous_1)","decl":{"start":{"line":22,"column":4},"end":{"line":22,"column":5}},"loc":{"start":{"line":22,"column":20},"end":{"line":41,"column":5}},"line":22},"2":{"name":"(anonymous_2)","decl":{"start":{"line":28,"column":27},"end":{"line":28,"column":28}},"loc":{"start":{"line":28,"column":48},"end":{"line":40,"column":9}},"line":28},"3":{"name":"(anonymous_3)","decl":{"start":{"line":31,"column":29},"end":{"line":31,"column":30}},"loc":{"start":{"line":31,"column":38},"end":{"line":35,"column":13}},"line":31},"4":{"name":"(anonymous_4)","decl":{"start":{"line":36,"column":27},"end":{"line":36,"column":28}},"loc":{"start":{"line":36,"column":33},"end":{"line":38,"column":13}},"line":36},"5":{"name":"(anonymous_5)","decl":{"start":{"line":42,"column":4},"end":{"line":42,"column":5}},"loc":{"start":{"line":42,"column":12},"end":{"line":44,"column":5}},"line":42},"6":{"name":"(anonymous_6)","decl":{"start":{"line":45,"column":4},"end":{"line":45,"column":5}},"loc":{"start":{"line":45,"column":15},"end":{"line":56,"column":5}},"line":45},"7":{"name":"(anonymous_7)","decl":{"start":{"line":46,"column":27},"end":{"line":46,"column":28}},"loc":{"start":{"line":46,"column":48},"end":{"line":55,"column":9}},"line":46},"8":{"name":"(anonymous_8)","decl":{"start":{"line":47,"column":28},"end":{"line":47,"column":29}},"loc":{"start":{"line":47,"column":43},"end":{"line":54,"column":13}},"line":47},"9":{"name":"(anonymous_9)","decl":{"start":{"line":60,"column":4},"end":{"line":60,"column":5}},"loc":{"start":{"line":60,"column":28},"end":{"line":81,"column":5}},"line":60},"10":{"name":"(anonymous_10)","decl":{"start":{"line":62,"column":31},"end":{"line":62,"column":32}},"loc":{"start":{"line":62,"column":44},"end":{"line":64,"column":13}},"line":62},"11":{"name":"(anonymous_11)","decl":{"start":{"line":69,"column":12},"end":{"line":69,"column":13}},"loc":{"start":{"line":69,"column":22},"end":{"line":72,"column":13}},"line":69},"12":{"name":"(anonymous_12)","decl":{"start":{"line":74,"column":27},"end":{"line":74,"column":28}},"loc":{"start":{"line":74,"column":48},"end":{"line":80,"column":9}},"line":74},"13":{"name":"(anonymous_13)","decl":{"start":{"line":75,"column":33},"end":{"line":75,"column":34}},"loc":{"start":{"line":75,"column":42},"end":{"line":79,"column":13}},"line":75}},"branchMap":{"0":{"loc":{"start":{"line":32,"column":16},"end":{"line":34,"column":17}},"type":"if","locations":[{"start":{"line":32,"column":16},"end":{"line":34,"column":17}},{"start":{"line":32,"column":16},"end":{"line":34,"column":17}}],"line":32},"1":{"loc":{"start":{"line":48,"column":16},"end":{"line":51,"column":17}},"type":"if","locations":[{"start":{"line":48,"column":16},"end":{"line":51,"column":17}},{"start":{"line":48,"column":16},"end":{"line":51,"column":17}}],"line":48},"2":{"loc":{"start":{"line":48,"column":20},"end":{"line":49,"column":65}},"type":"binary-expr","locations":[{"start":{"line":48,"column":20},"end":{"line":48,"column":23}},{"start":{"line":48,"column":27},"end":{"line":48,"column":32}},{"start":{"line":48,"column":36},"end":{"line":48,"column":57}},{"start":{"line":48,"column":61},"end":{"line":48,"column":92}},{"start":{"line":49,"column":23},"end":{"line":49,"column":65}}],"line":48},"3":{"loc":{"start":{"line":50,"column":34},"end":{"line":50,"column":81}},"type":"binary-expr","locations":[{"start":{"line":50,"column":34},"end":{"line":50,"column":37}},{"start":{"line":50,"column":41},"end":{"line":50,"column":81}}],"line":50},"4":{"loc":{"start":{"line":60,"column":12},"end":{"line":60,"column":26}},"type":"default-arg","locations":[{"start":{"line":60,"column":21},"end":{"line":60,"column":26}}],"line":60},"5":{"loc":{"start":{"line":61,"column":8},"end":{"line":65,"column":9}},"type":"if","locations":[{"start":{"line":61,"column":8},"end":{"line":65,"column":9}},{"start":{"line":61,"column":8},"end":{"line":65,"column":9}}],"line":61},"6":{"loc":{"start":{"line":76,"column":16},"end":{"line":77,"column":39}},"type":"if","locations":[{"start":{"line":76,"column":16},"end":{"line":77,"column":39}},{"start":{"line":76,"column":16},"end":{"line":77,"column":39}}],"line":76},"7":{"loc":{"start":{"line":76,"column":20},"end":{"line":76,"column":34}},"type":"binary-expr","locations":[{"start":{"line":76,"column":20},"end":{"line":76,"column":23}},{"start":{"line":76,"column":27},"end":{"line":76,"column":34}}],"line":76}},"s":{"0":3,"1":3,"2":3,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":3},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0,0,0,0],"3":[0,0],"4":[0],"5":[0,0],"6":[0,0],"7":[0,0]},"inputSourceMap":{"version":3,"file":"container.js","sourceRoot":"","sources":["container.ts"],"names":[],"mappings":"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","sourcesContent":["\"use strict\";\r\n\r\nimport * as _ from \"lodash\";\r\nimport * as async from \"async\";\r\nimport * as request from \"request\";\r\nimport * as Docker from \"dockerode\";\r\n\r\nimport { Job } from \"./job\";\r\n\r\n//  let fs      = require('fs-extra')\r\n//  let log     = require('winston')\r\n\r\n/*\r\n * A class representing a Docker container.\r\n *\r\n * The \"instance\" field corresponds to a Dockerode container instance\r\n */\r\nexport default class Container {\r\n  private cleanedUp: boolean;\r\n  private ip: string;\r\n  private id: string;\r\n\r\n  public vm: Docker.Container;\r\n\r\n  constructor(id: string, instance: Docker.Container) {\r\n    this.id = id;\r\n    this.vm = instance;\r\n    this.ip = \"\";\r\n    this.cleanedUp = false;\r\n  }\r\n\r\n  /*\r\n   * Executes a job inside the container\r\n   */\r\n  public executeJob(job: Job) {\r\n    const options = {\r\n      url: \"http://\" + this.ip + \":3000/\",\r\n      formData: job.request,\r\n      timeout: job.timeout\r\n    };\r\n    return new Promise((resolve, reject) => {\r\n      request\r\n        .post(options)\r\n        .on(\"error\", (err) => {\r\n          if (err) {\r\n            return reject(err);\r\n          }\r\n        })\r\n        .on(\"end\", () => {\r\n          return resolve();\r\n        })\r\n        .pipe(job.client);\r\n    });\r\n  }\r\n\r\n  public getIp() {\r\n    return this.ip;\r\n  }\r\n\r\n  public getNewIp() {\r\n    return new Promise((resolve, reject) => {\r\n      this.vm.inspect((err: any, data: any) => {\r\n        if (err || !data || !data.NetworkSettings || !data.NetworkSettings.IPAddress\r\n          || data.NetworkSettings.IPAddress.length == 0) {\r\n          return reject(err || Error(\"unable to retrieve container IP\"));\r\n        }\r\n        this.ip = data.NetworkSettings.IPAddress;\r\n        resolve();\r\n      });\r\n    });\r\n  }\r\n\r\n  /*\r\n  * Cleans up the resources used by the container.\r\n  */\r\n  public cleanup(ignore: boolean = false) {\r\n    if (this.cleanedUp === true) {\r\n      return new Promise((resolve) => {\r\n        resolve();\r\n      });\r\n    }\r\n\r\n    const stages = [\r\n      this.vm.stop.bind(this.vm),\r\n      this.vm.remove.bind(this.vm, { force: true }),\r\n      (next: any) => {\r\n        this.cleanedUp = true;\r\n        async.nextTick(next);\r\n      }\r\n    ];\r\n    return new Promise((resolve, reject) => {\r\n      async.series(stages, (err) => {\r\n        if (err && !ignore) return reject(err);\r\n        resolve();\r\n      });\r\n    });\r\n  }\r\n}\r\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"707421ae7688dcef662229c4962da57bbafbfc99"}
,"/usr/src/app/src/docker_sandbox/job.ts": {"path":"/usr/src/app/src/docker_sandbox/job.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":5,"column":8},"end":{"line":5,"column":31}},"2":{"start":{"line":6,"column":8},"end":{"line":6,"column":33}},"3":{"start":{"line":7,"column":8},"end":{"line":7,"column":29}},"4":{"start":{"line":8,"column":8},"end":{"line":8,"column":31}},"5":{"start":{"line":11,"column":0},"end":{"line":11,"column":18}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":4},"end":{"line":4,"column":5}},"loc":{"start":{"line":4,"column":52},"end":{"line":9,"column":5}},"line":4}},"branchMap":{},"s":{"0":3,"1":0,"2":0,"3":0,"4":0,"5":3},"f":{"0":0},"b":{},"inputSourceMap":{"version":3,"file":"job.js","sourceRoot":"","sources":["job.ts"],"names":[],"mappings":";;AAIA;IAMI,YAAY,MAAgB,EAAE,OAAY,EAAE,OAAe,EAAE,QAA0C;QACnG,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACzB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IAC3B,CAAC;CACJ;AAZD,kBAYC","sourcesContent":["import { Response } from \"express\";\r\n\r\nimport { default as Container } from \"./container\";\r\n\r\nexport class Job {\r\n    public callback: (err: any, result?: any) => void;\r\n    public request: any;\r\n    public client: Response;\r\n    public timeout: number;\r\n\r\n    constructor(client: Response, request: any, timeout: number, callback: (err: any, result?: any) => void) {\r\n        this.request = request;\r\n        this.callback = callback;\r\n        this.client = client;\r\n        this.timeout = timeout;\r\n    }\r\n}\r\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"e2e5894656f6d08ccedc3954fdda35de4b972d35"}
,"/usr/src/app/src/docker_sandbox/pool_manager.ts": {"path":"/usr/src/app/src/docker_sandbox/pool_manager.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":9,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":8,"column":7}},"2":{"start":{"line":4,"column":36},"end":{"line":4,"column":97}},"3":{"start":{"line":4,"column":42},"end":{"line":4,"column":70}},"4":{"start":{"line":4,"column":85},"end":{"line":4,"column":95}},"5":{"start":{"line":5,"column":35},"end":{"line":5,"column":100}},"6":{"start":{"line":5,"column":41},"end":{"line":5,"column":73}},"7":{"start":{"line":5,"column":88},"end":{"line":5,"column":98}},"8":{"start":{"line":6,"column":32},"end":{"line":6,"column":149}},"9":{"start":{"line":6,"column":97},"end":{"line":6,"column":119}},"10":{"start":{"line":7,"column":8},"end":{"line":7,"column":78}},"11":{"start":{"line":10,"column":0},"end":{"line":10,"column":62}},"12":{"start":{"line":11,"column":10},"end":{"line":11,"column":27}},"13":{"start":{"line":12,"column":13},"end":{"line":12,"column":31}},"14":{"start":{"line":13,"column":20},"end":{"line":13,"column":42}},"15":{"start":{"line":16,"column":8},"end":{"line":16,"column":30}},"16":{"start":{"line":17,"column":8},"end":{"line":17,"column":38}},"17":{"start":{"line":18,"column":8},"end":{"line":18,"column":36}},"18":{"start":{"line":19,"column":8},"end":{"line":19,"column":29}},"19":{"start":{"line":20,"column":8},"end":{"line":20,"column":31}},"20":{"start":{"line":30,"column":8},"end":{"line":31,"column":45}},"21":{"start":{"line":31,"column":12},"end":{"line":31,"column":45}},"22":{"start":{"line":32,"column":25},"end":{"line":32,"column":27}},"23":{"start":{"line":33,"column":8},"end":{"line":35,"column":9}},"24":{"start":{"line":34,"column":12},"end":{"line":34,"column":51}},"25":{"start":{"line":36,"column":8},"end":{"line":36,"column":37}},"26":{"start":{"line":42,"column":8},"end":{"line":47,"column":9}},"27":{"start":{"line":43,"column":12},"end":{"line":43,"column":39}},"28":{"start":{"line":46,"column":12},"end":{"line":46,"column":34}},"29":{"start":{"line":55,"column":8},"end":{"line":73,"column":11}},"30":{"start":{"line":56,"column":12},"end":{"line":57,"column":84}},"31":{"start":{"line":57,"column":16},"end":{"line":57,"column":84}},"32":{"start":{"line":58,"column":30},"end":{"line":58,"column":62}},"33":{"start":{"line":59,"column":12},"end":{"line":65,"column":13}},"34":{"start":{"line":60,"column":28},"end":{"line":60,"column":59}},"35":{"start":{"line":61,"column":16},"end":{"line":61,"column":45}},"36":{"start":{"line":64,"column":16},"end":{"line":64,"column":34}},"37":{"start":{"line":66,"column":12},"end":{"line":66,"column":36}},"38":{"start":{"line":67,"column":12},"end":{"line":72,"column":13}},"39":{"start":{"line":68,"column":16},"end":{"line":68,"column":40}},"40":{"start":{"line":71,"column":16},"end":{"line":71,"column":40}},"41":{"start":{"line":82,"column":27},"end":{"line":82,"column":82}},"42":{"start":{"line":83,"column":25},"end":{"line":83,"column":27}},"43":{"start":{"line":84,"column":8},"end":{"line":86,"column":11}},"44":{"start":{"line":85,"column":12},"end":{"line":85,"column":39}},"45":{"start":{"line":87,"column":8},"end":{"line":87,"column":44}},"46":{"start":{"line":88,"column":8},"end":{"line":88,"column":37}},"47":{"start":{"line":101,"column":8},"end":{"line":115,"column":11}},"48":{"start":{"line":103,"column":12},"end":{"line":113,"column":13}},"49":{"start":{"line":104,"column":16},"end":{"line":104,"column":64}},"50":{"start":{"line":105,"column":16},"end":{"line":105,"column":54}},"51":{"start":{"line":106,"column":16},"end":{"line":106,"column":56}},"52":{"start":{"line":109,"column":16},"end":{"line":111,"column":17}},"53":{"start":{"line":110,"column":20},"end":{"line":110,"column":50}},"54":{"start":{"line":112,"column":16},"end":{"line":112,"column":26}},"55":{"start":{"line":114,"column":12},"end":{"line":114,"column":29}},"56":{"start":{"line":122,"column":8},"end":{"line":130,"column":11}},"57":{"start":{"line":123,"column":12},"end":{"line":129,"column":15}},"58":{"start":{"line":124,"column":16},"end":{"line":125,"column":39}},"59":{"start":{"line":125,"column":20},"end":{"line":125,"column":39}},"60":{"start":{"line":126,"column":34},"end":{"line":126,"column":75}},"61":{"start":{"line":127,"column":16},"end":{"line":127,"column":55}},"62":{"start":{"line":128,"column":16},"end":{"line":128,"column":35}},"63":{"start":{"line":137,"column":8},"end":{"line":144,"column":11}},"64":{"start":{"line":138,"column":12},"end":{"line":143,"column":15}},"65":{"start":{"line":139,"column":16},"end":{"line":141,"column":17}},"66":{"start":{"line":140,"column":20},"end":{"line":140,"column":37}},"67":{"start":{"line":142,"column":16},"end":{"line":142,"column":28}},"68":{"start":{"line":151,"column":8},"end":{"line":151,"column":36}},"69":{"start":{"line":154,"column":26},"end":{"line":156,"column":10}},"70":{"start":{"line":155,"column":12},"end":{"line":155,"column":36}},"71":{"start":{"line":157,"column":8},"end":{"line":159,"column":9}},"72":{"start":{"line":158,"column":12},"end":{"line":158,"column":47}},"73":{"start":{"line":165,"column":22},"end":{"line":165,"column":63}},"74":{"start":{"line":166,"column":8},"end":{"line":168,"column":9}},"75":{"start":{"line":167,"column":12},"end":{"line":167,"column":52}},"76":{"start":{"line":169,"column":8},"end":{"line":169,"column":49}},"77":{"start":{"line":170,"column":8},"end":{"line":173,"column":9}},"78":{"start":{"line":171,"column":24},"end":{"line":171,"column":48}},"79":{"start":{"line":172,"column":12},"end":{"line":172,"column":34}},"80":{"start":{"line":176,"column":0},"end":{"line":176,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":3,"column":36},"end":{"line":3,"column":37}},"loc":{"start":{"line":3,"column":63},"end":{"line":8,"column":5}},"line":3},"2":{"name":"fulfilled","decl":{"start":{"line":4,"column":17},"end":{"line":4,"column":26}},"loc":{"start":{"line":4,"column":34},"end":{"line":4,"column":99}},"line":4},"3":{"name":"rejected","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":25}},"loc":{"start":{"line":5,"column":33},"end":{"line":5,"column":102}},"line":5},"4":{"name":"step","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":21}},"loc":{"start":{"line":6,"column":30},"end":{"line":6,"column":151}},"line":6},"5":{"name":"(anonymous_5)","decl":{"start":{"line":6,"column":76},"end":{"line":6,"column":77}},"loc":{"start":{"line":6,"column":95},"end":{"line":6,"column":121}},"line":6},"6":{"name":"(anonymous_6)","decl":{"start":{"line":15,"column":4},"end":{"line":15,"column":5}},"loc":{"start":{"line":15,"column":33},"end":{"line":21,"column":5}},"line":15},"7":{"name":"(anonymous_7)","decl":{"start":{"line":29,"column":4},"end":{"line":29,"column":5}},"loc":{"start":{"line":29,"column":21},"end":{"line":37,"column":5}},"line":29},"8":{"name":"(anonymous_8)","decl":{"start":{"line":41,"column":4},"end":{"line":41,"column":5}},"loc":{"start":{"line":41,"column":20},"end":{"line":48,"column":5}},"line":41},"9":{"name":"(anonymous_9)","decl":{"start":{"line":54,"column":4},"end":{"line":54,"column":5}},"loc":{"start":{"line":54,"column":21},"end":{"line":74,"column":5}},"line":54},"10":{"name":"(anonymous_10)","decl":{"start":{"line":55,"column":47},"end":{"line":55,"column":48}},"loc":{"start":{"line":55,"column":60},"end":{"line":73,"column":9}},"line":55},"11":{"name":"(anonymous_11)","decl":{"start":{"line":81,"column":4},"end":{"line":81,"column":5}},"loc":{"start":{"line":81,"column":14},"end":{"line":89,"column":5}},"line":81},"12":{"name":"(anonymous_12)","decl":{"start":{"line":84,"column":27},"end":{"line":84,"column":28}},"loc":{"start":{"line":84,"column":34},"end":{"line":86,"column":9}},"line":84},"13":{"name":"(anonymous_13)","decl":{"start":{"line":100,"column":4},"end":{"line":100,"column":5}},"loc":{"start":{"line":100,"column":23},"end":{"line":116,"column":5}},"line":100},"14":{"name":"(anonymous_14)","decl":{"start":{"line":101,"column":47},"end":{"line":101,"column":48}},"loc":{"start":{"line":101,"column":60},"end":{"line":115,"column":9}},"line":101},"15":{"name":"(anonymous_15)","decl":{"start":{"line":121,"column":4},"end":{"line":121,"column":5}},"loc":{"start":{"line":121,"column":27},"end":{"line":131,"column":5}},"line":121},"16":{"name":"(anonymous_16)","decl":{"start":{"line":122,"column":27},"end":{"line":122,"column":28}},"loc":{"start":{"line":122,"column":48},"end":{"line":130,"column":9}},"line":122},"17":{"name":"(anonymous_17)","decl":{"start":{"line":123,"column":54},"end":{"line":123,"column":55}},"loc":{"start":{"line":123,"column":73},"end":{"line":129,"column":13}},"line":123},"18":{"name":"(anonymous_18)","decl":{"start":{"line":136,"column":4},"end":{"line":136,"column":5}},"loc":{"start":{"line":136,"column":31},"end":{"line":145,"column":5}},"line":136},"19":{"name":"(anonymous_19)","decl":{"start":{"line":137,"column":27},"end":{"line":137,"column":28}},"loc":{"start":{"line":137,"column":48},"end":{"line":144,"column":9}},"line":137},"20":{"name":"(anonymous_20)","decl":{"start":{"line":138,"column":31},"end":{"line":138,"column":32}},"loc":{"start":{"line":138,"column":40},"end":{"line":143,"column":13}},"line":138},"21":{"name":"(anonymous_21)","decl":{"start":{"line":150,"column":4},"end":{"line":150,"column":5}},"loc":{"start":{"line":150,"column":33},"end":{"line":152,"column":5}},"line":150},"22":{"name":"(anonymous_22)","decl":{"start":{"line":153,"column":4},"end":{"line":153,"column":5}},"loc":{"start":{"line":153,"column":26},"end":{"line":160,"column":5}},"line":153},"23":{"name":"(anonymous_23)","decl":{"start":{"line":154,"column":54},"end":{"line":154,"column":55}},"loc":{"start":{"line":154,"column":61},"end":{"line":156,"column":9}},"line":154},"24":{"name":"(anonymous_24)","decl":{"start":{"line":164,"column":4},"end":{"line":164,"column":5}},"loc":{"start":{"line":164,"column":34},"end":{"line":174,"column":5}},"line":164}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":9,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":9,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":16},"end":{"line":3,"column":34}},"type":"binary-expr","locations":[{"start":{"line":3,"column":16},"end":{"line":3,"column":17}},{"start":{"line":3,"column":22},"end":{"line":3,"column":33}}],"line":3},"2":{"loc":{"start":{"line":6,"column":32},"end":{"line":6,"column":148}},"type":"cond-expr","locations":[{"start":{"line":6,"column":46},"end":{"line":6,"column":67}},{"start":{"line":6,"column":70},"end":{"line":6,"column":148}}],"line":6},"3":{"loc":{"start":{"line":7,"column":51},"end":{"line":7,"column":67}},"type":"binary-expr","locations":[{"start":{"line":7,"column":51},"end":{"line":7,"column":61}},{"start":{"line":7,"column":65},"end":{"line":7,"column":67}}],"line":7},"4":{"loc":{"start":{"line":30,"column":8},"end":{"line":31,"column":45}},"type":"if","locations":[{"start":{"line":30,"column":8},"end":{"line":31,"column":45}},{"start":{"line":30,"column":8},"end":{"line":31,"column":45}}],"line":30},"5":{"loc":{"start":{"line":42,"column":8},"end":{"line":47,"column":9}},"type":"if","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":9}},{"start":{"line":42,"column":8},"end":{"line":47,"column":9}}],"line":42},"6":{"loc":{"start":{"line":56,"column":12},"end":{"line":57,"column":84}},"type":"if","locations":[{"start":{"line":56,"column":12},"end":{"line":57,"column":84}},{"start":{"line":56,"column":12},"end":{"line":57,"column":84}}],"line":56},"7":{"loc":{"start":{"line":109,"column":16},"end":{"line":111,"column":17}},"type":"if","locations":[{"start":{"line":109,"column":16},"end":{"line":111,"column":17}},{"start":{"line":109,"column":16},"end":{"line":111,"column":17}}],"line":109},"8":{"loc":{"start":{"line":109,"column":20},"end":{"line":109,"column":50}},"type":"binary-expr","locations":[{"start":{"line":109,"column":20},"end":{"line":109,"column":29}},{"start":{"line":109,"column":33},"end":{"line":109,"column":50}}],"line":109},"9":{"loc":{"start":{"line":124,"column":16},"end":{"line":125,"column":39}},"type":"if","locations":[{"start":{"line":124,"column":16},"end":{"line":125,"column":39}},{"start":{"line":124,"column":16},"end":{"line":125,"column":39}}],"line":124},"10":{"loc":{"start":{"line":139,"column":16},"end":{"line":141,"column":17}},"type":"if","locations":[{"start":{"line":139,"column":16},"end":{"line":141,"column":17}},{"start":{"line":139,"column":16},"end":{"line":141,"column":17}}],"line":139},"11":{"loc":{"start":{"line":157,"column":8},"end":{"line":159,"column":9}},"type":"if","locations":[{"start":{"line":157,"column":8},"end":{"line":159,"column":9}},{"start":{"line":157,"column":8},"end":{"line":159,"column":9}}],"line":157},"12":{"loc":{"start":{"line":166,"column":8},"end":{"line":168,"column":9}},"type":"if","locations":[{"start":{"line":166,"column":8},"end":{"line":168,"column":9}},{"start":{"line":166,"column":8},"end":{"line":168,"column":9}}],"line":166},"13":{"loc":{"start":{"line":170,"column":8},"end":{"line":173,"column":9}},"type":"if","locations":[{"start":{"line":170,"column":8},"end":{"line":173,"column":9}},{"start":{"line":170,"column":8},"end":{"line":173,"column":9}}],"line":170}},"s":{"0":3,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":3,"12":3,"13":3,"14":3,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":3},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0},"b":{"0":[3,3,3],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0]},"inputSourceMap":{"version":3,"file":"pool_manager.js","sourceRoot":"","sources":["pool_manager.ts"],"names":[],"mappings":"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","sourcesContent":["import * as _ from \"lodash\";\r\nimport * as async from \"async\";\r\nimport * as Docker from \"dockerode\";\r\nimport * as uuid from \"uuid/v4\";\r\n\r\nimport { default as Container } from \"./container\";\r\nimport { Job } from \"./job\";\r\n\r\nexport default class PoolManager {\r\n  private waitingJobs: Job[];\r\n  private availableContainers: Container[];\r\n  private bootingContainers: Container[];\r\n  private docker: Docker;\r\n  private options: any;\r\n\r\n  constructor(docker: Docker, options: Docker.ContainerCreateOptions) {\r\n    this.waitingJobs = [];\r\n    this.availableContainers = [];\r\n    this.bootingContainers = [];\r\n    this.docker = docker;\r\n    this.options = options;\r\n  }\r\n\r\n  /*\r\n   * Start a number of containers equals to the size of the pool.\r\n   *\r\n   * After creating the containers, the call to the user callback will be\r\n   * intentionally delayed to give the containers the time to initialize and be\r\n   * ready\r\n   */\r\n  public initialize(size: number) {\r\n    if (size <= 0)\r\n      throw Error(\"invalid pool size\");\r\n\r\n    const promises: Promise<any>[] = [];\r\n\r\n    for (let i = 0; i < size; i++) {\r\n      promises.push(this._createContainer());\r\n    }\r\n\r\n    return Promise.all(promises);\r\n  }\r\n\r\n  /*\r\n   * Asynchronously runs a job in the pool.\r\n   */\r\n  public executeJob(job: Job) {\r\n    if (_.isEmpty(this.availableContainers)) {\r\n      this.waitingJobs.push(job);\r\n    }\r\n    else {\r\n      this._executeJob(job);\r\n    }\r\n  }\r\n\r\n  /*\r\n   * Private method.\r\n   * Assumes there is at least one container available, and runs\r\n   * the job in it\r\n   */\r\n  private async _executeJob(job: Job) {\r\n    if (_.isEmpty(this.availableContainers))\r\n      throw Error(\"no containers available, but there should have been!\");\r\n\r\n    const container = this.availableContainers.shift();\r\n\r\n    try {\r\n      const res = await container.executeJob(job);\r\n      job.callback(undefined, res);\r\n    }\r\n    catch (err) {\r\n      job.callback(err);\r\n    }\r\n\r\n    container.cleanup(true);\r\n\r\n    try {\r\n      this._createContainer();\r\n    }\r\n    catch {\r\n      container.cleanup(true);\r\n    }\r\n  }\r\n\r\n  /*\r\n   * Cleanups the containers in the pool\r\n   *\r\n   * 1) Empty the list of available containers\r\n   * 2) Clean up every container who was in there\r\n   */\r\n  public cleanup() {\r\n    const containers = this.availableContainers.concat(this.bootingContainers);\r\n    const cleanups: Promise<any>[] = [];\r\n\r\n    containers.forEach((c) => {\r\n      cleanups.push(c.cleanup());\r\n    });\r\n\r\n    this.availableContainers.length = 0;\r\n\r\n    return Promise.all(cleanups);\r\n  }\r\n\r\n\r\n  /*\r\n   * Private method\r\n   * Initializes a new container and adds it to the pool\r\n   *\r\n   * 1) Create the container\r\n   * 2) Start the container\r\n   * 3) Retrieve various information (such as IP address) from the container\r\n   * 4) Wait until the container is ready\r\n   * 5) Add the container to the pool\r\n   */\r\n  private async _createContainer() {\r\n    let container: Container;\r\n    try {\r\n      container = <Container>await this._initializeContainer();\r\n      await this._startContainer(container);\r\n      await this._getContainerInfo(container);\r\n    }\r\n    catch (err) {\r\n      if (container && container.cleanup) {\r\n        await container.cleanup(true);\r\n      }\r\n      throw err;\r\n    }\r\n\r\n    return container;\r\n  }\r\n\r\n\r\n  /*\r\n   * Private method\r\n   * Initializes a new container\r\n   */\r\n  private _initializeContainer() {\r\n    return new Promise((resolve, reject) => {\r\n      this.docker.createContainer(this.options, (err, instance) => {\r\n        if (err) return reject(err);\r\n        const container = new Container(uuid(), instance);\r\n        this.bootingContainers.push(container);\r\n        resolve(container);\r\n      });\r\n    });\r\n  }\r\n\r\n  /*\r\n   * Private method\r\n   * Starts the specified container\r\n   */\r\n  private _startContainer(container: Container) {\r\n    return new Promise((resolve, reject) => {\r\n      container.vm.start((err: any) => {\r\n        if (!err) {\r\n          return resolve();\r\n        }\r\n        reject(err);\r\n      });\r\n    });\r\n  }\r\n\r\n  /*\r\n   * Private method\r\n   * Retrieves info of a container\r\n   */\r\n  private _getContainerInfo(container: Container) {\r\n    return container.getNewIp();\r\n  }\r\n\r\n  public registerContainer(ip: string) {\r\n    const container: Container = this.bootingContainers.find((c) => {\r\n      return c.getIp() === ip;\r\n    });\r\n    if (container) {\r\n      this._registerContainer(container);\r\n    }\r\n  }\r\n\r\n  /*\r\n   * Registers a container to the pool\r\n   */\r\n  private _registerContainer(container: Container) {\r\n    const index = this.bootingContainers.indexOf(container);\r\n    if (index >= 0) {\r\n      this.bootingContainers.splice(index, 1);\r\n    }\r\n    this.availableContainers.push(container);\r\n    if (!_.isEmpty(this.waitingJobs)) {\r\n      const job = this.waitingJobs.shift();\r\n      this._executeJob(job);\r\n    }\r\n  }\r\n}\r\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"77e55daf23ef985814a53edc1310adc8c5cd7d2b"}
,"/usr/src/app/src/docker_sandbox/sandbox.ts": {"path":"/usr/src/app/src/docker_sandbox/sandbox.ts","statementMap":{"0":{"start":{"line":2,"column":16},"end":{"line":9,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":8,"column":7}},"2":{"start":{"line":4,"column":36},"end":{"line":4,"column":97}},"3":{"start":{"line":4,"column":42},"end":{"line":4,"column":70}},"4":{"start":{"line":4,"column":85},"end":{"line":4,"column":95}},"5":{"start":{"line":5,"column":35},"end":{"line":5,"column":100}},"6":{"start":{"line":5,"column":41},"end":{"line":5,"column":73}},"7":{"start":{"line":5,"column":88},"end":{"line":5,"column":98}},"8":{"start":{"line":6,"column":32},"end":{"line":6,"column":149}},"9":{"start":{"line":6,"column":97},"end":{"line":6,"column":119}},"10":{"start":{"line":7,"column":8},"end":{"line":7,"column":78}},"11":{"start":{"line":10,"column":0},"end":{"line":10,"column":62}},"12":{"start":{"line":11,"column":23},"end":{"line":11,"column":48}},"13":{"start":{"line":12,"column":14},"end":{"line":12,"column":30}},"14":{"start":{"line":13,"column":15},"end":{"line":13,"column":35}},"15":{"start":{"line":14,"column":17},"end":{"line":14,"column":36}},"16":{"start":{"line":15,"column":13},"end":{"line":15,"column":22}},"17":{"start":{"line":16,"column":0},"end":{"line":42,"column":2}},"18":{"start":{"line":45,"column":8},"end":{"line":45,"column":49}},"19":{"start":{"line":46,"column":8},"end":{"line":46,"column":93}},"20":{"start":{"line":47,"column":8},"end":{"line":47,"column":31}},"21":{"start":{"line":48,"column":8},"end":{"line":48,"column":35}},"22":{"start":{"line":49,"column":8},"end":{"line":49,"column":88}},"23":{"start":{"line":50,"column":30},"end":{"line":50,"column":54}},"24":{"start":{"line":51,"column":26},"end":{"line":51,"column":55}},"25":{"start":{"line":52,"column":8},"end":{"line":54,"column":11}},"26":{"start":{"line":53,"column":12},"end":{"line":53,"column":41}},"27":{"start":{"line":57,"column":8},"end":{"line":64,"column":9}},"28":{"start":{"line":58,"column":12},"end":{"line":58,"column":49}},"29":{"start":{"line":59,"column":12},"end":{"line":63,"column":15}},"30":{"start":{"line":61,"column":16},"end":{"line":61,"column":93}},"31":{"start":{"line":62,"column":16},"end":{"line":62,"column":31}},"32":{"start":{"line":65,"column":8},"end":{"line":65,"column":29}},"33":{"start":{"line":72,"column":8},"end":{"line":72,"column":62}},"34":{"start":{"line":78,"column":8},"end":{"line":85,"column":11}},"35":{"start":{"line":79,"column":24},"end":{"line":83,"column":14}},"36":{"start":{"line":80,"column":16},"end":{"line":81,"column":32}},"37":{"start":{"line":81,"column":20},"end":{"line":81,"column":32}},"38":{"start":{"line":82,"column":16},"end":{"line":82,"column":32}},"39":{"start":{"line":84,"column":12},"end":{"line":84,"column":41}},"40":{"start":{"line":88,"column":8},"end":{"line":88,"column":43}},"41":{"start":{"line":95,"column":8},"end":{"line":97,"column":11}},"42":{"start":{"line":96,"column":12},"end":{"line":96,"column":41}},"43":{"start":{"line":100,"column":0},"end":{"line":100,"column":26}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":44},"end":{"line":2,"column":45}},"loc":{"start":{"line":2,"column":89},"end":{"line":9,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":3,"column":36},"end":{"line":3,"column":37}},"loc":{"start":{"line":3,"column":63},"end":{"line":8,"column":5}},"line":3},"2":{"name":"fulfilled","decl":{"start":{"line":4,"column":17},"end":{"line":4,"column":26}},"loc":{"start":{"line":4,"column":34},"end":{"line":4,"column":99}},"line":4},"3":{"name":"rejected","decl":{"start":{"line":5,"column":17},"end":{"line":5,"column":25}},"loc":{"start":{"line":5,"column":33},"end":{"line":5,"column":102}},"line":5},"4":{"name":"step","decl":{"start":{"line":6,"column":17},"end":{"line":6,"column":21}},"loc":{"start":{"line":6,"column":30},"end":{"line":6,"column":151}},"line":6},"5":{"name":"(anonymous_5)","decl":{"start":{"line":6,"column":76},"end":{"line":6,"column":77}},"loc":{"start":{"line":6,"column":95},"end":{"line":6,"column":121}},"line":6},"6":{"name":"(anonymous_6)","decl":{"start":{"line":15,"column":13},"end":{"line":15,"column":14}},"loc":{"start":{"line":15,"column":19},"end":{"line":15,"column":22}},"line":15},"7":{"name":"(anonymous_7)","decl":{"start":{"line":44,"column":4},"end":{"line":44,"column":5}},"loc":{"start":{"line":44,"column":25},"end":{"line":55,"column":5}},"line":44},"8":{"name":"(anonymous_8)","decl":{"start":{"line":52,"column":26},"end":{"line":52,"column":27}},"loc":{"start":{"line":52,"column":35},"end":{"line":54,"column":9}},"line":52},"9":{"name":"(anonymous_9)","decl":{"start":{"line":56,"column":4},"end":{"line":56,"column":5}},"loc":{"start":{"line":56,"column":32},"end":{"line":66,"column":5}},"line":56},"10":{"name":"(anonymous_10)","decl":{"start":{"line":60,"column":23},"end":{"line":60,"column":24}},"loc":{"start":{"line":60,"column":32},"end":{"line":63,"column":13}},"line":60},"11":{"name":"(anonymous_11)","decl":{"start":{"line":71,"column":4},"end":{"line":71,"column":5}},"loc":{"start":{"line":71,"column":17},"end":{"line":73,"column":5}},"line":71},"12":{"name":"(anonymous_12)","decl":{"start":{"line":77,"column":4},"end":{"line":77,"column":5}},"loc":{"start":{"line":77,"column":34},"end":{"line":86,"column":5}},"line":77},"13":{"name":"(anonymous_13)","decl":{"start":{"line":78,"column":28},"end":{"line":78,"column":29}},"loc":{"start":{"line":78,"column":49},"end":{"line":85,"column":9}},"line":78},"14":{"name":"(anonymous_14)","decl":{"start":{"line":79,"column":64},"end":{"line":79,"column":65}},"loc":{"start":{"line":79,"column":81},"end":{"line":83,"column":13}},"line":79},"15":{"name":"(anonymous_15)","decl":{"start":{"line":87,"column":4},"end":{"line":87,"column":5}},"loc":{"start":{"line":87,"column":21},"end":{"line":89,"column":5}},"line":87},"16":{"name":"(anonymous_16)","decl":{"start":{"line":94,"column":4},"end":{"line":94,"column":5}},"loc":{"start":{"line":94,"column":16},"end":{"line":98,"column":5}},"line":94},"17":{"name":"(anonymous_17)","decl":{"start":{"line":95,"column":47},"end":{"line":95,"column":48}},"loc":{"start":{"line":95,"column":60},"end":{"line":97,"column":9}},"line":95}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":16},"end":{"line":9,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":17},"end":{"line":2,"column":21}},{"start":{"line":2,"column":25},"end":{"line":2,"column":39}},{"start":{"line":2,"column":44},"end":{"line":9,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":16},"end":{"line":3,"column":34}},"type":"binary-expr","locations":[{"start":{"line":3,"column":16},"end":{"line":3,"column":17}},{"start":{"line":3,"column":22},"end":{"line":3,"column":33}}],"line":3},"2":{"loc":{"start":{"line":6,"column":32},"end":{"line":6,"column":148}},"type":"cond-expr","locations":[{"start":{"line":6,"column":46},"end":{"line":6,"column":67}},{"start":{"line":6,"column":70},"end":{"line":6,"column":148}}],"line":6},"3":{"loc":{"start":{"line":7,"column":51},"end":{"line":7,"column":67}},"type":"binary-expr","locations":[{"start":{"line":7,"column":51},"end":{"line":7,"column":61}},{"start":{"line":7,"column":65},"end":{"line":7,"column":67}}],"line":7},"4":{"loc":{"start":{"line":45,"column":27},"end":{"line":45,"column":48}},"type":"binary-expr","locations":[{"start":{"line":45,"column":27},"end":{"line":45,"column":43}},{"start":{"line":45,"column":47},"end":{"line":45,"column":48}}],"line":45},"5":{"loc":{"start":{"line":46,"column":53},"end":{"line":46,"column":81}},"type":"binary-expr","locations":[{"start":{"line":46,"column":53},"end":{"line":46,"column":74}},{"start":{"line":46,"column":78},"end":{"line":46,"column":81}}],"line":46},"6":{"loc":{"start":{"line":57,"column":8},"end":{"line":64,"column":9}},"type":"if","locations":[{"start":{"line":57,"column":8},"end":{"line":64,"column":9}},{"start":{"line":57,"column":8},"end":{"line":64,"column":9}}],"line":57},"7":{"loc":{"start":{"line":80,"column":16},"end":{"line":81,"column":32}},"type":"if","locations":[{"start":{"line":80,"column":16},"end":{"line":81,"column":32}},{"start":{"line":80,"column":16},"end":{"line":81,"column":32}}],"line":80}},"s":{"0":3,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":3,"12":3,"13":3,"14":3,"15":3,"16":3,"17":3,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":3},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0},"b":{"0":[3,3,3],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"inputSourceMap":{"version":3,"file":"sandbox.js","sourceRoot":"","sources":["sandbox.ts"],"names":[],"mappings":"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","sourcesContent":["import * as Container from \"./container\";\r\nimport { default as PoolManager } from \"./pool_manager\";\r\nimport { Job } from \"./job\";\r\nimport * as fs from \"fs\";\r\nimport * as Docker from \"dockerode\";\r\nimport { Response } from \"express\";\r\nimport * as BPromise from \"bluebird\";\r\n\r\nimport { SandboxOpts } from \"./sandbox.types\";\r\n\r\nconst noop = () => { };\r\n\r\nexport const default_options: Docker.ContainerCreateOptions = {\r\n  Image: \"docker-sandbox\",\r\n  NetworkDisabled: false,\r\n  AttachStdin: false,\r\n  AttachStdout: false,\r\n  AttachStderr: false,\r\n  OpenStdin: false,\r\n  User: \"sandboxuser\",\r\n  Tty: false,\r\n  HostConfig: {\r\n    Memory: 100 * 1000000,\r\n    MemorySwap: -1,\r\n    Privileged: false,\r\n    Binds: [\r\n     /* `/usr/src/app/temp`,*/\r\n      /*`${process.cwd()}/sandbox/app:/usr/src/app`,*/\r\n      `${process.cwd()}/uploads:/usr/src/app/uploads:ro`,\r\n      `${process.env.MATLAB_DIR}:/usr/local/MATLAB:ro`,\r\n    ]\r\n  },\r\n  Labels: {\r\n    __docker_sandbox: \"1\"\r\n  },\r\n  ExposedPorts: {\r\n    \"3000/tcp\": {}\r\n  }\r\n};\r\n\r\nexport class Sandbox {\r\n  private options: SandboxOpts;\r\n  private docker: Docker;\r\n  private manager: PoolManager;\r\n  private static instance: Sandbox;\r\n\r\n  private constructor(options: SandboxOpts) {\r\n    options.poolSize = options.poolSize || 1;\r\n    default_options.HostConfig.Memory = (options.memoryLimitMb || 100) * 1000000;\r\n\r\n    this.options = options;\r\n\r\n    this.docker = new Docker();\r\n\r\n    this.manager = new PoolManager(this.docker, default_options);\r\n\r\n    const cleanupEvents = [\"beforeExit\", \"SIGINT\"];\r\n    const cleanupFn = this.cleanup.bind(this, true);\r\n    cleanupEvents.map(event => {\r\n      process.on(event, cleanupFn);\r\n    });\r\n  }\r\n\r\n  public static getInstance(options?: SandboxOpts) {\r\n    if (!this.instance) {\r\n      this.instance = new Sandbox(options);\r\n      this.instance.initialize()\r\n        .catch((err) => {\r\n          console.error(`Unable to initialize the sandbox container swarm:\\n\\t${err}`);\r\n          process.exit();\r\n        });\r\n    }\r\n    return this.instance;\r\n  }\r\n\r\n  /*\r\n   * Initializes the sandbox by creating the pool of\r\n   * containers\r\n   */\r\n  initialize() {\r\n    return this.manager.initialize(this.options.poolSize);\r\n  }\r\n\r\n  /*\r\n   * Runs the specifed code\r\n   */\r\n  public run(client: Response, timeout: number, request: any) {\r\n    return new BPromise((resolve, reject) => {\r\n      const job = new Job(client, request, timeout, (err: any, result: any) => {\r\n        if (err) reject(err);\r\n        resolve(result);\r\n      });\r\n      this.manager.executeJob(job);\r\n    });\r\n  }\r\n\r\n  public addContainer(ip: string) {\r\n    this.manager.registerContainer(ip);\r\n  }\r\n\r\n\r\n  /*\r\n   *  Cleanups various resources such as temporary\r\n   *  files and docker containers\r\n   */\r\n  public async cleanup(cb: Function) {\r\n    await this.manager.cleanup();\r\n  }\r\n}\r\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"3a52819aad3763edd6524841492934061fa4b18d"}
,"/usr/src/app/src/models/Application.ts": {"path":"/usr/src/app/src/models/Application.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":17},"end":{"line":3,"column":36}},"2":{"start":{"line":4,"column":15},"end":{"line":4,"column":32}},"3":{"start":{"line":6,"column":0},"end":{"line":9,"column":74}},"4":{"start":{"line":7,"column":4},"end":{"line":7,"column":64}},"5":{"start":{"line":8,"column":4},"end":{"line":8,"column":54}},"6":{"start":{"line":18,"column":24},"end":{"line":62,"column":18}},"7":{"start":{"line":63,"column":25},"end":{"line":74,"column":18}},"8":{"start":{"line":75,"column":21},"end":{"line":90,"column":18}},"9":{"start":{"line":91,"column":24},"end":{"line":141,"column":18}},"10":{"start":{"line":107,"column":16},"end":{"line":113,"column":17}},"11":{"start":{"line":108,"column":20},"end":{"line":112,"column":21}},"12":{"start":{"line":109,"column":24},"end":{"line":111,"column":25}},"13":{"start":{"line":110,"column":28},"end":{"line":110,"column":41}},"14":{"start":{"line":114,"column":16},"end":{"line":114,"column":28}},"15":{"start":{"line":123,"column":29},"end":{"line":123,"column":41}},"16":{"start":{"line":124,"column":16},"end":{"line":130,"column":17}},"17":{"start":{"line":125,"column":20},"end":{"line":129,"column":21}},"18":{"start":{"line":126,"column":24},"end":{"line":128,"column":25}},"19":{"start":{"line":127,"column":28},"end":{"line":127,"column":41}},"20":{"start":{"line":131,"column":16},"end":{"line":135,"column":17}},"21":{"start":{"line":132,"column":20},"end":{"line":134,"column":21}},"22":{"start":{"line":133,"column":24},"end":{"line":133,"column":37}},"23":{"start":{"line":136,"column":16},"end":{"line":136,"column":28}},"24":{"start":{"line":142,"column":18},"end":{"line":159,"column":2}},"25":{"start":{"line":160,"column":0},"end":{"line":166,"column":3}},"26":{"start":{"line":161,"column":16},"end":{"line":161,"column":20}},"27":{"start":{"line":162,"column":4},"end":{"line":164,"column":5}},"28":{"start":{"line":163,"column":8},"end":{"line":163,"column":86}},"29":{"start":{"line":165,"column":4},"end":{"line":165,"column":11}},"30":{"start":{"line":167,"column":0},"end":{"line":213,"column":3}},"31":{"start":{"line":168,"column":22},"end":{"line":168,"column":26}},"32":{"start":{"line":169,"column":21},"end":{"line":183,"column":5}},"33":{"start":{"line":184,"column":4},"end":{"line":197,"column":5}},"34":{"start":{"line":185,"column":22},"end":{"line":187,"column":10}},"35":{"start":{"line":186,"column":12},"end":{"line":186,"column":44}},"36":{"start":{"line":188,"column":18},"end":{"line":188,"column":53}},"37":{"start":{"line":189,"column":8},"end":{"line":196,"column":9}},"38":{"start":{"line":190,"column":12},"end":{"line":190,"column":39}},"39":{"start":{"line":191,"column":12},"end":{"line":191,"column":34}},"40":{"start":{"line":192,"column":12},"end":{"line":192,"column":47}},"41":{"start":{"line":194,"column":13},"end":{"line":196,"column":9}},"42":{"start":{"line":195,"column":12},"end":{"line":195,"column":48}},"43":{"start":{"line":198,"column":4},"end":{"line":211,"column":5}},"44":{"start":{"line":199,"column":22},"end":{"line":201,"column":10}},"45":{"start":{"line":200,"column":12},"end":{"line":200,"column":44}},"46":{"start":{"line":202,"column":8},"end":{"line":210,"column":9}},"47":{"start":{"line":203,"column":22},"end":{"line":203,"column":57}},"48":{"start":{"line":204,"column":12},"end":{"line":206,"column":13}},"49":{"start":{"line":205,"column":16},"end":{"line":205,"column":50}},"50":{"start":{"line":208,"column":13},"end":{"line":210,"column":9}},"51":{"start":{"line":209,"column":12},"end":{"line":209,"column":48}},"52":{"start":{"line":212,"column":4},"end":{"line":212,"column":11}},"53":{"start":{"line":214,"column":0},"end":{"line":220,"column":3}},"54":{"start":{"line":215,"column":22},"end":{"line":215,"column":26}},"55":{"start":{"line":216,"column":4},"end":{"line":218,"column":5}},"56":{"start":{"line":217,"column":8},"end":{"line":217,"column":88}},"57":{"start":{"line":219,"column":4},"end":{"line":219,"column":11}},"58":{"start":{"line":221,"column":20},"end":{"line":221,"column":60}},"59":{"start":{"line":222,"column":0},"end":{"line":222,"column":30}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":1},"end":{"line":6,"column":2}},"loc":{"start":{"line":6,"column":26},"end":{"line":9,"column":1}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":106,"column":23},"end":{"line":106,"column":24}},"loc":{"start":{"line":106,"column":35},"end":{"line":115,"column":13}},"line":106},"2":{"name":"(anonymous_2)","decl":{"start":{"line":122,"column":23},"end":{"line":122,"column":24}},"loc":{"start":{"line":122,"column":35},"end":{"line":137,"column":13}},"line":122},"3":{"name":"save","decl":{"start":{"line":160,"column":31},"end":{"line":160,"column":35}},"loc":{"start":{"line":160,"column":42},"end":{"line":166,"column":1}},"line":160},"4":{"name":"validate","decl":{"start":{"line":167,"column":41},"end":{"line":167,"column":49}},"loc":{"start":{"line":167,"column":56},"end":{"line":213,"column":1}},"line":167},"5":{"name":"(anonymous_5)","decl":{"start":{"line":185,"column":48},"end":{"line":185,"column":49}},"loc":{"start":{"line":185,"column":55},"end":{"line":187,"column":9}},"line":185},"6":{"name":"(anonymous_6)","decl":{"start":{"line":199,"column":48},"end":{"line":199,"column":49}},"loc":{"start":{"line":199,"column":55},"end":{"line":201,"column":9}},"line":199},"7":{"name":"save","decl":{"start":{"line":214,"column":37},"end":{"line":214,"column":41}},"loc":{"start":{"line":214,"column":48},"end":{"line":220,"column":1}},"line":214}},"branchMap":{"0":{"loc":{"start":{"line":9,"column":19},"end":{"line":9,"column":72}},"type":"binary-expr","locations":[{"start":{"line":9,"column":19},"end":{"line":9,"column":40}},{"start":{"line":9,"column":45},"end":{"line":9,"column":71}}],"line":9},"1":{"loc":{"start":{"line":109,"column":24},"end":{"line":111,"column":25}},"type":"if","locations":[{"start":{"line":109,"column":24},"end":{"line":111,"column":25}},{"start":{"line":109,"column":24},"end":{"line":111,"column":25}}],"line":109},"2":{"loc":{"start":{"line":126,"column":24},"end":{"line":128,"column":25}},"type":"if","locations":[{"start":{"line":126,"column":24},"end":{"line":128,"column":25}},{"start":{"line":126,"column":24},"end":{"line":128,"column":25}}],"line":126},"3":{"loc":{"start":{"line":132,"column":20},"end":{"line":134,"column":21}},"type":"if","locations":[{"start":{"line":132,"column":20},"end":{"line":134,"column":21}},{"start":{"line":132,"column":20},"end":{"line":134,"column":21}}],"line":132},"4":{"loc":{"start":{"line":162,"column":4},"end":{"line":164,"column":5}},"type":"if","locations":[{"start":{"line":162,"column":4},"end":{"line":164,"column":5}},{"start":{"line":162,"column":4},"end":{"line":164,"column":5}}],"line":162},"5":{"loc":{"start":{"line":162,"column":8},"end":{"line":162,"column":58}},"type":"binary-expr","locations":[{"start":{"line":162,"column":8},"end":{"line":162,"column":32}},{"start":{"line":162,"column":36},"end":{"line":162,"column":58}}],"line":162},"6":{"loc":{"start":{"line":184,"column":4},"end":{"line":197,"column":5}},"type":"if","locations":[{"start":{"line":184,"column":4},"end":{"line":197,"column":5}},{"start":{"line":184,"column":4},"end":{"line":197,"column":5}}],"line":184},"7":{"loc":{"start":{"line":189,"column":8},"end":{"line":196,"column":9}},"type":"if","locations":[{"start":{"line":189,"column":8},"end":{"line":196,"column":9}},{"start":{"line":189,"column":8},"end":{"line":196,"column":9}}],"line":189},"8":{"loc":{"start":{"line":194,"column":13},"end":{"line":196,"column":9}},"type":"if","locations":[{"start":{"line":194,"column":13},"end":{"line":196,"column":9}},{"start":{"line":194,"column":13},"end":{"line":196,"column":9}}],"line":194},"9":{"loc":{"start":{"line":198,"column":4},"end":{"line":211,"column":5}},"type":"if","locations":[{"start":{"line":198,"column":4},"end":{"line":211,"column":5}},{"start":{"line":198,"column":4},"end":{"line":211,"column":5}}],"line":198},"10":{"loc":{"start":{"line":202,"column":8},"end":{"line":210,"column":9}},"type":"if","locations":[{"start":{"line":202,"column":8},"end":{"line":210,"column":9}},{"start":{"line":202,"column":8},"end":{"line":210,"column":9}}],"line":202},"11":{"loc":{"start":{"line":204,"column":12},"end":{"line":206,"column":13}},"type":"if","locations":[{"start":{"line":204,"column":12},"end":{"line":206,"column":13}},{"start":{"line":204,"column":12},"end":{"line":206,"column":13}}],"line":204},"12":{"loc":{"start":{"line":208,"column":13},"end":{"line":210,"column":9}},"type":"if","locations":[{"start":{"line":208,"column":13},"end":{"line":210,"column":9}},{"start":{"line":208,"column":13},"end":{"line":210,"column":9}}],"line":208},"13":{"loc":{"start":{"line":216,"column":4},"end":{"line":218,"column":5}},"type":"if","locations":[{"start":{"line":216,"column":4},"end":{"line":218,"column":5}},{"start":{"line":216,"column":4},"end":{"line":218,"column":5}}],"line":216}},"s":{"0":3,"1":3,"2":3,"3":3,"4":3,"5":3,"6":3,"7":3,"8":3,"9":3,"10":2,"11":0,"12":0,"13":0,"14":2,"15":2,"16":2,"17":0,"18":0,"19":0,"20":2,"21":0,"22":0,"23":2,"24":3,"25":3,"26":5,"27":5,"28":5,"29":5,"30":3,"31":10,"32":10,"33":10,"34":10,"35":9,"36":10,"37":10,"38":0,"39":0,"40":0,"41":10,"42":0,"43":2,"44":2,"45":0,"46":2,"47":2,"48":2,"49":0,"50":0,"51":0,"52":2,"53":3,"54":2,"55":2,"56":2,"57":2,"58":3,"59":3},"f":{"0":3,"1":2,"2":2,"3":5,"4":10,"5":9,"6":0,"7":2},"b":{"0":[3,3],"1":[0,0],"2":[0,0],"3":[0,0],"4":[5,0],"5":[5,0],"6":[10,0],"7":[0,10],"8":[0,2],"9":[2,0],"10":[2,0],"11":[0,2],"12":[0,0],"13":[2,0]},"inputSourceMap":{"version":3,"file":"Application.js","sourceRoot":"","sources":["Application.ts"],"names":[],"mappings":"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","sourcesContent":["import * as mongoose from \"mongoose\";\r\nimport * as crypto from \"crypto\";\r\n\r\nimport { isString } from \"util\";\r\n\r\nexport type ApplicationModel = mongoose.Document & {\r\n  author: string,\r\n  name: string,\r\n  description?: string,\r\n  algorithms: AlgorithmModel[]\r\n};\r\n\r\nexport type AlgorithmModel = {\r\n  version: string,\r\n  description?: string,\r\n  entryApp: {\r\n    appName: string,\r\n    localFile: boolean\r\n  },\r\n  files: string[],\r\n  parameters: ParameterModel[],\r\n  output: OutputModel,\r\n  id?: string\r\n};\r\n\r\nexport type OutputModel = {\r\n  stdout?: {\r\n    alias: string,\r\n    extention: string\r\n  },\r\n  stderr?: {\r\n    alias: string\r\n  },\r\n  files?: FileOutputModel[],\r\n};\r\n\r\nexport type FileOutputModel = {\r\n  fileRgx: string,\r\n  extention: string,\r\n  encoding: string,\r\n  alias: string\r\n};\r\n\r\nexport type File = {\r\n  data: any,\r\n  rawData: string\r\n  extention: string,\r\n  encoding: string,\r\n};\r\n\r\nexport type ParameterModel = {\r\n  name: string,\r\n  type: ParameterType,\r\n  description?: string,\r\n  position: number,\r\n  flag?: string,\r\n  options: {\r\n    static: boolean,\r\n    required: boolean,\r\n    nArgs: {\r\n      max: number,\r\n      min?: number\r\n    },\r\n    defaultArgs: string[],\r\n  }\r\n};\r\n\r\nexport enum ParameterType {\r\n  Primitive,\r\n  File\r\n}\r\n\r\n/**\r\n *  name: Identifier of the param.\r\n *  type: Constraint of the values type.\r\n *  default: Default values to apply if parameter.values not present in request, if null parameter will not be included in the call.\r\n *  required: If parameter not present in request, the flag and default values are used if provided else an error is generated.\r\n *  static: Ignores values of the request and uses default values.\r\n *  localFile: If true, the values must refere to a name of a file present in the uploaded files.\r\n */\r\n\r\nconst parameterSchema = new mongoose.Schema({\r\n  name: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  type: {\r\n    type: String,\r\n    required: true,\r\n    enum: [ParameterType.Primitive, ParameterType.File]\r\n  },\r\n  description: String,\r\n  flag: {\r\n    type: String,\r\n    minlength: 2\r\n  },\r\n  position: {\r\n    type: Number,\r\n    required: true\r\n  },\r\n  options: {\r\n    static: {\r\n      type: Boolean,\r\n      required: true\r\n    },\r\n    required: {\r\n      type: Boolean,\r\n      required: true\r\n    },\r\n    nArgs: {\r\n      max: {\r\n        type: Number,\r\n        min: 0\r\n      },\r\n      min: {\r\n        type: Number,\r\n        min: 0,\r\n        required: true\r\n      }\r\n    },\r\n    defaultArgs: {\r\n      type: [String],\r\n      default: undefined\r\n    },\r\n  }\r\n}, { _id: false });\r\n\r\nconst fileOutputSchema = new mongoose.Schema({\r\n  fileRgx: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  extention: String,\r\n  encoding: String,\r\n  alias: {\r\n    type: String,\r\n    required: true\r\n  }\r\n}, { _id: false });\r\n\r\nconst outputSchema = new mongoose.Schema({\r\n  files: [fileOutputSchema],\r\n  stdout: {\r\n    alias: {\r\n      default: \"stdout\",\r\n      type: String\r\n    },\r\n    extention: String\r\n  },\r\n  stderr: {\r\n    alias: {\r\n      default: \"stderr\",\r\n      type: String\r\n    }\r\n  }\r\n}, { _id: false });\r\n\r\nconst algorithmSchema = new mongoose.Schema({\r\n  version: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  id: String,\r\n  description: String,\r\n  entryApp: {\r\n    appName: String,\r\n    localFile: Boolean,\r\n  },\r\n  files: [String],\r\n  parameters: {\r\n    type: [parameterSchema],\r\n    validate: {\r\n      validator: (params: ParameterModel[]) => {\r\n        for (let i = 0; i < params.length; i++) {\r\n          for (let n = i + 1; n < params.length; n++) {\r\n            if (params[i].name === params[n].name) {\r\n              return false;\r\n            }\r\n          }\r\n        }\r\n        return true;\r\n      },\r\n      message: \"Duplicate parameter name field\"\r\n    }\r\n  },\r\n  output: {\r\n    type: outputSchema,\r\n    validate: {\r\n      validator: (output: OutputModel) => {\r\n        const fout = output.files;\r\n        for (let i = 0; i < fout.length; i++) {\r\n          for (let n = i + 1; n < fout.length; n++) {\r\n            if (fout[i].alias === fout[n].alias) {\r\n              return false;\r\n            }\r\n          }\r\n        }\r\n        for (let i = 0; i < fout.length; i++) {\r\n          if (fout[i].alias === output.stdout.alias) {\r\n            return false;\r\n          }\r\n        }\r\n        return true;\r\n      },\r\n      message: \"Duplicate `alias` field name.\"\r\n    }\r\n  }\r\n}, { _id: false });\r\n\r\nconst appSchema = new mongoose.Schema({\r\n  author: {\r\n    type: String,\r\n    required: true,\r\n    minlength: 3\r\n  },\r\n  name: {\r\n    type: String,\r\n    required: true,\r\n    minlength: 3\r\n  },\r\n  id: {\r\n    type: String,\r\n    unique: true\r\n  },\r\n  description: String,\r\n  algorithms: [algorithmSchema]\r\n});\r\n\r\nappSchema.pre(\"save\", function save(next) {\r\n  const app = this;\r\n  if (app.isModified(\"author\") || app.isModified(\"name\")) {\r\n    app.id = crypto.createHash(\"md5\").update(app.name + app.author).digest(\"hex\");\r\n  }\r\n  next();\r\n});\r\n\r\nalgorithmSchema.pre(\"validate\", function validate(next) {\r\n  const algorithm = this;\r\n\r\n  const outParam: ParameterModel = {\r\n    name: \"outputDir\",\r\n    type: ParameterType.Primitive,\r\n    description: \"Output directory path. Files created by the aplication on this folder are read, parsed and returned.\",\r\n    position: algorithm.parameters.length,\r\n    options: {\r\n      static: true,\r\n      required: true,\r\n      nArgs: {\r\n        max: 1,\r\n        min: 1,\r\n      },\r\n      defaultArgs: [\"path/to/some/dir\"],\r\n    },\r\n  };\r\n\r\n  if (algorithm.isModified(\"parameters\")) {\r\n    const param = algorithm.parameters.find((p: any) => {\r\n      return p.name === outParam.name;\r\n    });\r\n\r\n    const i = algorithm.parameters.indexOf(param);\r\n\r\n    if (i !== -1) {\r\n      outParam.flag = param.flag;\r\n      outParam.position = i;\r\n      algorithm.parameters[i] = outParam;\r\n    }\r\n    else if (algorithm.output.files.length !== 0) {\r\n      algorithm.parameters.push(outParam);\r\n    }\r\n  }\r\n\r\n  if (algorithm.isModified(\"output\")) {\r\n    const param = algorithm.parameters.find((p: any) => {\r\n      return p.name === outParam.name;\r\n    });\r\n\r\n    if (algorithm.output.files.length === 0) {\r\n      const i = algorithm.parameters.indexOf(param);\r\n      if (i !== -1) {\r\n        algorithm.parameters.splice(i, 1);\r\n      }\r\n    }\r\n    else if (!param) {\r\n      algorithm.parameters.push(outParam);\r\n    }\r\n  }\r\n\r\n  next();\r\n});\r\n\r\nalgorithmSchema.pre(\"save\", function save(next) {\r\n  const algorithm = this;\r\n  if (algorithm.isModified(\"version\")) {\r\n    algorithm.id = crypto.createHash(\"md5\").update(algorithm.version).digest(\"hex\");\r\n  }\r\n\r\n  next();\r\n});\r\n\r\nconst Application = mongoose.model(\"Application\", appSchema);\r\nexport default Application;\r\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"da15fcbe1e5e66883e851184af6f2fa20a322f3b"}
,"/usr/src/app/src/utils/index.ts": {"path":"/usr/src/app/src/utils/index.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":14},"end":{"line":3,"column":32}},"2":{"start":{"line":4,"column":0},"end":{"line":4,"column":38}},"3":{"start":{"line":5,"column":0},"end":{"line":5,"column":32}},"4":{"start":{"line":6,"column":0},"end":{"line":6,"column":36}},"5":{"start":{"line":7,"column":0},"end":{"line":7,"column":40}}},"fnMap":{},"branchMap":{},"s":{"0":3,"1":3,"2":3,"3":3,"4":3,"5":3},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":";;AAAA,iCAAkE;AAAzD,4BAAA,SAAS,CAAA;AAAE,yBAAA,MAAM,CAAA;AAAE,2BAAA,QAAQ,CAAA;AAAE,6BAAA,UAAU,CAAA","sourcesContent":["export { isInteger, isBool, isString, mkdirsSync } from \"./utils\";\r\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"5929948b8fe8d3e800bba29478beb6a21d979ee6"}
,"/usr/src/app/src/utils/utils.ts": {"path":"/usr/src/app/src/utils/utils.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":13},"end":{"line":3,"column":28}},"2":{"start":{"line":4,"column":11},"end":{"line":4,"column":24}},"3":{"start":{"line":5,"column":15},"end":{"line":5,"column":30}},"4":{"start":{"line":7,"column":4},"end":{"line":9,"column":5}},"5":{"start":{"line":8,"column":8},"end":{"line":8,"column":58}},"6":{"start":{"line":10,"column":4},"end":{"line":10,"column":32}},"7":{"start":{"line":12,"column":0},"end":{"line":12,"column":28}},"8":{"start":{"line":14,"column":4},"end":{"line":14,"column":92}},"9":{"start":{"line":16,"column":0},"end":{"line":16,"column":24}},"10":{"start":{"line":18,"column":4},"end":{"line":20,"column":5}},"11":{"start":{"line":19,"column":8},"end":{"line":19,"column":45}},"12":{"start":{"line":21,"column":4},"end":{"line":21,"column":17}},"13":{"start":{"line":23,"column":0},"end":{"line":23,"column":30}},"14":{"start":{"line":25,"column":4},"end":{"line":38,"column":11}},"15":{"start":{"line":28,"column":8},"end":{"line":28,"column":41}},"16":{"start":{"line":29,"column":8},"end":{"line":36,"column":9}},"17":{"start":{"line":30,"column":12},"end":{"line":30,"column":38}},"18":{"start":{"line":33,"column":12},"end":{"line":35,"column":13}},"19":{"start":{"line":34,"column":16},"end":{"line":34,"column":26}},"20":{"start":{"line":37,"column":8},"end":{"line":37,"column":27}},"21":{"start":{"line":40,"column":0},"end":{"line":40,"column":32}}},"fnMap":{"0":{"name":"isString","decl":{"start":{"line":6,"column":9},"end":{"line":6,"column":17}},"loc":{"start":{"line":6,"column":29},"end":{"line":11,"column":1}},"line":6},"1":{"name":"isBool","decl":{"start":{"line":13,"column":9},"end":{"line":13,"column":15}},"loc":{"start":{"line":13,"column":21},"end":{"line":15,"column":1}},"line":13},"2":{"name":"isInteger","decl":{"start":{"line":17,"column":9},"end":{"line":17,"column":18}},"loc":{"start":{"line":17,"column":24},"end":{"line":22,"column":1}},"line":17},"3":{"name":"mkdirsSync","decl":{"start":{"line":24,"column":9},"end":{"line":24,"column":19}},"loc":{"start":{"line":24,"column":34},"end":{"line":39,"column":1}},"line":24},"4":{"name":"(anonymous_4)","decl":{"start":{"line":27,"column":16},"end":{"line":27,"column":17}},"loc":{"start":{"line":27,"column":41},"end":{"line":38,"column":5}},"line":27}},"branchMap":{"0":{"loc":{"start":{"line":7,"column":4},"end":{"line":9,"column":5}},"type":"if","locations":[{"start":{"line":7,"column":4},"end":{"line":9,"column":5}},{"start":{"line":7,"column":4},"end":{"line":9,"column":5}}],"line":7},"1":{"loc":{"start":{"line":8,"column":15},"end":{"line":8,"column":57}},"type":"binary-expr","locations":[{"start":{"line":8,"column":15},"end":{"line":8,"column":35}},{"start":{"line":8,"column":39},"end":{"line":8,"column":57}}],"line":8},"2":{"loc":{"start":{"line":14,"column":11},"end":{"line":14,"column":91}},"type":"binary-expr","locations":[{"start":{"line":14,"column":11},"end":{"line":14,"column":27}},{"start":{"line":14,"column":32},"end":{"line":14,"column":46}},{"start":{"line":14,"column":50},"end":{"line":14,"column":65}},{"start":{"line":14,"column":69},"end":{"line":14,"column":90}}],"line":14},"3":{"loc":{"start":{"line":18,"column":4},"end":{"line":20,"column":5}},"type":"if","locations":[{"start":{"line":18,"column":4},"end":{"line":20,"column":5}},{"start":{"line":18,"column":4},"end":{"line":20,"column":5}}],"line":18},"4":{"loc":{"start":{"line":33,"column":12},"end":{"line":35,"column":13}},"type":"if","locations":[{"start":{"line":33,"column":12},"end":{"line":35,"column":13}},{"start":{"line":33,"column":12},"end":{"line":35,"column":13}}],"line":33}},"s":{"0":3,"1":3,"2":3,"3":3,"4":39,"5":14,"6":25,"7":3,"8":8,"9":3,"10":0,"11":0,"12":0,"13":3,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":3},"f":{"0":39,"1":8,"2":0,"3":0,"4":0},"b":{"0":[14,25],"1":[14,10],"2":[8,0,0,0],"3":[0,0],"4":[0,0]},"inputSourceMap":{"version":3,"file":"utils.js","sourceRoot":"","sources":["utils.ts"],"names":[],"mappings":";;AAAA,6BAA6B;AAC7B,yBAAyB;AACzB,+BAA2E;AAE3E,kBAAyB,GAAQ,EAAE,IAAa;IAC9C,EAAE,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;QACT,MAAM,CAAC,eAAK,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,MAAM,IAAI,IAAI,CAAC;IAC1C,CAAC;IACD,MAAM,CAAC,eAAK,CAAC,GAAG,CAAC,CAAC;AACpB,CAAC;AALD,4BAKC;AAED,gBAAuB,GAAQ;IAC7B,MAAM,CAAC,GAAG,IAAI,SAAS,IAAI,CAAC,GAAG,KAAK,MAAM,IAAI,GAAG,KAAK,OAAO,IAAI,gBAAS,CAAC,GAAG,CAAC,CAAC,CAAC;AACnF,CAAC;AAFD,wBAEC;AAED,mBAA0B,GAAQ;IAChC,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,YAAY,KAAK,CAAC,CAAC,CAAC,CAAC;QAC5B,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;IACvC,CAAC;IACD,MAAM,CAAC,KAAK,CAAC;AACf,CAAC;AALD,8BAKC;AAED,oBAA2B,YAAoB;IAC7C,YAAY;SACT,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC;SACf,MAAM,CAAC,CAAC,WAAW,EAAE,MAAM,EAAE,EAAE;QAC9B,WAAW,IAAI,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC;QAEjC,IAAI,CAAC;YACH,EAAE,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;QAC5B,CAAC;QACD,KAAK,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YACX,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC;gBAC1B,MAAM,GAAG,CAAC;YACZ,CAAC;QACH,CAAC;QAED,MAAM,CAAC,WAAW,CAAC;IACrB,CAAC,EAAE,EAAE,CAAC,CAAC;AACX,CAAC;AAjBD,gCAiBC","sourcesContent":["import * as path from \"path\";\r\nimport * as fs from \"fs\";\r\nimport { isBoolean, isNumber, isString as isStr, isPrimitive } from \"util\";\r\n\r\nexport function isString(val: any, size?: number) {\r\n  if (size) {\r\n    return isStr(val) && val.length >= size;\r\n  }\r\n  return isStr(val);\r\n}\r\n\r\nexport function isBool(val: any) {\r\n  return val != undefined && (val === \"true\" || val === \"false\" || isBoolean(val));\r\n}\r\n\r\nexport function isInteger(val: any) {\r\n  if (!(val instanceof Array)) {\r\n    return Number.isInteger(Number(val));\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function mkdirsSync(pathToCreate: string) {\r\n  pathToCreate\r\n    .split(path.sep)\r\n    .reduce((currentPath, folder) => {\r\n      currentPath += folder + path.sep;\r\n\r\n      try {\r\n        fs.mkdirSync(currentPath);\r\n      }\r\n      catch (err) {\r\n        if (err.code !== \"EEXIST\") {\r\n          throw err;\r\n        }\r\n      }\r\n\r\n      return currentPath;\r\n    }, \"\");\r\n}\r\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"7c93186a64d8d5cd67ff33d4cfc89940280bebaa"}
,"/usr/src/app/test/app.mock.ts": {"path":"/usr/src/app/test/app.mock.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":16},"end":{"line":3,"column":34}},"2":{"start":{"line":4,"column":19},"end":{"line":4,"column":41}},"3":{"start":{"line":5,"column":15},"end":{"line":5,"column":39}},"4":{"start":{"line":7,"column":12},"end":{"line":7,"column":21}},"5":{"start":{"line":9,"column":0},"end":{"line":9,"column":27}},"6":{"start":{"line":10,"column":0},"end":{"line":10,"column":51}},"7":{"start":{"line":12,"column":0},"end":{"line":12,"column":18}},"8":{"start":{"line":13,"column":0},"end":{"line":13,"column":21}}},"fnMap":{},"branchMap":{},"s":{"0":3,"1":3,"2":3,"3":3,"4":3,"5":3,"6":3,"7":3,"8":3},"f":{},"b":{},"inputSourceMap":{"version":3,"file":"app.mock.js","sourceRoot":"","sources":["app.mock.ts"],"names":[],"mappings":";;AAAA,mCAAmC;AACnC,0CAA0C;AAE1C,wCAAwC;AAExC,wBAAwB;AACxB,MAAM,GAAG,GAAG,OAAO,EAAE,CAAC;AAEtB,wBAAwB;AACxB,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,CAAC;AAC3B,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;AAEnD,eAAe;AACf,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AAElB,MAAM,CAAC,OAAO,GAAG,GAAG,CAAC","sourcesContent":["import * as express from \"express\";\r\nimport * as bodyParser from \"body-parser\";\r\n\r\nimport * as routes from \"../src/routes\";\r\n\r\n// Create Express server\r\nconst app = express();\r\n\r\n// Express configuration\r\napp.use(bodyParser.json());\r\napp.use(bodyParser.urlencoded({ extended: true }));\r\n\r\n// Routes Setup\r\nroutes.setup(app);\r\n\r\nmodule.exports = app;\r\n"]},"_coverageSchema":"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c","hash":"339ea69f68f846790138901cba174ab70dc19eda"}
}
